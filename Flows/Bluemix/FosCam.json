[
  {
    "id": "290fbe80.d6f042",
    "type": "inject",
    "z": "d2eb9926.2d1468",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "86400",
    "crontab": "",
    "once": true,
    "x": 91,
    "y": 33,
    "wires": [
      [
        "3692cbc3.c96d34"
      ]
    ]
  },
  {
    "id": "f87978e4.078688",
    "type": "http request",
    "z": "d2eb9926.2d1468",
    "name": "",
    "method": "use",
    "ret": "txt",
    "url": "",
    "x": 765.9999389648438,
    "y": 28,
    "wires": [
      [
        "e54940fa.1ab6c"
      ]
    ]
  },
  {
    "id": "e54940fa.1ab6c",
    "type": "function",
    "z": "d2eb9926.2d1468",
    "name": "Initialize foscam",
    "func": "if (msg.statusCode=='200'){\nvar cam_name=msg.topic;\ncontext.global.FosCam[cam_name].Parameters={}\nvar foscam_params=msg.payload.replace(';','').split('\\n');\nfor (var i=0;i<foscam_params.length;i++){\n     foscam_params[i]=foscam_params[i].replace('var ','').replace(';','').replace('\\'','').replace('\\'','')\n     var str=foscam_params[i].split('=');\n     if (str[0].indexOf('http')!=-1 || str[0].indexOf('id')!=-1 || str[0].indexOf('ip')!=-1 ) context.global.FosCam[cam_name].Parameters[str[0]]={\"value\":str[1]}\n}\nnode.warn('Camera info: id '+context.global.FosCam[cam_name].Parameters.id.value+' internal ip: '+context.global.FosCam[cam_name].Parameters.ip.value)\nif(typeof(context.global.winkState.cameras)==='undefined') context.global.winkState.cameras={}\ncontext.global.winkState.cameras[cam_name]={\n \"name\": cam_name,\n\"object_type\": \"cameras\",\n\"eco_system\" : \"FOSCAM\",\n\"object_id\": context.global.FosCam[cam_name].Parameters.id.value,\n\"freeboard\": 0,\n\"manufacturer_device_model\": \"foscam\",\n\"connection\": true,\n\"capturing_audio\": true,\n\"capturing_video\": true,\n\"url\": CamUrl=\"http://\"+context.global.FosCam[cam_name].hostname+\"/videostream.cgi?user=\"+context.global.FosCam[cam_name].uid+\"&pwd=\"+context.global.FosCam[cam_name].pwd+\"&resolution=32&rate=0\",\n//\"snap_url\": SnapUrl=\"http://\"+context.global.FosCam[cam_name].hostname+\"/snapshot.cgi?user=\"+context.global.FosCam[cam_name].uid+\"&pwd=\"+context.global.FosCam[cam_name].pwd,\n\"snap_url\":SnapUrl=context.global.BlueMixUrlBase+\"/red/foscam_snapshot?token=\"+context.global.FREEBOARD_TOKEN+\"&Cameraname=\"+cam_name,\n\"history_url\": context.global.BlueMixUrlBase+\"/freeboard/cameraSnapshots?token=\"+context.global.FREEBOARD_TOKEN+\"&camera_name=\"+cam_name,\n\"refresh_time\":600,\n\"motion\":(typeof(context.global.FosCam[cam_name].Parameters.alarm_http_url)==='undefined' ? \"N/A\" : false)\n}\nif (typeof(context.global.FosCam[cam_name].Parameters.alarm_http_url)!=='undefined'){\n var camera=context.global.FosCam[cam_name]\n var ArmMsg={\n     topic:msg.topic,\n     url : 'http://'+camera.hostname+'/set_alarm.cgi?motion_armed=1&motion_sensitivity=5&http=1&http_url='+context.global.BlueMixUrlBase.replace('https','http')+'/red/foscam&user='+camera.uid+'&pwd='+camera.pwd,\n     method : \"GET\"\n }\n    node.send(ArmMsg)\n  }    \n }\n\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 955.9998779296875,
    "y": 28,
    "wires": [
      [
        "67898ad4.987674"
      ]
    ]
  },
  {
    "id": "bfb98abc.404678",
    "type": "function",
    "z": "d2eb9926.2d1468",
    "name": "generate foscam request url",
    "func": "if (typeof(context.global.FosCam)!=='undefined'){\n  var i=0;\n for (var key in context.global.FosCam)\n {\n    var camera=context.global.FosCam[key]\n    if (typeof(camera.model) !=='undefined' && camera.model=='HD')\n    {\n    newMsg={}\n    newMsg.topic=key\n    newMsg.model='HD'\n    newMsg.url='http://'+camera.hostname+'/cgi-bin/CGIProxy.fcgi?cmd=getDevInfo&usr='+camera.uid+'&pwd='+camera.pwd\n    newMsg.method=\"GET\"\n    node.send(newMsg)\n    node.warn(key+' HD')\n    } \n    else \n    {\n    newMsg={}\n    newMsg.topic=key\n    newMsg.model='SD'\n    newMsg.url='http://'+camera.hostname+'/get_params.cgi?user='+camera.uid+'&pwd='+camera.pwd\n    newMsg.method=\"POST\"\n    context.global.sendWithTimeout(node,newMsg,i);\n    node.warn(key);\n    i+=5000;\n    }\n }\n}\n\n",
    "outputs": 1,
    "noerr": 0,
    "x": 416.9998779296875,
    "y": 139,
    "wires": [
      [
        "150e90ce.eaf16f"
      ]
    ]
  },
  {
    "id": "3692cbc3.c96d34",
    "type": "delay",
    "z": "d2eb9926.2d1468",
    "name": "",
    "pauseType": "delay",
    "timeout": "30",
    "timeoutUnits": "seconds",
    "rate": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "x": 178.99996948242188,
    "y": 134,
    "wires": [
      [
        "bfb98abc.404678"
      ]
    ]
  },
  {
    "id": "937b913d.6c847",
    "type": "http in",
    "z": "d2eb9926.2d1468",
    "name": "",
    "url": "/red/foscam",
    "method": "get",
    "swaggerDoc": "",
    "x": 138,
    "y": 260,
    "wires": [
      [
        "fdd54f6.f022ab"
      ]
    ]
  },
  {
    "id": "fdd54f6.f022ab",
    "type": "function",
    "z": "d2eb9926.2d1468",
    "name": "",
    "func": "node.warn('foscam camera: reported motion')\nvar postMsg={\n    url:context.global.BlueMixUrlBase+'/red/wink/subscribtions',\n    method:\"POST\",\n        headers: {\n        \"Content-Type\":\"application/json\"\n    },\n    payload:{\n  capabilities: { sensor_types: [ { field: 'motion', type: 'boolean' } ] },\n  desired_state: {},\n  device_manufacturer: 'Foscam',\n  gang_id: null,\n  hidden_at: null,\n  last_event: \n   { brightness_occurred_at: null,\n     loudness_occurred_at: null,\n     vibration_occurred_at: null },\n  last_reading: \n   { \n       agent_session_id: 'FALSE',\n       connection: true,\n       motion: true,\n   },\n  manufacturer_device_model: 'foscam_virtual_motion_sensor',\n  model_name: 'Motion Sensor',\n  name: 'foscam',\n  object_id: 'Foscam01',\n  object_type: 'sensor_pod',\n  radio_type: 'wifi',\n  sensor_pod_id: 'Foscam01',\n  triggers: [],\n  units: {},\n  upc_code: 'motion_sensor',\n  upc_id: 'foscam01'\n  }\n}\nvar postMsg1=postMsg;\n//delay(50000);\nreturn([postMsg,postMsg1]);",
    "outputs": "2",
    "noerr": 0,
    "x": 304.99993896484375,
    "y": 259,
    "wires": [
      [
        "79d59a99.862a64"
      ],
      [
        "32d03874.cd2fc8"
      ]
    ]
  },
  {
    "id": "67898ad4.987674",
    "type": "http request",
    "z": "d2eb9926.2d1468",
    "name": "",
    "method": "use",
    "ret": "txt",
    "url": "",
    "x": 1168,
    "y": 28,
    "wires": [
      [
        "f73b60e1.08c4a"
      ]
    ]
  },
  {
    "id": "f73b60e1.08c4a",
    "type": "function",
    "z": "d2eb9926.2d1468",
    "name": "",
    "func": "var cam_name=msg.topic\nif ( msg.payload.indexOf('ok')!=-1) // && typeof(context.global.winkState.sensor_pods.foscam)==='undefined')\n{\n    node.warn('adding foscam sensor')\n    if (typeof(context.global.winkState.sensor_pods)==='undefined') context.global.winkState.sensor_pods={}\n    context.global.winkState.sensor_pods.foscam=\n    {\n    \"name\": \"foscam\",\n    \"object_type\": \"sensor_pods\",\n    \"object_id\": \"Foscam01\",\n    \"eco_system\" : \"FOSCAM\",\n    \"freeboard\": 0,\n    \"connection\": true,\n    \"motion\": false\n    }\n    if(typeof(context.global.winkDevCap)==='undefined') context.global.winkDevCap={}\n    context.global.winkDevCap.foscam=\n    {\n \"sensor_types\":[\n        {\n        \"field\": \"motion\",\n        \"type\": \"boolean\"\n        }\n    ],\n     \"fields\":[\n        {\n        \"field\": \"motion\",\n        \"type\": \"boolean\"\n        }\n    ]\n  }\n}\n            var msg ={\n                \"url\":context.global.BlueMixUrlBase+'/red/retrieve_activities?camera_name='+cam_name,\n                \"method\": \"GET\",\n                headers: {\n                    \"Authorization\":\"Bearer \"+context.global.FREEBOARD_TOKEN\n                }\n            }\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1348,
    "y": 28,
    "wires": [
      [
        "d44e36d1.2bb1c8"
      ]
    ]
  },
  {
    "id": "79d59a99.862a64",
    "type": "http request",
    "z": "d2eb9926.2d1468",
    "name": "",
    "method": "use",
    "ret": "txt",
    "url": "",
    "x": 839.9998779296875,
    "y": 253,
    "wires": [
      []
    ]
  },
  {
    "id": "db8aaf67.24755",
    "type": "http request",
    "z": "d2eb9926.2d1468",
    "name": "",
    "method": "use",
    "ret": "txt",
    "url": "",
    "x": 840.9998931884766,
    "y": 295,
    "wires": [
      []
    ]
  },
  {
    "id": "32d03874.cd2fc8",
    "type": "delay",
    "z": "d2eb9926.2d1468",
    "name": "",
    "pauseType": "delay",
    "timeout": "60",
    "timeoutUnits": "seconds",
    "rate": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "x": 468.9998779296875,
    "y": 294,
    "wires": [
      [
        "f1c6ca86.0e3938"
      ]
    ]
  },
  {
    "id": "f1c6ca86.0e3938",
    "type": "function",
    "z": "d2eb9926.2d1468",
    "name": "",
    "func": "msg.payload.last_reading.motion=false\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 640.9998931884766,
    "y": 294,
    "wires": [
      [
        "db8aaf67.24755"
      ]
    ]
  },
  {
    "id": "150e90ce.eaf16f",
    "type": "switch",
    "z": "d2eb9926.2d1468",
    "name": "FI89X - FI98x",
    "property": "model",
    "rules": [
      {
        "t": "eq",
        "v": "SD"
      },
      {
        "t": "eq",
        "v": "HD"
      }
    ],
    "checkall": "false",
    "outputs": 2,
    "x": 636.9998779296875,
    "y": 141,
    "wires": [
      [
        "f87978e4.078688"
      ],
      [
        "2288b6bc.dd774a"
      ]
    ]
  },
  {
    "id": "2288b6bc.dd774a",
    "type": "http request",
    "z": "d2eb9926.2d1468",
    "name": "",
    "method": "use",
    "ret": "txt",
    "url": "",
    "x": 721.9998779296875,
    "y": 201,
    "wires": [
      [
        "c3b04cb.f3c4fb"
      ]
    ]
  },
  {
    "id": "c3b04cb.f3c4fb",
    "type": "xml",
    "z": "d2eb9926.2d1468",
    "name": "",
    "attr": "$",
    "chr": "_",
    "x": 870.0000610351562,
    "y": 201,
    "wires": [
      [
        "6cda8e58.93257"
      ]
    ]
  },
  {
    "id": "6cda8e58.93257",
    "type": "function",
    "z": "d2eb9926.2d1468",
    "name": "Initialize Foscam HD",
    "func": "var cam_name=msg.topic;\nvar cam_model=msg.model;\nif('CGI_Result' in msg.payload && msg.payload.CGI_Result.result[0]=='0'){\ncontext.global.FosCam[cam_name].Parameters={}    \ncontext.global.FosCam[cam_name].Parameters.model=cam_model;\ncontext.global.FosCam[cam_name].Parameters.id={\"value\":msg.payload.CGI_Result.mac[0]}\nnode.warn('Camera info: id '+context.global.FosCam[cam_name].Parameters.id.value)\nif(typeof(context.global.winkState.cameras)==='undefined') context.global.winkState.cameras={}\ncontext.global.winkState.cameras[cam_name]={\n \"name\": cam_name,\n\"object_type\": \"cameras\",\n\"object_id\": context.global.FosCam[cam_name].Parameters.id.value,\n\"freeboard\": 0,\n\"manufacturer_device_model\": \"foscam\",\n\"connection\": true,\n\"capturing_audio\": true,\n\"capturing_video\": true,\n\"motion\":\"N/A\",\n\"url\":\"http://\"+context.global.FosCam[cam_name].hostname+\"/cgi-bin/CGIProxy.fcgi?cmd=snapPicture2&usr=\"+context.global.FosCam[cam_name].uid+\"&pwd=\"+context.global.FosCam[cam_name].pwd,\n//\"http://\"+context.global.FosCam[cam_name].hostname+\"/cgi-bin/CGIStream.cgi?cmd=GetMJStream&stream=true&usr=\"+context.global.FosCam[cam_name].uid+\"&pwd=\"+context.global.FosCam[cam_name].pwd,\n\"snap_url\":\"http://\"+context.global.FosCam[cam_name].hostname+\"/cgi-bin/CGIProxy.fcgi?cmd=snapPicture2&usr=\"+context.global.FosCam[cam_name].uid+\"&pwd=\"+context.global.FosCam[cam_name].pwd,\n\"history_url\": context.global.BlueMixUrlBase+\"/freeboard/cameraSnapshots?token=\"+context.global.FREEBOARD_TOKEN+\"&camera_name=\"+cam_name,\n\"refresh_time\":30,\n\"HD\":true\n//(typeof(context.global.FosCam[cam_name].Parameters.alarm_http_url)==='undefined' ? \"N/A\" : false)\n}\n var camera=context.global.FosCam[cam_name]\n var ArmMsg={\n     topic : cam_name,\n     url : 'http://'+camera.hostname+'/cgi-bin/CGIProxy.fcgi?usr='+camera.uid+'&pwd='+camera.pwd+'&cmd=setSubStreamFormat&format=1',\n     method : \"GET\"\n    }\n    node.send(ArmMsg)\n}\nelse{\n    node.warn('Camera: '+cam_name+' not responding.. removing')\n    if (cam_name in context.global.winkState.cameras) delete context.global.winkState.cameras[cam_name]\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 1030.0001220703125,
    "y": 201,
    "wires": [
      [
        "6509e4cc.9af61c"
      ]
    ]
  },
  {
    "id": "6509e4cc.9af61c",
    "type": "http request",
    "z": "d2eb9926.2d1468",
    "name": "",
    "method": "use",
    "ret": "txt",
    "url": "",
    "x": 1210,
    "y": 199,
    "wires": [
      [
        "fdd0e7f7.022f18"
      ]
    ]
  },
  {
    "id": "fdd0e7f7.022f18",
    "type": "xml",
    "z": "d2eb9926.2d1468",
    "name": "",
    "attr": "$",
    "chr": "_",
    "x": 1348,
    "y": 198,
    "wires": [
      [
        "b2b955f.f4d46a8"
      ]
    ]
  },
  {
    "id": "b2b955f.f4d46a8",
    "type": "function",
    "z": "d2eb9926.2d1468",
    "name": "",
    "func": "var cam_name=msg.topic;\nif('CGI_Result' in msg.payload && msg.payload.CGI_Result.result[0]!=='0'){\nnode.warn('Unable to setup MJpeg feed - removing camera')\ndelete context.global.winkState.cameras[cam_name]\n} else {\n    node.warn(cam_name+': Mjpeg feed set, ready to go')\n                var msg ={\n                \"url\":context.global.BlueMixUrlBase+'/red/retrieve_activities?camera_name='+cam_name,\n                \"method\": \"GET\",\n                headers: {\n                    \"Authorization\":\"Bearer \"+context.global.FREEBOARD_TOKEN\n                }\n            }\n    node.send(msg)\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 1477,
    "y": 196,
    "wires": [
      [
        "90965ffc.6f69a"
      ]
    ]
  },
  {
    "id": "d44e36d1.2bb1c8",
    "type": "http request",
    "z": "d2eb9926.2d1468",
    "name": "",
    "method": "use",
    "ret": "txt",
    "url": "",
    "x": 1541.9999084472656,
    "y": 24,
    "wires": [
      []
    ]
  },
  {
    "id": "90965ffc.6f69a",
    "type": "http request",
    "z": "d2eb9926.2d1468",
    "name": "",
    "method": "use",
    "ret": "txt",
    "url": "",
    "x": 1636.333252995103,
    "y": 202,
    "wires": [
      []
    ]
  },
  {
    "id": "505ea7f2.afa158",
    "type": "catch",
    "z": "d2eb9926.2d1468",
    "name": "",
    "x": 115,
    "y": 558,
    "wires": [
      [
        "56568d9e.a9a974"
      ]
    ]
  },
  {
    "id": "56568d9e.a9a974",
    "type": "debug",
    "z": "d2eb9926.2d1468",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "error",
    "x": 315,
    "y": 558,
    "wires": []
  },
  {
    "id": "3112a589.ceed5a",
    "type": "http in",
    "z": "d2eb9926.2d1468",
    "name": "",
    "url": "/red/foscam_snapshot",
    "method": "get",
    "swaggerDoc": "",
    "x": 203,
    "y": 350,
    "wires": [
      [
        "9100f3c0.6eff1"
      ]
    ]
  },
  {
    "id": "9100f3c0.6eff1",
    "type": "function",
    "z": "d2eb9926.2d1468",
    "name": "",
    "func": "if (msg.payload.token==context.global.FREEBOARD_TOKEN && typeof(msg.payload.Cameraname)!=='undefined'){\n var cam=msg.payload.Cameraname;\n    if(cam in context.global.winkState.cameras){\n        if (cam in context.global.FosCam){\n            var camera=context.global.FosCam[cam];\n            msg.url=\"http://\"+camera.hostname+\"/snapshot.cgi?user=\"+camera.uid+\"&pwd=\"+camera.pwd;\n            return msg;\n        }\n    }\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 450,
    "y": 352,
    "wires": [
      [
        "b052b7e3.4fad48"
      ]
    ]
  },
  {
    "id": "b052b7e3.4fad48",
    "type": "http request",
    "z": "d2eb9926.2d1468",
    "name": "",
    "method": "GET",
    "ret": "bin",
    "url": "",
    "x": 600,
    "y": 351,
    "wires": [
      [
        "bfee534d.4011b"
      ]
    ]
  },
  {
    "id": "bfee534d.4011b",
    "type": "http response",
    "z": "d2eb9926.2d1468",
    "name": "",
    "x": 773,
    "y": 349,
    "wires": []
  }
]