[
  {
    "id": "64507875.9baf88",
    "type": "function",
    "name": "",
    "func": "var WinkCMDmsg=\"\";\nif (msg.payload.iftttkey==context.global.IFTTT_TOKEN)\n{\n    if (typeof msg.payload.ifttt !=='undefined')\n    {\n      context.global.ifttt=(msg.payload.ifttt.toLowerCase()==\"on\" ? true:false)\n      msg.res.StatusCode=200;\n    }\n    if (typeof msg.payload.winkName !=='undefined')\n    {\n    node.warn(msg.payload.winkName)\n    if (msg.payload.level !=='undefined')\n    {\n        level=msg.payload.level\n    }  else level=100\n    if (msg.payload.cmd !=='undefined')\n    {\n        cmd=msg.payload.cmd\n    } else cmd=''   \n//    node.warn(level)\n    WinkCMDmsg = context.global.executeWinkCMD(msg.payload.winkName,msg.payload.type,msg.payload.cmd,level)\n    msg.res.StatusCode=200;\n    //node.warn(WinkCMDmsg.payload)\n    }\n}\nelse {\n    node.warn(\"ifttt messages bad request\")\n     msg.res.StatusCode=403;\n}\nif (WinkCMDmsg!==\"\")\n{\n    return [msg,WinkCMDmsg];\n}\nelse\n{\nreturn [msg];\n}",
    "outputs": "2",
    "noerr": 0,
    "x": 343.89581298828125,
    "y": 83.88888549804688,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "58b35580.a74cac"
      ],
      [
        "a1cb00a0.5e35"
      ]
    ]
  },
  {
    "id": "365b5385.c9a4ac",
    "type": "http in",
    "name": "",
    "url": "/red/ifttt",
    "method": "post",
    "swaggerDoc": "",
    "x": 116.89581298828125,
    "y": 83.88894653320312,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "64507875.9baf88"
      ]
    ]
  },
  {
    "id": "58b35580.a74cac",
    "type": "http response",
    "name": "",
    "x": 552.8957977294922,
    "y": 53.888885498046875,
    "z": "54c33433.ab3ccc",
    "wires": []
  },
  {
    "id": "1dde409d.e221bf",
    "type": "comment",
    "name": "IFTTT Integration-------------------------------------------------------------------------------------------------------------------------------",
    "info": "",
    "x": 427.89581298828125,
    "y": 20.888946533203125,
    "z": "54c33433.ab3ccc",
    "wires": []
  },
  {
    "id": "a1cb00a0.5e35",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 579.8958129882812,
    "y": 97.88888549804688,
    "z": "54c33433.ab3ccc",
    "wires": [
      []
    ]
  },
  {
    "id": "f716613.f08e9a",
    "type": "comment",
    "name": "Wink API Apdex-------------------------------------------------------------------------------------------------------------------------------",
    "info": "",
    "x": 419.89581298828125,
    "y": 136.88888549804688,
    "z": "54c33433.ab3ccc",
    "wires": []
  },
  {
    "id": "b5118e25.4aee7",
    "type": "inject",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "600",
    "crontab": "",
    "once": true,
    "x": 117.89581298828125,
    "y": 176.88882446289062,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "1e667558.e1998b"
      ]
    ]
  },
  {
    "id": "778d56c1.8872a8",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "true",
    "complete": "payload",
    "x": 830.8958129882812,
    "y": 177.88888549804688,
    "z": "54c33433.ab3ccc",
    "wires": []
  },
  {
    "id": "1e667558.e1998b",
    "type": "function",
    "name": "",
    "func": "var newMsg ={\n    \"url\":\"http://status.winkapp.com/metrics-display/009ykpcmnm25/day.json\",\n    \"method\":\"GET\",\n    headers: {\n        \"Content-Type\":\"application/json\"\n    }\n};\nreturn newMsg;",
    "outputs": 1,
    "noerr": 0,
    "x": 250.89581298828125,
    "y": 177.88888549804688,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "14b8d208.eb472e"
      ]
    ]
  },
  {
    "id": "14b8d208.eb472e",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 402.89581298828125,
    "y": 177.88888549804688,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "3f6de779.c09218"
      ]
    ]
  },
  {
    "id": "3f6de779.c09218",
    "type": "function",
    "name": "",
    "func": "if ('metrics' in msg.payload && msg.payload.metrics.length>0){\ncontext.global.winkState.winkAPI = \"\";\nwinkAPI=\"\";\n        for(j = 0; j<msg.payload.metrics[0].data.length; j++)\n        {\n            winkAPI = msg.payload.metrics[0].data[j].value;\n        }\ncontext.global.winkState.winkAPI=winkAPI;\nvar newMsg={\n    payload:\"Wink Apdex is currently: \"+context.global.winkState.winkAPI\n};\nreturn newMsg;\n}\n",
    "outputs": 1,
    "noerr": 0,
    "x": 685.8958129882812,
    "y": 177.88888549804688,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "778d56c1.8872a8"
      ]
    ]
  },
  {
    "id": "1a75e44d.e58a1c",
    "type": "comment",
    "name": "DromCam/NestCam Integration-------------------------------------------------------------------------------------------------------------------------------",
    "info": "",
    "x": 469.89581298828125,
    "y": 237.38882446289062,
    "z": "54c33433.ab3ccc",
    "wires": []
  },
  {
    "id": "9f8c58ba.6073a8",
    "type": "comment",
    "name": "Presence  via IFTTT/Tasker/etc. -------------------------------------------------------------------------------------------------------------------------------",
    "info": "",
    "x": 469.39581298828125,
    "y": 338.3888244628906,
    "z": "54c33433.ab3ccc",
    "wires": []
  },
  {
    "id": "dd6f8513.229078",
    "type": "http in",
    "name": "",
    "url": "/red/presence",
    "method": "post",
    "swaggerDoc": "",
    "x": 149.39581298828125,
    "y": 385.3888244628906,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "ab9676d8.546988"
      ]
    ]
  },
  {
    "id": "ab9676d8.546988",
    "type": "function",
    "name": "Update Presence entry",
    "func": "pr_msg={};\n//if (typeof context.global.PresenceHistory === 'undefined') context.global.PresenceHistory=[]\npr_msg.payload={old_value:context.global.checkPresence()}\nif (msg.payload.iftttkey==context.global.IFTTT_TOKEN)\n{\n    node.warn(msg.payload.name+' '+msg.payload.home)\n    if (typeof(context.global.Presence) === 'undefined'){\n    context.global.Presence = {}\n    } else pr_msg.payload.old_presence=context.global.Presence;\n    if (msg.payload.name !=='undefined'){\n        if (!context.global.Presence[msg.payload.name]) context.global.Presence[msg.payload.name]={}\n            context.global.Presence[msg.payload.name].home=msg.payload.home\n        }\n    msg.res.StatusCode=200;\n    pr_msg.payload.new_value=context.global.checkPresence();\n}\nelse {\n    node.warn(\"presense, bad request\")\n     msg.res.StatusCode=403;\n     pr_msg.payload.new_value='ERROR';\n}\nreturn [msg,pr_msg];",
    "outputs": "2",
    "noerr": 0,
    "x": 385.39581298828125,
    "y": 386.3888244628906,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "fb5f89a9.04a078",
        "394961cd.c6b69e"
      ],
      [
        "2c06c95b.d3f936"
      ]
    ]
  },
  {
    "id": "fb5f89a9.04a078",
    "type": "http response",
    "name": "",
    "x": 816.3957977294922,
    "y": 379.3888244628906,
    "z": "54c33433.ab3ccc",
    "wires": []
  },
  {
    "id": "2c06c95b.d3f936",
    "type": "function",
    "name": "",
    "func": "var currDate= new Date();\ncurr_presence=context.global.checkPresence()\nif (msg.payload.new_value!=='ERROR' && msg.payload.new_value!==msg.payload.old_value){\n    if('old_presence' in  msg.payload){\n        var HistP={}\n        HistP.timestamp=new Date();\n        HistP.offset=context.global.Weather.Offset\n        HistP.details=msg.payload.old_presence\n        node.warn(HistP)\n        context.global.PresenceHistory.push(HistP)\n    }\n    if (context.global.PresenceHistory.length > 15) context.global.PresenceHistory.pop();\n    var scene_name=(msg.payload.new_value ? 'PRESENCE' : 'NO PRESENCE');\n    for (var key in context.global.winkState.scenes){\n        if ( context.global.winkState.scenes[key].name.toUpperCase()==scene_name)\n        {\n            var newMsg ={\n            \"url\":\"https://winkapi.quirky.com/scenes/\"+context.global.winkState.scenes[key].object_id+\"/activate\",\n            \"method\": \"POST\",\n            headers: {\n                \"Authorization\":\"Bearer \"+context.global.WinkToken,\n                \"Content-Type\":\"application/json\"\n                }\n            }\n        node.send(newMsg)\n        return;\n        }\n    }\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 636.2916107177734,
    "y": 429.6111145019531,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "d3bc13fa.2c43f"
      ]
    ]
  },
  {
    "id": "d3bc13fa.2c43f",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 862.2916107177734,
    "y": 429.7221984863281,
    "z": "54c33433.ab3ccc",
    "wires": [
      []
    ]
  },
  {
    "id": "6ee44320.911bbc",
    "type": "function",
    "name": "",
    "func": "msg.payload={\n    \"thermostats\":context.global.EcobeeThermostats,\n    \"sensor_pods\":context.global.EcobeeSensors\n};\nif (typeof context.global.winkState.thermostats=='undefined'){ context.global.winkState.thermostats = new Object(); }\nfor (var name in msg.payload.thermostats)\n{\n//    node.warn(\"Importing: \"+name+\" thermostat\");\n    context.global.winkState.thermostats[name]={\n        \"name\":name,\n        \"object_type\": msg.payload.thermostats[name].object_type,\n        \"object_id\": msg.payload.thermostats[name].object_id,\n        \"freeboard\": 0,\n        \"connection\": msg.payload.thermostats[name].connection,\n        \"min_set_point\": (msg.payload.thermostats[name].min_set_point-32)*(5/9),\n        \"max_set_point\": (msg.payload.thermostats[name].max_set_point-32)*(5/9),\n        \"mode\": msg.payload.thermostats[name].mode,\n        \"temperature\": (msg.payload.thermostats[name].temperature-32)*(5/9),\n        \"humidity\": msg.payload.thermostats[name].humidity,\n        \"users_away\":false\n    };\n}\n//node.warn(\"Ecobee Thermostat import finished\");\n\nfor (var name in msg.payload.sensor_pods)\n{\n//    node.warn(\"Importing: \"+name+\" sensor pod\");\n    context.global.winkState.sensor_pods[name]={\n        \"name\":name,\n        \"object_type\":msg.payload.sensor_pods[name].object_type,\n        \"object_id\":msg.payload.sensor_pods[name].object_id,\n        \"freeboard\":0,\n    }\n    if (msg.payload.sensor_pods[name].motion==\"true\"){context.global.winkState.sensor_pods[name].motion=true}\n    else if (msg.payload.sensor_pods[name].motion==\"false\"){context.global.winkState.sensor_pods[name].motion=false}\n    context.global.winkDevCap[name]={\n        \"sensor_types\":[{}]\n    }\n    context.global.winkDevCap[name].sensor_types=[{\n            \"field\":\"motion\",\n            \"type\":\"boolean\"\n        }]\n    }\n//node.warn(\"Ecobee Remote Sensor import finished\");\nvar newMsg={\n    \"payload\":\"Ecobee Thermostat and Remote Sensor Data imported successfully\"\n};\nreturn newMsg;",
    "outputs": 1,
    "noerr": 0,
    "x": 280.8958168029785,
    "y": 581.6389236450195,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "96926a4a.696d98"
      ]
    ]
  },
  {
    "id": "38389365.c7c76c",
    "type": "inject",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 131.39581298828125,
    "y": 581.888916015625,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "6ee44320.911bbc"
      ]
    ]
  },
  {
    "id": "96926a4a.696d98",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "false",
    "x": 453.6458282470703,
    "y": 581.6389236450195,
    "z": "54c33433.ab3ccc",
    "wires": []
  },
  {
    "id": "ae338b7f.51cc78",
    "type": "comment",
    "name": "Integration with Ecobee Node Red ---------------------------------------------------------------------------------------",
    "info": "",
    "x": 383.39581298828125,
    "y": 541.888916015625,
    "z": "54c33433.ab3ccc",
    "wires": []
  },
  {
    "id": "253cc7c8.dac338",
    "type": "http in",
    "name": "",
    "url": "/freeboard/camera",
    "method": "get",
    "swaggerDoc": "",
    "x": 174.8957977294922,
    "y": 282.888916015625,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "7351cb12.8cae34"
      ]
    ]
  },
  {
    "id": "7351cb12.8cae34",
    "type": "function",
    "name": "",
    "func": "if (msg.payload.token==context.global.FREEBOARD_TOKEN)\n{\n   if(typeof msg.payload.model ==='undefined' || msg.payload.model=='dropcam' || msg.payload.model=='dropcam_pro'){\n   if (typeof msg.payload.cuepoint ==='undefined'){\n   msg.url=\"https://winkapi.quirky.com/cameras/\"+msg.payload.id+\"/image\"\n   msg.method=\"GET\"\n    msg.headers= {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken,\n        \"User-Agent\":\"Manufacturer/Darwin node/0.10.30 Wink/3.6.0\"\n    }\n} else\n{\n    msg.url=\"https://winkapi.quirky.com/cameras/\"+msg.payload.id+\"/cuepoints/\"+msg.payload.cuepoint+\"/image\"\n   msg.method=\"GET\"\n    msg.headers= {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken,\n        \"User-Agent\":\"Manufacturer/Darwin node/0.10.30 Wink/3.6.0\"\n}\n}\nreturn msg;\n}\n}\nif (typeof msg.payload.model!=='undefined' && msg.payload.model=='foscam'){\n//http://timothyr.no-ip.org:1882/videostream.cgi?uid=admin&pwd=Dfdbkjy5\nfor (var k in context.global.FosCam){\n    if (context.global.FosCam[k].Parameters.id.value==msg.payload.id){\n     msg.method=\"GET\"\n     msg.url=\"http://\"+context.global.FosCam[k].hostname+\"/videostream.cgi?user=\"+context.global.FosCam[k].uid+\"&pwd=\"+context.global.FosCam[k].pwd\n     node.warn(msg.url);\n    return msg;\n    }\n}\n}\nelse {\n    msg.res.send(400,\"Bad Request darling\");\n}\n",
    "outputs": 1,
    "noerr": 0,
    "x": 428.8957977294922,
    "y": 284.888916015625,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "bd0cdb14.42f328"
      ]
    ]
  },
  {
    "id": "bd0cdb14.42f328",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "bin",
    "url": "",
    "x": 598.8957977294922,
    "y": 283.888916015625,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "a2e18dc1.5d1e7"
      ]
    ]
  },
  {
    "id": "a2e18dc1.5d1e7",
    "type": "http response",
    "name": "",
    "x": 763.8957977294922,
    "y": 284.888916015625,
    "z": "54c33433.ab3ccc",
    "wires": []
  },
  {
    "id": "123f3359.edc0cd",
    "type": "function",
    "name": "",
    "func": " var PresenceBkup={\n    Presence: context.global.Presence,\n    PresenceDetail: context.global.PresenceDetail,\n    PresenceHistory: context.global.PresenceHistory\n }\n    var DBMsg={\n        url:context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp\",\n        method:\"POST\",\n        headers: \n            {\n                \"Content-Type\":\"application/json\"\n            },\n        payload: {\n            \"_id\":\"winkPresence\",\n            \"item\":\"Presence\",\n            \"Presence\":PresenceBkup\n        }\n    } \n \n \n if (msg.payload.total_rows > 0  && msg.payload.rows.map(function(e) { return e.id; }).indexOf('winkPresence')!=-1){\n node.warn('record exists... updating');\n //DBMsg.method=\"PUT\";\n DBMsg.payload._rev= msg.payload.rows.map(function(e) {if(e.id==\"winkPresence\") return e.value.rev; })[0];\n }\nreturn DBMsg;",
    "outputs": 1,
    "noerr": 0,
    "x": 896,
    "y": 492,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "1a94cd4e.e56b33"
      ]
    ]
  },
  {
    "id": "394961cd.c6b69e",
    "type": "function",
    "name": "",
    "func": "if (context.global.CloudantBkUP) {\n    var msg={\n        url:context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp/_all_docs\",\n        method:\"GET\"\n    }\n    node.send(msg); \n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 572,
    "y": 493,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "98638a0c.679c78"
      ]
    ]
  },
  {
    "id": "98638a0c.679c78",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 736,
    "y": 493,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "123f3359.edc0cd"
      ]
    ]
  },
  {
    "id": "1a94cd4e.e56b33",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 1053,
    "y": 491,
    "z": "54c33433.ab3ccc",
    "wires": [
      []
    ]
  },
  {
    "id": "d29b61b2.2d64a",
    "type": "inject",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "82800",
    "crontab": "",
    "once": true,
    "x": 110.89582824707031,
    "y": 754.2222290039062,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "ff8189b3.007e78"
      ]
    ]
  },
  {
    "id": "ff8189b3.007e78",
    "type": "function",
    "name": "Try to create DB",
    "func": "if (typeof context.global.VCAP_SERVICES!=='undefined' && 'cloudantNoSQLDB' in context.global.VCAP_SERVICES){\n    var DBmsg={\n        url: context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp\",\n        method:\"PUT\"\n    }\n    node.send(DBmsg);\n} else{\nnode.warn('Cloudant credentials are not present. DB backup will be disabled');\ncontext.global.CloudantBkUP=false;\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 297.8958282470703,
    "y": 754.2222290039062,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "495e6187.b6a1a"
      ]
    ]
  },
  {
    "id": "495e6187.b6a1a",
    "type": "http request",
    "name": "db req",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 460.8958282470703,
    "y": 754.2222290039062,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "80af3e0c.7f50c"
      ]
    ]
  },
  {
    "id": "80af3e0c.7f50c",
    "type": "function",
    "name": "Check response",
    "func": "if (msg.statusCode=='201' || msg.statusCode=='412')\n{\n    node.warn('Database created or already exists, turning on backup');\n    context.global.CloudantBkUP=true;\n    context.global.CloudantCamera=[];\n    msg.url=context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp/winkPresence\"\n    msg.method=\"GET\"\n    node.send(msg)\n} else {\n    node.warn('issue with cloudant sercvice. backup disabled until next re-try');\n    context.global.CloudantBkUP=false;\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 635.8958282470703,
    "y": 754.2222290039062,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "396169f0.c69e96"
      ]
    ]
  },
  {
    "id": "396169f0.c69e96",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 821.7916259765625,
    "y": 753.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "51159670.aeea68"
      ]
    ]
  },
  {
    "id": "51159670.aeea68",
    "type": "function",
    "name": "restore from db",
    "func": "if (\"Presence\" in msg.payload){\n    node.warn('restoring presence from db backup')\n    context.global.Presence=msg.payload.Presence.Presence\n    context.global.PresenceHistory=msg.payload.Presence.PresenceHistory\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 989.7916259765625,
    "y": 753.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": [
      []
    ]
  },
  {
    "id": "a4cfefb2.5b301",
    "type": "comment",
    "name": "Cloundant DB -------------------------------------------------------------------------------------------------------------------------------",
    "info": "modfy bluemix-settings.json and add following line:\n\ncontext.global.InitialStateKey=\"<your initial state api key>\"",
    "x": 394.89581298828125,
    "y": 672.2222290039062,
    "z": "54c33433.ab3ccc",
    "wires": []
  },
  {
    "id": "cc4467e9.33bb98",
    "type": "function",
    "name": "Save Snapshots to db",
    "func": "function delay(ms) {\n        var cur_d = new Date();\n        var cur_ticks = cur_d.getTime();\n        var ms_passed = 0;\n        while(ms_passed < ms) {\n            var d = new Date();  // Possible memory leak?\n            var ticks = d.getTime();\n            ms_passed = ticks - cur_ticks;\n            // d = null;  // Prevent memory leak?\n        }\n    }\nif(msg.req.headers.authorization && msg.req.headers.authorization==\"Bearer \"+context.global.FREEBOARD_TOKEN){\nvar msg1=msg;\nvar trigger=msg.payload.object_name;\nvar cam_list=msg.payload.cam_list.split(',');\nmsg1.res.statusCode=\"200\";\nnode.send([msg1,null])\nvar date=new Date()\nfor (var i=0;i<cam_list.length;i++){\n//for (var cam in context.global.winkState.cameras){\n var camera=context.global.winkState.cameras[cam_list[i]]\n var cam=cam_list[i]\nif ('snap_url' in camera && camera.snap_url!=='undefined'){\n    var msg={}\n    msg.url=camera.snap_url\n    msg.method=\"GET\"\n    msg.date=date\n    msg.topic=cam\n    msg.trigger=trigger\n    node.send([null,msg]);\n    delay(400)\n}\n}\n\n} else msg.res.send(401,\"Bad request\");\nreturn;",
    "outputs": "2",
    "noerr": 0,
    "x": 372.4999694824219,
    "y": 854.2222290039062,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "555f6b52.aaa094"
      ],
      [
        "5fd3cecd.a02c3"
      ]
    ]
  },
  {
    "id": "5fd3cecd.a02c3",
    "type": "http request",
    "name": "getPic",
    "method": "use",
    "ret": "bin",
    "url": "",
    "x": 596.4999847412109,
    "y": 860.2222290039062,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "16dc5cb2.e923a3"
      ]
    ]
  },
  {
    "id": "16dc5cb2.e923a3",
    "type": "function",
    "name": "save picture",
    "func": "if (typeof (context.global.ImageArchive)=== 'undefined') {\n    context.global.ImageArchive = {}\n}\n     for (var n in context.global.winkState.cameras){\n        if (!(n in context.global.ImageArchive)) context.global.ImageArchive[n]=[]\n    }\n\nnode.warn('Saving image from '+msg.topic)\n//node.warn(bitmap);\nvar DBmsg={\n         url:context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp\",\n        topic:msg.trigger,\n        method:\"POST\",\n        headers: \n            {\n                \"Content-Type\":\"application/json\"\n            },\n        payload: {\n            \"_id\":msg.topic+'|'+msg.date.getTime()+'|'+msg.trigger,\n            \"key\":\"Snapshot\",\n            \"cameraName\":msg.topic,\n            \"timestamp\":msg.date.getTime(),\n            \"trigger\":msg.trigger,\n            \"fileName\":\"CameraImage.jpg\",\n           \"_attachments\":\n                {\n                    \"CameraImage.jpg\":\n                    {\n                        \"content_type\":\"image/jpeg\",\n                        \"data\":msg.payload.toString('base64')\n                    }\n                }        \n        } \n}\n\n//context.global.ImageArchive[msg.topic].splice(0,0,camObj);\n//if (context.global.ImageArchive[msg.topic].length>10) context.global.ImageArchive[msg.topic].pop()\nreturn DBmsg;",
    "outputs": "1",
    "noerr": 0,
    "x": 753.4999847412109,
    "y": 858.2222290039062,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "14e599aa.eb1a66"
      ]
    ]
  },
  {
    "id": "14e599aa.eb1a66",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 928.3958587646484,
    "y": 858.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "d47aa02e.2b856"
      ]
    ]
  },
  {
    "id": "9eb0db04.614f28",
    "type": "http in",
    "name": "",
    "url": "/red/save_images",
    "method": "get",
    "swaggerDoc": "",
    "x": 147,
    "y": 854.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "cc4467e9.33bb98"
      ]
    ]
  },
  {
    "id": "555f6b52.aaa094",
    "type": "http response",
    "name": "",
    "x": 600.3957672119141,
    "y": 817.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": []
  },
  {
    "id": "d47aa02e.2b856",
    "type": "function",
    "name": "cache results",
    "func": "if ('ok' in msg.payload && msg.payload.ok){\n    var cameraname=msg.payload.id.split('|')[0];\n    var tstamp=msg.payload.id.split('|')[1];\n    node.warn('Camera - ' + cameraname)\n    if (typeof(context.global.winkState.cameras[cameraname].activities)==='undefined') context.global.winkState.cameras[cameraname].activities=[]\n    var cam_act={\n        id:msg.payload.rev,\n        cloudant_id:msg.payload.id,\n        category:\"cuepoint\",\n        cuepoint_id:Math.round(tstamp/1000),\n        trigger:msg.topic,\n        snapshot_url:context.global.BlueMixUrlBase+\"/red/camera_history?img_id=\"+msg.payload.id\n    }\n   context.global.winkState.cameras[cameraname].activities.splice(0,0,cam_act);\n   if (context.global.winkState.cameras[cameraname].activities.length>15){\n    for (var i=15; i<context.global.winkState.cameras[cameraname].activities.length;i++){\n    var doc_id=context.global.winkState.cameras[cameraname].activities[i].cloudant_id\n    var rev=context.global.winkState.cameras[cameraname].activities[i].id\n    if(typeof(doc_id)!=='undefined'){\n    var DBmsg={\n         topic:cameraname,\n         position:i,\n         url:context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp/\"+doc_id+\"?rev=\"+rev,\n        method:\"DELETE\"\n    }\n    node.send(DBmsg);\n    }\n   }\n   }\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 1078.3958587646484,
    "y": 858.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "bfe8cf68.40173"
      ]
    ]
  },
  {
    "id": "bfe8cf68.40173",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 1231.3959197998047,
    "y": 856.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "2024ec03.dfdb14"
      ]
    ]
  },
  {
    "id": "2024ec03.dfdb14",
    "type": "function",
    "name": "delete old pics",
    "func": "if (('ok' in msg.payload && msg.payload.ok) ||('error' in msg.payload && msg.payload.error=='not_found') ){\n    node.warn('deleting '+msg.topic+' position '+ msg.position)\n    context.global.winkState.cameras[msg.topic].activities.splice(msg.position,1)\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 1399.3959197998047,
    "y": 857.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": [
      []
    ]
  },
  {
    "id": "dc44f23a.23bb1",
    "type": "http in",
    "name": "",
    "url": "/red/camera_history",
    "method": "get",
    "swaggerDoc": "",
    "x": 159.3958282470703,
    "y": 912.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "460f7eec.b9f08"
      ]
    ]
  },
  {
    "id": "460f7eec.b9f08",
    "type": "function",
    "name": "gen CLD url",
    "func": "if ('img_id' in msg.payload){\n    msg.url=context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp/\"+msg.payload.img_id+\"/CameraImage.jpg\"\n    msg.method=\"GET\"\n}\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 371.3957977294922,
    "y": 912.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "710b5770.8ef4a8"
      ]
    ]
  },
  {
    "id": "710b5770.8ef4a8",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "bin",
    "url": "",
    "x": 532.3957977294922,
    "y": 914.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "a8002489.57ffd8"
      ]
    ]
  },
  {
    "id": "a8002489.57ffd8",
    "type": "http response",
    "name": "",
    "x": 700.3957977294922,
    "y": 914.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": []
  },
  {
    "id": "4f193d84.b0e6c4",
    "type": "http in",
    "name": "",
    "url": "/red/retrieve_activities",
    "method": "get",
    "swaggerDoc": "",
    "x": 159,
    "y": 1007.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "f68fc0.ff09704"
      ]
    ]
  },
  {
    "id": "f68fc0.ff09704",
    "type": "function",
    "name": "get activities from db",
    "func": "if(msg.req.headers.authorization && msg.req.headers.authorization==\"Bearer \"+context.global.FREEBOARD_TOKEN){\nvar msg1=msg;\nmsg1.res.statusCode=\"200\";\nmsg.url=context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp/_all_docs?descending=true\"\nmsg.method=\"GET\"\nmsg.topic=msg.payload.camera_name\nnode.send([msg1,msg])\n} else\n{\n    msg.res.statusCode=400\n    node.send([msg,null])\n}\nreturn;",
    "outputs": "2",
    "noerr": 0,
    "x": 389.39573669433594,
    "y": 1005.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "12c90dd.fed36f2"
      ],
      [
        "c3771873.3c88e8"
      ]
    ]
  },
  {
    "id": "c3771873.3c88e8",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 614.3957977294922,
    "y": 1038.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": [
      [
        "87650842.789af8"
      ]
    ]
  },
  {
    "id": "87650842.789af8",
    "type": "function",
    "name": "cache cam history",
    "func": "if('total_rows' in msg.payload && msg.payload.total_rows>0){\n var db_rows=msg.payload.rows;\n context.global.winkState.cameras[msg.topic].activities=[]\n //db_rows.foreach(function(row){\n for(var i=0;i<db_rows.length;i++){\n     var row=db_rows[i];\n     if(row.id.indexOf(msg.topic)!=-1){\n      var tstamp=row.id.split('|')[1]\n      var cam_act={\n        id:row.value.rev,\n        cloudant_id:row.id,\n        category:\"cuepoint\",\n        cuepoint_id:Math.round(tstamp/1000),\n        trigger:row.id.split('|')[2],\n        snapshot_url:context.global.BlueMixUrlBase+\"/red/camera_history?img_id=\"+row.id\n      } \n      context.global.winkState.cameras[msg.topic].activities.push(cam_act)         \n     }\n }\n}\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 792.3958129882812,
    "y": 1038.111083984375,
    "z": "54c33433.ab3ccc",
    "wires": [
      []
    ]
  },
  {
    "id": "12c90dd.fed36f2",
    "type": "http response",
    "name": "",
    "x": 611.3957672119141,
    "y": 990.1111145019531,
    "z": "54c33433.ab3ccc",
    "wires": []
  }
]
