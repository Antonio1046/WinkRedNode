[
  {
    "id": "fb29715f.04d69",
    "type": "function",
    "name": "",
    "func": "var WinkCMDmsg=\"\";\nif (msg.payload.iftttkey==context.global.IFTTT_TOKEN)\n{\n    if (typeof msg.payload.ifttt !=='undefined')\n    {\n      context.global.ifttt=(msg.payload.ifttt.toLowerCase()==\"on\" ? true:false)\n      msg.res.StatusCode=200;\n    }\n    if (typeof msg.payload.winkName !=='undefined')\n    {\n    node.warn(msg.payload.winkName)\n    if (msg.payload.level !=='undefined')\n    {\n        level=msg.payload.level\n    }  else level=100\n    if (msg.payload.cmd !=='undefined')\n    {\n        cmd=msg.payload.cmd\n    } else cmd=''   \n//    node.warn(level)\n    WinkCMDmsg = context.global.executeWinkCMD(msg.payload.winkName,msg.payload.type,msg.payload.cmd,level)\n    msg.res.StatusCode=200;\n    //node.warn(WinkCMDmsg.payload)\n    }\n}\nelse {\n    node.warn(\"ifttt messages bad request\")\n     msg.res.StatusCode=403;\n}\nif (WinkCMDmsg!==\"\")\n{\n    return [msg,WinkCMDmsg];\n}\nelse\n{\nreturn [msg];\n}",
    "outputs": "2",
    "noerr": 0,
    "x": 342.5,
    "y": 82.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "54717194.ab8e9"
      ],
      [
        "c983b5ae.367c48"
      ]
    ]
  },
  {
    "id": "63b470a0.9c4b9",
    "type": "http in",
    "name": "",
    "url": "/red/ifttt",
    "method": "post",
    "swaggerDoc": "",
    "x": 115.5,
    "y": 83,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "fb29715f.04d69"
      ]
    ]
  },
  {
    "id": "54717194.ab8e9",
    "type": "http response",
    "name": "",
    "x": 551.4999847412109,
    "y": 52.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "49fc153c.b603ec",
    "type": "comment",
    "name": "IFTTT Integration-------------------------------------------------------------------------------------------------------------------------------",
    "info": "",
    "x": 426.5,
    "y": 20,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "c983b5ae.367c48",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 578.5,
    "y": 96.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": [
      []
    ]
  },
  {
    "id": "7ca47058.835b9",
    "type": "comment",
    "name": "Wink API Apdex-------------------------------------------------------------------------------------------------------------------------------",
    "info": "",
    "x": 418.5,
    "y": 135.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "9de8fa94.621708",
    "type": "inject",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "600",
    "crontab": "",
    "once": true,
    "x": 116.5,
    "y": 175.9998779296875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "ecddfb25.132208"
      ]
    ]
  },
  {
    "id": "6bfa4613.9405b8",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "true",
    "complete": "payload",
    "x": 829.5,
    "y": 176.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "ecddfb25.132208",
    "type": "function",
    "name": "",
    "func": "var newMsg ={\n    \"url\":\"http://status.winkapp.com/metrics-display/009ykpcmnm25/day.json\",\n    \"method\":\"GET\",\n    headers: {\n        \"Content-Type\":\"application/json\"\n    }\n};\nreturn newMsg;",
    "outputs": 1,
    "noerr": 0,
    "x": 249.5,
    "y": 176.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "52aaf9b4.ad5508"
      ]
    ]
  },
  {
    "id": "52aaf9b4.ad5508",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 401.5,
    "y": 176.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "4236387f.bdc9c8"
      ]
    ]
  },
  {
    "id": "4236387f.bdc9c8",
    "type": "function",
    "name": "",
    "func": "if ('metrics' in msg.payload && msg.payload.metrics.length>0){\ncontext.global.winkState.winkAPI = \"\";\nwinkAPI=\"\";\n        for(j = 0; j<msg.payload.metrics[0].data.length; j++)\n        {\n            winkAPI = msg.payload.metrics[0].data[j].value;\n        }\ncontext.global.winkState.winkAPI=winkAPI;\nvar newMsg={\n    payload:\"Wink Apdex is currently: \"+context.global.winkState.winkAPI\n};\nreturn newMsg;\n}\n",
    "outputs": 1,
    "noerr": 0,
    "x": 684.5,
    "y": 176.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "6bfa4613.9405b8"
      ]
    ]
  },
  {
    "id": "4df228f3.b20dd8",
    "type": "comment",
    "name": "DromCam/NestCam Integration-------------------------------------------------------------------------------------------------------------------------------",
    "info": "",
    "x": 468.5,
    "y": 236.4998779296875,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "bc339b8a.43cc68",
    "type": "comment",
    "name": "Presence  via IFTTT/Tasker/etc. -------------------------------------------------------------------------------------------------------------------------------",
    "info": "",
    "x": 468,
    "y": 337.4998779296875,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "e55b82b3.1aa48",
    "type": "http in",
    "name": "",
    "url": "/red/presence",
    "method": "post",
    "swaggerDoc": "",
    "x": 148,
    "y": 384.4998779296875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "a2e0a328.5d1f6"
      ]
    ]
  },
  {
    "id": "a2e0a328.5d1f6",
    "type": "function",
    "name": "Update Presence entry",
    "func": "pr_msg={};\n//if (typeof context.global.PresenceHistory === 'undefined') context.global.PresenceHistory=[]\npr_msg.payload={old_value:context.global.checkPresence()}\nif (msg.payload.iftttkey==context.global.IFTTT_TOKEN)\n{\n    node.warn(msg.payload.name+' '+msg.payload.home)\n    if (typeof(context.global.Presence) === 'undefined'){\n    context.global.Presence = {}\n    } else pr_msg.payload.old_presence=context.global.Presence;\n    if (msg.payload.name !=='undefined'){\n        if (!context.global.Presence[msg.payload.name]) context.global.Presence[msg.payload.name]={}\n            context.global.Presence[msg.payload.name].home=msg.payload.home\n        }\n    msg.res.StatusCode=200;\n    pr_msg.payload.new_value=context.global.checkPresence();\n}\nelse {\n    node.warn(\"presense, bad request\")\n     msg.res.StatusCode=403;\n     pr_msg.payload.new_value='ERROR';\n}\nreturn [msg,pr_msg];",
    "outputs": "2",
    "noerr": 0,
    "x": 384,
    "y": 385.4998779296875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "7b59b522.84a64c",
        "c3a8e0d2.3c572"
      ],
      [
        "830dc6fb.7cf238"
      ]
    ]
  },
  {
    "id": "7b59b522.84a64c",
    "type": "http response",
    "name": "",
    "x": 814.9999847412109,
    "y": 378.4998779296875,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "830dc6fb.7cf238",
    "type": "function",
    "name": "",
    "func": "var currDate= new Date();\ncurr_presence=context.global.checkPresence()\nif (msg.payload.new_value!=='ERROR' && msg.payload.new_value!==msg.payload.old_value){\n    if('old_presence' in  msg.payload){\n        var HistP={}\n        HistP.timestamp=new Date();\n        HistP.offset=context.global.Weather.Offset\n        HistP.details=msg.payload.old_presence\n        node.warn(HistP)\n        context.global.PresenceHistory.push(HistP)\n    }\n    if (context.global.PresenceHistory.length > 15) context.global.PresenceHistory.pop();\n    var scene_name=(msg.payload.new_value ? 'PRESENCE' : 'NO PRESENCE');\n    for (var key in context.global.winkState.scenes){\n        if ( context.global.winkState.scenes[key].name.toUpperCase()==scene_name)\n        {\n            var newMsg ={\n            \"url\":\"https://winkapi.quirky.com/scenes/\"+context.global.winkState.scenes[key].object_id+\"/activate\",\n            \"method\": \"POST\",\n            headers: {\n                \"Authorization\":\"Bearer \"+context.global.WinkToken,\n                \"Content-Type\":\"application/json\"\n                }\n            }\n        node.send(newMsg)\n        return;\n        }\n    }\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 634.8957977294922,
    "y": 428.72216796875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "ff853320.007ad"
      ]
    ]
  },
  {
    "id": "ff853320.007ad",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 860.8957977294922,
    "y": 428.833251953125,
    "z": "95f60c40.6a09f",
    "wires": [
      []
    ]
  },
  {
    "id": "4d33685f.b2cc98",
    "type": "function",
    "name": "",
    "func": "msg.payload={\n    \"thermostats\":context.global.Ecobee.Thermostats,\n    \"sensor_pods\":context.global.Ecobee.Sensors\n};\nif (typeof context.global.winkState.thermostats=='undefined'){ context.global.winkState.thermostats = new Object(); }\nfor (var name in msg.payload.thermostats)\n{\n//    node.warn(\"Importing: \"+name+\" thermostat\");\n    context.global.winkState.thermostats[name]={\n        \"name\":name,\n        \"object_type\": msg.payload.thermostats[name].object_type,\n        \"object_id\": msg.payload.thermostats[name].object_id,\n        \"freeboard\": 0,\n        \"connection\": msg.payload.thermostats[name].connection,\n        \"min_set_point\": (msg.payload.thermostats[name].min_set_point-32)*(5/9),\n        \"max_set_point\": (msg.payload.thermostats[name].max_set_point-32)*(5/9),\n        \"mode\": msg.payload.thermostats[name].mode,\n        \"temperature\": (msg.payload.thermostats[name].temperature-32)*(5/9),\n        \"humidity\": msg.payload.thermostats[name].humidity,\n        \"users_away\":false\n    };\n}\n//node.warn(\"Ecobee Thermostat import finished\");\n\nfor (var name in msg.payload.sensor_pods)\n{\n//    node.warn(\"Importing: \"+name+\" sensor pod\");\n    context.global.winkState.sensor_pods[name]={\n        \"name\":name,\n        \"object_type\":msg.payload.sensor_pods[name].object_type,\n        \"object_id\":msg.payload.sensor_pods[name].object_id,\n        \"freeboard\":0,\n    }\n    if (msg.payload.sensor_pods[name].motion==\"true\"){context.global.winkState.sensor_pods[name].motion=true}\n    else if (msg.payload.sensor_pods[name].motion==\"false\"){context.global.winkState.sensor_pods[name].motion=false}\n    context.global.winkDevCap[name]={\n        \"sensor_types\":[{}]\n    }\n    context.global.winkDevCap[name].sensor_types=[{\n            \"field\":\"motion\",\n            \"type\":\"boolean\"\n        }]\n    }\n//node.warn(\"Ecobee Remote Sensor import finished\");\nvar newMsg={\n    \"payload\":\"Ecobee Thermostat and Remote Sensor Data imported successfully\"\n};\nreturn newMsg;",
    "outputs": 1,
    "noerr": 0,
    "x": 279.50000381469727,
    "y": 580.7499771118164,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "e871c25e.178e4"
      ]
    ]
  },
  {
    "id": "64365bce.9bc9a4",
    "type": "inject",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 130,
    "y": 580.9999694824219,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "4d33685f.b2cc98"
      ]
    ]
  },
  {
    "id": "e871c25e.178e4",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "false",
    "x": 452.25001525878906,
    "y": 580.7499771118164,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "e21fcc57.1de03",
    "type": "comment",
    "name": "Integration with Ecobee Node Red ---------------------------------------------------------------------------------------",
    "info": "",
    "x": 382,
    "y": 540.9999694824219,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "e3442d53.1cbbd",
    "type": "http in",
    "name": "",
    "url": "/freeboard/camera",
    "method": "get",
    "swaggerDoc": "",
    "x": 173.49998474121094,
    "y": 281.9999694824219,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "7d6dba50.829244"
      ]
    ]
  },
  {
    "id": "7d6dba50.829244",
    "type": "function",
    "name": "",
    "func": "if (msg.payload.token==context.global.FREEBOARD_TOKEN)\n{\n   if(typeof msg.payload.model ==='undefined' || msg.payload.model=='dropcam' || msg.payload.model=='dropcam_pro'){\n   if (typeof msg.payload.cuepoint ==='undefined'){\n   msg.url=\"https://winkapi.quirky.com/cameras/\"+msg.payload.id+\"/image\"\n   msg.method=\"GET\"\n    msg.headers= {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken,\n        \"User-Agent\":\"Manufacturer/Darwin node/0.10.30 Wink/3.6.0\"\n    }\n} else\n{\n    msg.url=\"https://winkapi.quirky.com/cameras/\"+msg.payload.id+\"/cuepoints/\"+msg.payload.cuepoint+\"/image\"\n   msg.method=\"GET\"\n    msg.headers= {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken,\n        \"User-Agent\":\"Manufacturer/Darwin node/0.10.30 Wink/3.6.0\"\n}\n}\nreturn msg;\n}\n}\nif (typeof msg.payload.model!=='undefined' && msg.payload.model=='foscam'){\n//http://timothyr.no-ip.org:1882/videostream.cgi?uid=admin&pwd=Dfdbkjy5\nfor (var k in context.global.FosCam){\n    if (context.global.FosCam[k].Parameters.id.value==msg.payload.id){\n     msg.method=\"GET\"\n     msg.url=\"http://\"+context.global.FosCam[k].hostname+\"/videostream.cgi?user=\"+context.global.FosCam[k].uid+\"&pwd=\"+context.global.FosCam[k].pwd\n     node.warn(msg.url);\n    return msg;\n    }\n}\n}\nelse {\n    msg.res.send(400,\"Bad Request darling\");\n}\n",
    "outputs": 1,
    "noerr": 0,
    "x": 427.49998474121094,
    "y": 283.9999694824219,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "f15c8461.0ea378"
      ]
    ]
  },
  {
    "id": "f15c8461.0ea378",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "bin",
    "url": "",
    "x": 597.4999847412109,
    "y": 282.9999694824219,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "944e2.fff6bb1e"
      ]
    ]
  },
  {
    "id": "944e2.fff6bb1e",
    "type": "http response",
    "name": "",
    "x": 762.4999847412109,
    "y": 283.9999694824219,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "bc45ab5f.43ba58",
    "type": "function",
    "name": "",
    "func": " var PresenceBkup={\n    Presence: context.global.Presence,\n    PresenceDetail: context.global.PresenceDetail,\n    PresenceHistory: context.global.PresenceHistory\n }\n    var DBMsg={\n        url:context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp\",\n        method:\"POST\",\n        headers: \n            {\n                \"Content-Type\":\"application/json\"\n            },\n        payload: {\n            \"_id\":\"winkPresence\",\n            \"item\":\"Presence\",\n            \"Presence\":PresenceBkup\n        }\n    } \n \n \n if (msg.payload.total_rows > 0  && msg.payload.rows.map(function(e) { return e.id; }).indexOf('winkPresence')!=-1){\n node.warn('record exists... updating');\n //DBMsg.method=\"PUT\";\n DBMsg.payload._rev= msg.payload.rows.map(function(e) {if(e.id==\"winkPresence\") return e.value.rev; })[0];\n }\nreturn DBMsg;",
    "outputs": 1,
    "noerr": 0,
    "x": 894.6041870117188,
    "y": 491.1110534667969,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "9aec8e7.f65137"
      ]
    ]
  },
  {
    "id": "c3a8e0d2.3c572",
    "type": "function",
    "name": "",
    "func": "if (context.global.CloudantBkUP) {\n    var msg={\n        url:context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp/_all_docs\",\n        method:\"GET\"\n    }\n    node.send(msg); \n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 570.6041870117188,
    "y": 492.1110534667969,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "35fbb6cd.ca044a"
      ]
    ]
  },
  {
    "id": "35fbb6cd.ca044a",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 734.6041870117188,
    "y": 492.1110534667969,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "bc45ab5f.43ba58"
      ]
    ]
  },
  {
    "id": "9aec8e7.f65137",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 1051.6041870117188,
    "y": 490.1110534667969,
    "z": "95f60c40.6a09f",
    "wires": [
      []
    ]
  },
  {
    "id": "cb9ebddd.34614",
    "type": "inject",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "82800",
    "crontab": "",
    "once": true,
    "x": 109.50001525878906,
    "y": 753.3332824707031,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "b48da0f9.4b726"
      ]
    ]
  },
  {
    "id": "b48da0f9.4b726",
    "type": "function",
    "name": "Try to create DB",
    "func": "if (typeof context.global.VCAP_SERVICES!=='undefined' && 'cloudantNoSQLDB' in context.global.VCAP_SERVICES){\n    var DBmsg={\n        url: context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp\",\n        method:\"PUT\"\n    }\n    node.send(DBmsg);\n} else{\nnode.warn('Cloudant credentials are not present. DB backup will be disabled');\ncontext.global.CloudantBkUP=false;\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 296.50001525878906,
    "y": 753.3332824707031,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "5a9a813b.a5658"
      ]
    ]
  },
  {
    "id": "5a9a813b.a5658",
    "type": "http request",
    "name": "db req",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 459.50001525878906,
    "y": 753.3332824707031,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "3bd88c01.c42774"
      ]
    ]
  },
  {
    "id": "3bd88c01.c42774",
    "type": "function",
    "name": "Check response",
    "func": "if (msg.statusCode=='201' || msg.statusCode=='412')\n{\n    node.warn('Database created or already exists, turning on backup');\n    context.global.CloudantBkUP=true;\n    context.global.CloudantCamera=[];\n    msg.url=context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp/winkPresence\"\n    msg.method=\"GET\"\n    node.send(msg)\n} else {\n    node.warn('issue with cloudant sercvice. backup disabled until next re-try');\n    context.global.CloudantBkUP=false;\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 634.5000152587891,
    "y": 753.3332824707031,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "dfbd454f.2042b8"
      ]
    ]
  },
  {
    "id": "dfbd454f.2042b8",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 820.3958129882812,
    "y": 752.22216796875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "e1ac2c61.1e53d"
      ]
    ]
  },
  {
    "id": "e1ac2c61.1e53d",
    "type": "function",
    "name": "restore from db",
    "func": "if (\"Presence\" in msg.payload){\n    node.warn('restoring presence from db backup')\n    context.global.Presence=msg.payload.Presence.Presence\n    context.global.PresenceHistory=msg.payload.Presence.PresenceHistory\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 988.3958129882812,
    "y": 752.22216796875,
    "z": "95f60c40.6a09f",
    "wires": [
      []
    ]
  },
  {
    "id": "3d75eae2.c28a16",
    "type": "comment",
    "name": "Cloundant DB -------------------------------------------------------------------------------------------------------------------------------",
    "info": "modfy bluemix-settings.json and add following line:\n\ncontext.global.InitialStateKey=\"<your initial state api key>\"",
    "x": 393.5,
    "y": 671.3332824707031,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "a45c8fba.5ba37",
    "type": "function",
    "name": "Save Snapshots to db",
    "func": "function delay(ms) {\n        var cur_d = new Date();\n        var cur_ticks = cur_d.getTime();\n        var ms_passed = 0;\n        while(ms_passed < ms) {\n            var d = new Date();  // Possible memory leak?\n            var ticks = d.getTime();\n            ms_passed = ticks - cur_ticks;\n            // d = null;  // Prevent memory leak?\n        }\n    }\nif(msg.req.headers.authorization && msg.req.headers.authorization==\"Bearer \"+context.global.FREEBOARD_TOKEN){\nvar msg1=msg;\nvar trigger=msg.payload.object_name;\nvar cam_list=msg.payload.cam_list.split(',');\nmsg1.res.statusCode=\"200\";\nnode.send([msg1,null])\nvar date=new Date()\nfor (var i=0;i<cam_list.length;i++){\n//for (var cam in context.global.winkState.cameras){\n var camera=context.global.winkState.cameras[cam_list[i]]\n var cam=cam_list[i]\nif ('snap_url' in camera && camera.snap_url!=='undefined'){\n    var msg={}\n    msg.url=camera.snap_url\n    msg.method=\"GET\"\n    msg.date=date\n    msg.topic=cam\n    msg.trigger=trigger\n    node.send([null,msg]);\n    delay(400)\n}\n}\n\n} else msg.res.send(401,\"Bad request\");\nreturn;",
    "outputs": "2",
    "noerr": 0,
    "x": 371.1041564941406,
    "y": 853.3332824707031,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "95f41d77.6a0be"
      ],
      [
        "d87017c9.278fe8"
      ]
    ]
  },
  {
    "id": "d87017c9.278fe8",
    "type": "http request",
    "name": "getPic",
    "method": "use",
    "ret": "bin",
    "url": "",
    "x": 595.1041717529297,
    "y": 859.3332824707031,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "cd572285.32a8e"
      ]
    ]
  },
  {
    "id": "cd572285.32a8e",
    "type": "function",
    "name": "save picture",
    "func": "if (typeof (context.global.ImageArchive)=== 'undefined') {\n    context.global.ImageArchive = {}\n}\n     for (var n in context.global.winkState.cameras){\n        if (!(n in context.global.ImageArchive)) context.global.ImageArchive[n]=[]\n    }\n\nnode.warn('Saving image from '+msg.topic)\n//node.warn(bitmap);\nvar DBmsg={\n         url:context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp\",\n        topic:msg.trigger,\n        method:\"POST\",\n        headers: \n            {\n                \"Content-Type\":\"application/json\"\n            },\n        payload: {\n            \"_id\":msg.topic+'|'+msg.date.getTime()+'|'+msg.trigger,\n            \"key\":\"Snapshot\",\n            \"cameraName\":msg.topic,\n            \"timestamp\":msg.date.getTime(),\n            \"trigger\":msg.trigger,\n            \"fileName\":\"CameraImage.jpg\",\n           \"_attachments\":\n                {\n                    \"CameraImage.jpg\":\n                    {\n                        \"content_type\":\"image/jpeg\",\n                        \"data\":msg.payload.toString('base64')\n                    }\n                }        \n        } \n}\n\n//context.global.ImageArchive[msg.topic].splice(0,0,camObj);\n//if (context.global.ImageArchive[msg.topic].length>10) context.global.ImageArchive[msg.topic].pop()\nreturn DBmsg;",
    "outputs": "1",
    "noerr": 0,
    "x": 752.1041717529297,
    "y": 857.3332824707031,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "40ed05f8.bf12fc"
      ]
    ]
  },
  {
    "id": "40ed05f8.bf12fc",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 927.0000457763672,
    "y": 857.22216796875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "67dc094d.9823f8"
      ]
    ]
  },
  {
    "id": "ec540631.13abf8",
    "type": "http in",
    "name": "",
    "url": "/red/save_images",
    "method": "get",
    "swaggerDoc": "",
    "x": 145.60418701171875,
    "y": 853.22216796875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "a45c8fba.5ba37"
      ]
    ]
  },
  {
    "id": "95f41d77.6a0be",
    "type": "http response",
    "name": "",
    "x": 598.9999542236328,
    "y": 816.22216796875,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "67dc094d.9823f8",
    "type": "function",
    "name": "cache results",
    "func": "if ('ok' in msg.payload && msg.payload.ok){\n    var cameraname=msg.payload.id.split('|')[0];\n    var tstamp=msg.payload.id.split('|')[1];\n    node.warn('Camera - ' + cameraname)\n    if (typeof(context.global.winkState.cameras[cameraname].activities)==='undefined') context.global.winkState.cameras[cameraname].activities=[]\n    var cam_act={\n        id:msg.payload.rev,\n        cloudant_id:msg.payload.id,\n        category:\"cuepoint\",\n        cuepoint_id:Math.round(tstamp/1000),\n        trigger:msg.topic,\n        snapshot_url:context.global.BlueMixUrlBase+\"/red/camera_history?img_id=\"+msg.payload.id\n    }\n   context.global.winkState.cameras[cameraname].activities.splice(0,0,cam_act);\n   if (context.global.winkState.cameras[cameraname].activities.length>15){\n    for (var i=15; i<context.global.winkState.cameras[cameraname].activities.length;i++){\n    var doc_id=context.global.winkState.cameras[cameraname].activities[i].cloudant_id\n    var rev=context.global.winkState.cameras[cameraname].activities[i].id\n    if(typeof(doc_id)!=='undefined'){\n    var DBmsg={\n         topic:cameraname,\n         position:i,\n         url:context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp/\"+doc_id+\"?rev=\"+rev,\n        method:\"DELETE\"\n    }\n    node.send(DBmsg);\n    }\n   }\n   }\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 1077.0000457763672,
    "y": 857.22216796875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "f1c93134.0e36d"
      ]
    ]
  },
  {
    "id": "f1c93134.0e36d",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 1230.0001068115234,
    "y": 855.22216796875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "f6f07393.090f9"
      ]
    ]
  },
  {
    "id": "f6f07393.090f9",
    "type": "function",
    "name": "delete old pics",
    "func": "if (('ok' in msg.payload && msg.payload.ok) ||('error' in msg.payload && msg.payload.error=='not_found') ){\n    node.warn('deleting '+msg.topic+' position '+ msg.position)\n    context.global.winkState.cameras[msg.topic].activities.splice(msg.position,1)\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 1398.0001068115234,
    "y": 856.22216796875,
    "z": "95f60c40.6a09f",
    "wires": [
      []
    ]
  },
  {
    "id": "fda4330c.025bd",
    "type": "http in",
    "name": "",
    "url": "/red/camera_history",
    "method": "get",
    "swaggerDoc": "",
    "x": 158.00001525878906,
    "y": 911.22216796875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "1867f11e.e7980f"
      ]
    ]
  },
  {
    "id": "1867f11e.e7980f",
    "type": "function",
    "name": "gen CLD url",
    "func": "if ('img_id' in msg.payload){\n    msg.url=context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp/\"+msg.payload.img_id+\"/CameraImage.jpg\"\n    msg.method=\"GET\"\n}\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 369.99998474121094,
    "y": 911.22216796875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "ec0ae219.13f52"
      ]
    ]
  },
  {
    "id": "ec0ae219.13f52",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "bin",
    "url": "",
    "x": 530.9999847412109,
    "y": 913.22216796875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "2f025444.d0fdac"
      ]
    ]
  },
  {
    "id": "2f025444.d0fdac",
    "type": "http response",
    "name": "",
    "x": 698.9999847412109,
    "y": 913.22216796875,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "ffcc4f6f.0033b",
    "type": "http in",
    "name": "",
    "url": "/red/retrieve_activities",
    "method": "get",
    "swaggerDoc": "",
    "x": 157.60418701171875,
    "y": 1006.22216796875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "be963410.4169c8"
      ]
    ]
  },
  {
    "id": "be963410.4169c8",
    "type": "function",
    "name": "get activities from db",
    "func": "if(msg.req.headers.authorization && msg.req.headers.authorization==\"Bearer \"+context.global.FREEBOARD_TOKEN){\nvar msg1=msg;\nmsg1.res.statusCode=\"200\";\nmsg.url=context.global.VCAP_SERVICES.cloudantNoSQLDB[0].credentials.url+\"/winkapp/_all_docs?descending=true\"\nmsg.method=\"GET\"\nmsg.topic=msg.payload.camera_name\nnode.send([msg1,msg])\n} else\n{\n    msg.res.statusCode=400\n    node.send([msg,null])\n}\nreturn;",
    "outputs": "2",
    "noerr": 0,
    "x": 387.9999237060547,
    "y": 1004.22216796875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "13a00a3a.ec5ff6"
      ],
      [
        "2ed3875f.d12c78"
      ]
    ]
  },
  {
    "id": "2ed3875f.d12c78",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 612.9999847412109,
    "y": 1037.22216796875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "5191355.fae6ecc"
      ]
    ]
  },
  {
    "id": "5191355.fae6ecc",
    "type": "function",
    "name": "cache cam history",
    "func": "if('total_rows' in msg.payload && msg.payload.total_rows>0){\n var db_rows=msg.payload.rows;\n context.global.winkState.cameras[msg.topic].activities=[]\n //db_rows.foreach(function(row){\n for(var i=0;i<db_rows.length;i++){\n     var row=db_rows[i];\n     if(row.id.indexOf(msg.topic)!=-1){\n      var tstamp=row.id.split('|')[1]\n      var cam_act={\n        id:row.value.rev,\n        cloudant_id:row.id,\n        category:\"cuepoint\",\n        cuepoint_id:Math.round(tstamp/1000),\n        trigger:row.id.split('|')[2],\n        snapshot_url:context.global.BlueMixUrlBase+\"/red/camera_history?img_id=\"+row.id\n      } \n      context.global.winkState.cameras[msg.topic].activities.push(cam_act)         \n     }\n }\n}\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 791,
    "y": 1037.2221374511719,
    "z": "95f60c40.6a09f",
    "wires": [
      []
    ]
  },
  {
    "id": "13a00a3a.ec5ff6",
    "type": "http response",
    "name": "",
    "x": 609.9999542236328,
    "y": 989.22216796875,
    "z": "95f60c40.6a09f",
    "wires": []
  }
]
