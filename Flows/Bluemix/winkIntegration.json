[
  {
    "id": "e4d57a93.1b2a88",
    "type": "function",
    "name": "",
    "func": "var WinkCMDmsg=\"\";\nif (msg.payload.iftttkey==context.global.IFTTT_TOKEN)\n{\n    if (typeof msg.payload.ifttt !=='undefined')\n    {\n      context.global.ifttt=(msg.payload.ifttt.toLowerCase()==\"on\" ? true:false)\n      msg.res.StatusCode=200;\n    }\n    if (typeof msg.payload.winkName !=='undefined')\n    {\n    node.warn(msg.payload.winkName)\n    if (msg.payload.level !=='undefined')\n    {\n        level=msg.payload.level\n    }\n    else level=100\n    node.warn(level)\n    WinkCMDmsg = context.global.executeWinkCMD(msg.payload.winkName,msg.payload.type,msg.payload.cmd,level)\n    msg.res.StatusCode=200;\n    //node.warn(WinkCMDmsg.payload)\n    }\n}\nelse {\n    node.warn(\"ifttt messages bad request\")\n     msg.res.StatusCode=403;\n}\nif (WinkCMDmsg!==\"\")\n{\n    return [msg,WinkCMDmsg];\n}\nelse\n{\nreturn [msg];\n}",
    "outputs": "2",
    "noerr": 0,
    "x": 340.5,
    "y": 82.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "ea765f78.1589a"
      ],
      [
        "81f51a30.7e0ae8"
      ]
    ]
  },
  {
    "id": "bac7fd34.4538",
    "type": "http in",
    "name": "",
    "url": "/red/ifttt",
    "method": "post",
    "swaggerDoc": "",
    "x": 113.5,
    "y": 83,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "e4d57a93.1b2a88"
      ]
    ]
  },
  {
    "id": "ea765f78.1589a",
    "type": "http response",
    "name": "",
    "x": 549.4999847412109,
    "y": 52.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "3616370d.c9e9c8",
    "type": "comment",
    "name": "IFTTT Integration-------------------------------------------------------------------------------------------------------------------------------",
    "info": "",
    "x": 424.5,
    "y": 20,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "81f51a30.7e0ae8",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 576.5,
    "y": 96.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": [
      []
    ]
  },
  {
    "id": "e427dcbe.1bd82",
    "type": "comment",
    "name": "Wink API Apdex-------------------------------------------------------------------------------------------------------------------------------",
    "info": "",
    "x": 416.5,
    "y": 135.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "d68278b3.297d88",
    "type": "inject",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "600",
    "crontab": "",
    "once": true,
    "x": 114.5,
    "y": 175.9998779296875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "f3c39b86.0c3c68"
      ]
    ]
  },
  {
    "id": "f6a0adf0.095f5",
    "type": "debug",
    "name": "",
    "active": false,
    "console": "true",
    "complete": "payload",
    "x": 827.5,
    "y": 176.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "f3c39b86.0c3c68",
    "type": "function",
    "name": "",
    "func": "var newMsg ={\n    \"url\":\"http://status.winkapp.com/metrics-display/009ykpcmnm25/day.json\",\n    headers: {\n        \"Content-Type\":\"application/json\"\n    }\n};\nreturn newMsg;",
    "outputs": 1,
    "noerr": 0,
    "x": 247.5,
    "y": 176.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "53a38c14.ac5c74"
      ]
    ]
  },
  {
    "id": "53a38c14.ac5c74",
    "type": "http request",
    "name": "",
    "method": "GET",
    "ret": "txt",
    "url": "",
    "x": 399.5,
    "y": 176.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "e42ea40c.1bd158"
      ]
    ]
  },
  {
    "id": "c51a0bef.3ae5f8",
    "type": "function",
    "name": "",
    "func": "context.global.winkState.winkAPI = \"\";\nwinkAPI=\"\";\nfor(i = 0; i<msg.payload.metrics.length; i++) \n    {                   \n        for(j = 0; j<msg.payload.metrics[i].data.length; j++)\n        {\n            winkAPI = msg.payload.metrics[i].data[j].value;\n        }\n    }\ncontext.global.winkState.winkAPI=winkAPI;\nvar newMsg={\n    payload:\"Wink Apdex is currently: \"+context.global.winkState.winkAPI\n};\nreturn newMsg;",
    "outputs": 1,
    "noerr": 0,
    "x": 682.5,
    "y": 176.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "f6a0adf0.095f5"
      ]
    ]
  },
  {
    "id": "e42ea40c.1bd158",
    "type": "json",
    "name": "",
    "x": 551.5,
    "y": 176.99993896484375,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "c51a0bef.3ae5f8"
      ]
    ]
  },
  {
    "id": "d5fd0fa7.2a02f",
    "type": "http in",
    "name": "",
    "url": "/freeboard/camera",
    "method": "get",
    "swaggerDoc": "",
    "x": 165,
    "y": 279.4998779296875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "5f7cb809.a08348"
      ]
    ]
  },
  {
    "id": "5f7cb809.a08348",
    "type": "function",
    "name": "",
    "func": "if (msg.payload.token==context.global.FREEBOARD_TOKEN)\n{\n   msg.url=\"https://winkapi.quirky.com/cameras/\"+msg.payload.id+\"/image\"\n   msg.method=\"GET\"\n    msg.headers= {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken,\n        \"User-Agent\":\"Manufacturer/Darwin node/0.10.30 Wink/3.1.0\"\n    }\nreturn msg;\n}\nelse {\n    msg.res.send(400,\"Bad Request darling\");\n}\n",
    "outputs": 1,
    "noerr": 0,
    "x": 400,
    "y": 279.49993896484375,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "2a279485.d5d86c"
      ]
    ]
  },
  {
    "id": "2a279485.d5d86c",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "bin",
    "url": "",
    "x": 570,
    "y": 278.49993896484375,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "e107225d.1ef8e"
      ]
    ]
  },
  {
    "id": "e107225d.1ef8e",
    "type": "http response",
    "name": "",
    "x": 735,
    "y": 279.49993896484375,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "a69abbed.596548",
    "type": "comment",
    "name": "DromCam/NestCam Integration-------------------------------------------------------------------------------------------------------------------------------",
    "info": "",
    "x": 466.5,
    "y": 236.4998779296875,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "f0147797.0feb88",
    "type": "comment",
    "name": "Presence  via IFTTT/Tasker/etc. -------------------------------------------------------------------------------------------------------------------------------",
    "info": "",
    "x": 466,
    "y": 337.4998779296875,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "ce6d66f1.319298",
    "type": "http in",
    "name": "",
    "url": "/red/presence",
    "method": "post",
    "swaggerDoc": "",
    "x": 146,
    "y": 384.4998779296875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "c2e20c4f.3d1df"
      ]
    ]
  },
  {
    "id": "c2e20c4f.3d1df",
    "type": "function",
    "name": "Update Presence entry",
    "func": "pr_msg={};\npr_msg.payload={old_value:context.global.checkPresence()}\nif (msg.payload.iftttkey==context.global.IFTTT_TOKEN)\n{\n    if (typeof(context.global.Presence) === 'undefined'){\n    context.global.Presence = {}  \n    }\n    if (msg.payload.name !=='undefined'){\n        if (!context.global.Presence[msg.payload.name]) context.global.Presence[msg.payload.name]={}\n            context.global.Presence[msg.payload.name].home=msg.payload.home\n        }\n    msg.res.StatusCode=200;\n    pr_msg.payload.new_value=context.global.checkPresence();\n}\nelse {\n    node.warn(\"presense, bad request\")\n     msg.res.StatusCode=403;\n     pr_msg.payload.new_value='ERROR';\n}\nreturn [msg,pr_msg];",
    "outputs": "2",
    "noerr": 0,
    "x": 382,
    "y": 385.4998779296875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "c1e6b679.3e1948"
      ],
      [
        "6a71ee92.958e1"
      ]
    ]
  },
  {
    "id": "c1e6b679.3e1948",
    "type": "http response",
    "name": "",
    "x": 812.9999847412109,
    "y": 378.4998779296875,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "6a71ee92.958e1",
    "type": "function",
    "name": "",
    "func": "if (msg.payload.new_value!=='ERROR' && msg.payload.new_value!==msg.payload.old_value){\n    var scene_name=(msg.payload.new_value ? 'PRESENCE' : 'NO PRESENCE');\n    for (var key in context.global.winkState.scenes){\n        if ( context.global.winkState.scenes[key].name.toUpperCase()==scene_name)\n        {\n            var newMsg ={\n            \"url\":\"https://winkapi.quirky.com/scenes/\"+context.global.winkState.scenes[key].object_id+\"/activate\",\n            \"method\": \"POST\",\n            headers: {\n                \"Authorization\":\"Bearer \"+context.global.WinkToken,\n                \"Content-Type\":\"application/json\"\n                }\n            }\n        node.send(newMsg)\n        return;\n        }\n    }\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "x": 593.8957977294922,
    "y": 429.72216796875,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "d7e660d0.2819a"
      ]
    ]
  },
  {
    "id": "d7e660d0.2819a",
    "type": "http request",
    "name": "",
    "method": "use",
    "ret": "obj",
    "url": "",
    "x": 800.8957977294922,
    "y": 429.833251953125,
    "z": "95f60c40.6a09f",
    "wires": [
      []
    ]
  },
  {
    "id": "b25b6076.4da4a",
    "type": "function",
    "name": "",
    "func": "msg.payload={\n    \"thermostats\":context.global.EcobeeThermostats,\n    \"sensor_pods\":context.global.EcobeeSensors\n};\nif (typeof context.global.winkState.thermostats=='undefined'){ context.global.winkState.thermostats = new Object(); }\nfor (var name in msg.payload.thermostats)\n{\n//    node.warn(\"Importing: \"+name+\" thermostat\");\n    context.global.winkState.thermostats[name]={\n        \"name\":name,\n        \"object_type\": msg.payload.thermostats[name].object_type,\n        \"object_id\": msg.payload.thermostats[name].object_id,\n        \"freeboard\": 0,\n        \"connection\": msg.payload.thermostats[name].connection,\n        \"min_set_point\": (msg.payload.thermostats[name].min_set_point-32)*(5/9),\n        \"max_set_point\": (msg.payload.thermostats[name].max_set_point-32)*(5/9),\n        \"mode\": msg.payload.thermostats[name].mode,\n        \"temperature\": (msg.payload.thermostats[name].temperature-32)*(5/9),\n        \"humidity\": msg.payload.thermostats[name].humidity,\n        \"users_away\":false\n    };\n}\n//node.warn(\"Ecobee Thermostat import finished\");\n\nfor (var name in msg.payload.sensor_pods)\n{\n//    node.warn(\"Importing: \"+name+\" sensor pod\");\n    context.global.winkState.sensor_pods[name]={\n        \"name\":name,\n        \"object_type\":msg.payload.sensor_pods[name].object_type,\n        \"object_id\":msg.payload.sensor_pods[name].object_id,\n        \"freeboard\":0,\n    }\n    if (msg.payload.sensor_pods[name].motion==\"true\"){context.global.winkState.sensor_pods[name].motion=true}\n    else if (msg.payload.sensor_pods[name].motion==\"false\"){context.global.winkState.sensor_pods[name].motion=false}\n    context.global.winkDevCap[name]={\n        \"sensor_types\":[{}]\n    }\n    context.global.winkDevCap[name].sensor_types=[{\n            \"field\":\"motion\",\n            \"type\":\"boolean\"\n        }]\n    }\n//node.warn(\"Ecobee Remote Sensor import finished\");\nvar newMsg={\n    \"payload\":\"Ecobee Thermostat and Remote Sensor Data imported successfully\"\n};\nreturn newMsg;",
    "outputs": 1,
    "noerr": 0,
    "x": 266.50000381469727,
    "y": 513.7500076293945,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "dba5e086.245a2"
      ]
    ]
  },
  {
    "id": "8e0615bc.71f9e8",
    "type": "inject",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 117,
    "y": 514,
    "z": "95f60c40.6a09f",
    "wires": [
      [
        "b25b6076.4da4a"
      ]
    ]
  },
  {
    "id": "dba5e086.245a2",
    "type": "debug",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "false",
    "x": 439.25001525878906,
    "y": 513.7500076293945,
    "z": "95f60c40.6a09f",
    "wires": []
  },
  {
    "id": "a915c55f.56ea38",
    "type": "comment",
    "name": "Integration with Ecobee Node Red ---------------------------------------------------------------------------------------",
    "info": "",
    "x": 369,
    "y": 474,
    "z": "95f60c40.6a09f",
    "wires": []
  }
]
