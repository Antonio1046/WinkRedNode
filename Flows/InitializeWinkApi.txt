[{"id":"46d99f2d.b9266","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"86400","crontab":"","once":true,"x":114,"y":88.5,"z":"a98cba52.567348","wires":[["f5e3028f.0a1d","cd07d672.32f828"]]},{"id":"f5e3028f.0a1d","type":"function","name":"Get OAuth Tocken","func":"var uid=context.global.WinkUser.uid;\nvar pwd=context.global.WinkUser.pwd;\nvar newMsg ={\n    \"url\":\"https://winkapi.quirky.com/oauth2/token\",\n    \"method\": \"POST\",\n    headers: {\n        \"Content-Type\":\"application/json\"\n    },\n    payload: {\n        \"client_id\": \"7243d8212e040d75dada47ce68a04c24\",\n        \"client_secret\": \"7d597e496afd6196db8d8738829f5a09\",\n        \"username\": uid,\n        \"password\": pwd,\n        \"grant_type\": \"password\"\n    }\n}\nreturn newMsg;","outputs":1,"valid":true,"x":308,"y":88.5,"z":"a98cba52.567348","wires":[["46a71633.b958e8"]]},{"id":"cd07d672.32f828","type":"function","name":"DefineGlobalObjects","func":"//use this function to initialize global variables that can be used in any flow or function\n//and will keep their values while application is running\n\nif (typeof context.global.ignoreMotion === 'undefined')\n{\n    context.global.ignoreMotion=false;\n}\nif (typeof context.global.mediaPlaying==='undefined')\n{\n    context.global.mediaPlaying=false;\n}\nif (typeof context.global.Weather === 'undefined')\n{\n    context.global.Weather=new Object();\n}\nreturn;","outputs":1,"valid":true,"x":309,"y":137.5,"z":"a98cba52.567348","wires":[[]]},{"id":"46a71633.b958e8","type":"http request","name":"","method":"use","ret":"obj","url":"","x":521,"y":89.5,"z":"a98cba52.567348","wires":[["3e2a43e3.c1d5bc"]]},{"id":"3e2a43e3.c1d5bc","type":"function","name":"DefineGlobalTocken","func":"// sample function that stores wink token in a global variable so other api calls\n//can use that\ncontext.global.WinkToken=msg.payload.data.access_token;\nnode.log(context.global.WinkToken);\nvar msg ={ \"payload\":\"Done\"}\nreturn msg;","outputs":1,"valid":true,"x":758,"y":89.5,"z":"a98cba52.567348","wires":[["457c94a1.ba836c"]]},{"id":"457c94a1.ba836c","type":"function","name":"Prepare HTTPS requests by device type","func":"var newMsg1 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/light_bulbs\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\nvar newMsg2 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/binary_switches\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg3 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/locks\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg4 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/groups\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\nvar newMsg5 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/sensor_pods\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\nvar newMsg6 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/scenes\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg7 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/thermostats\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg8 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/eggtrays\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg9 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/piggy_banks\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg10 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/propane_tanks\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg11 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/cloud_clocks\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nreturn [newMsg1,newMsg2,newMsg3,newMsg4,newMsg5,newMsg6,newMsg7,newMsg8,newMsg9,newMsg10,newMsg11];\n","outputs":"11","valid":true,"x":1061,"y":87.5,"z":"a98cba52.567348","wires":[["d462ac54.2b9d5"],["6a8cc486.95733c"],["16766861.e98998"],["bb083acf.44f7c8"],["a00841f0.5ff7c"],["253d0cbb.dac2f4"],["7e740a1b.818bf4"],["ade69f01.52196"],["f899a787.076658"],["a4d06045.5b2fa"],["f9b4556.f064ba8"]]},{"id":"d462ac54.2b9d5","type":"http request","name":"GetLightBulbs","method":"use","ret":"obj","url":"","x":1540,"y":28.5,"z":"a98cba52.567348","wires":[["2139424b.dec6be"]]},{"id":"2139424b.dec6be","type":"function","name":"SetGlobalLightBulbList","func":"//sample function to cache list of Wink Light bulbs and initialize their state\ncontext.global.WinkLightBulbs =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        context.global.WinkLightBulbs[msg.payload.data[i].name]={\n            \"id\": msg.payload.data[i].light_bulb_id,\n            \"brightness\": (msg.payload.data[i].last_reading.powered ? msg.payload.data[i].last_reading.brightness : 0),\n            \"powered\":msg.payload.data[i].last_reading.powered\n        };\n        \n    }\n\nreturn;","outputs":1,"valid":true,"x":1871,"y":31.5,"z":"a98cba52.567348","wires":[[]]},{"id":"16ecc1f9.e9133e","type":"function","name":"SetGlobalBinarySwitches","func":"//sample function to cache list of Wink Binary Switches and initialize their state\ncontext.global.WinkSwitches =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        context.global.WinkSwitches[msg.payload.data[i].name]= {\n            \"id\":msg.payload.data[i].binary_switch_id,\n            \"powered\":msg.payload.data[i].last_reading.powered\n        };\n    }\n\nreturn;","outputs":1,"valid":true,"x":1879,"y":74.5,"z":"a98cba52.567348","wires":[[]]},{"id":"6a8cc486.95733c","type":"http request","name":"GetBinarySwitches","method":"use","ret":"obj","url":"","x":1555,"y":70.5,"z":"a98cba52.567348","wires":[["16ecc1f9.e9133e"]]},{"id":"16766861.e98998","type":"http request","name":"GetLocks","method":"use","ret":"obj","url":"","x":1529,"y":113.5,"z":"a98cba52.567348","wires":[["804cea5.f7fb318"]]},{"id":"804cea5.f7fb318","type":"function","name":"SetGlobalLocks","func":"//sample function to cache list of Wink Locks and initialize their state\n//I am fetching only Locked state for this example\ncontext.global.WinkLocks =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        context.global.WinkLocks[msg.payload.data[i].name]= {\n            \"name\":msg.payload.data[i].name,\n            \"id\":msg.payload.data[i].lock_id,\n            \"locked\":msg.payload.data[i].last_reading.locked\n        }\n    }\n\nreturn;","outputs":1,"valid":true,"x":1848,"y":117.5,"z":"a98cba52.567348","wires":[[]]},{"id":"8fe6cc8e.70193","type":"function","name":"SetGlobalGroups","func":"//sample function to cache list of Wink Groups\ncontext.global.WinkGroups =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].members.length >0)\n        {\n            context.global.WinkGroups[msg.payload.data[i].name]= msg.payload.data[i].group_id;\n        }\n    }\n\nreturn;","outputs":1,"valid":true,"x":1854,"y":162.5,"z":"a98cba52.567348","wires":[[]]},{"id":"bb083acf.44f7c8","type":"http request","name":"GetGroups","method":"use","ret":"obj","url":"","x":1538,"y":156.5,"z":"a98cba52.567348","wires":[["8fe6cc8e.70193"]]},{"id":"b506024b.4afa","type":"function","name":"SetGlobalSensors","func":"//sample function to cache list of Wink Motion Sensors and Trippers and initialize their state\ncontext.global.WinkMSensors =new Object();\ncontext.global.WinkTrippers =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].model_name==\"Motion Sensor\")\n        {\n            context.global.WinkMSensors[msg.payload.data[i].sensor_pod_id] = {\n                \"id\":msg.payload.data[i].sensor_pod_id,\n                \"name\":msg.payload.data[i].name,\n                \"motion\":msg.payload.data[i].last_reading.motion,\n                \"type\": msg.payload.data[i].model_name\n\n            };\n        }\n         if (msg.payload.data[i].model_name==\"Tripper\")\n         {\n            context.global.WinkTrippers[msg.payload.data[i].sensor_pod_id] = {\n                \"id\":msg.payload.data[i].sensor_pod_id,\n                \"name\":msg.payload.data[i].name,\n                \"opened\":msg.payload.data[i].last_reading.opened,\n                \"type\": msg.payload.data[i].model_name,\n\n            };\n        }\n    }\nreturn;","outputs":1,"valid":true,"x":1850,"y":204.5,"z":"a98cba52.567348","wires":[[]]},{"id":"a00841f0.5ff7c","type":"http request","name":"GetSensors","method":"use","ret":"obj","url":"","x":1543,"y":200.5,"z":"a98cba52.567348","wires":[["b506024b.4afa"]]},{"id":"253d0cbb.dac2f4","type":"http request","name":"GetShortcuts","method":"use","ret":"obj","url":"","x":1537,"y":245.5,"z":"a98cba52.567348","wires":[["da3d8de5.25c27"]]},{"id":"da3d8de5.25c27","type":"function","name":"SetGlobalShortcuts","func":"//sample function to cache list of Wink Shortcuts\ncontext.global.WinkScenes =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].members.length >0)\n        {\n            context.global.WinkScenes[msg.payload.data[i].name]= msg.payload.data[i].scene_id;\n        }\n    }\n\nreturn;","outputs":1,"valid":true,"x":1871,"y":244.5,"z":"a98cba52.567348","wires":[[]]},{"id":"7e740a1b.818bf4","type":"http request","name":"GetThermostats","method":"use","ret":"obj","url":"","x":1540,"y":294.5,"z":"a98cba52.567348","wires":[["49e2a51e.b61d5c"]]},{"id":"49e2a51e.b61d5c","type":"function","name":"SetGlobalThermostats","func":"//sample function to cache list of Wink Thermostats and initialize their state\n//Since I only have NEST termostat i tried to fetch only common items. Various thermostats\n//can have additional data available.\ncontext.global.WinkThermostats =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n            context.global.WinkThermostats[msg.payload.data[i].name]= {\n            \"id\": msg.payload.data[i].thermostat_id,\n            \"name\": msg.payload.data[i].name,\n            \"mode\": msg.payload.data[i].last_reading.mode,\n            \"away\": msg.payload.data[i].last_reading.user_away,\n            \"temperature\":msg.payload.data[i].last_reading.temperature,\n            \"units\":msg.payload.data[i].last_reading.units\n            }\n            \n    }\n\nreturn;","outputs":1,"valid":true,"x":1874,"y":293.5,"z":"a98cba52.567348","wires":[[]]},{"id":"ade69f01.52196","type":"http request","name":"GetEggTray","method":"use","ret":"obj","url":"","x":1523,"y":336.5,"z":"a98cba52.567348","wires":[["b127248d.4ed8d8"]]},{"id":"b127248d.4ed8d8","type":"function","name":"SetGlobalEggTrays","func":"context.global.WinkEggTrays =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].eggtray_id.length >0)\n        {\n            context.global.WinkEggTrays[msg.payload.data[i].eggtray_id]= {\n                \"id\":msg.payload.data[i].eggtray_id,\n                \"inventory\":msg.payload.data[i].last_reading.inventory\n        };\n    }\n}\nreturn;","outputs":1,"valid":true,"x":1876.25,"y":341,"z":"a98cba52.567348","wires":[[]]},{"id":"f899a787.076658","type":"http request","name":"GetPiggyBank","method":"use","ret":"obj","url":"","x":1535.5,"y":383.9999990463257,"z":"a98cba52.567348","wires":[["d87abafd.278548"]]},{"id":"d87abafd.278548","type":"function","name":"SetGlobalPiggyBanks","func":"context.global.WinkPiggyBanks =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].piggy_bank_id.length >0)\n        {\n            context.global.WinkPiggyBanks[msg.payload.data[i].name]= {\n                \"id\":msg.payload.data[i].piggy_bank_id,\n                \"name\":msg.payload.data[i].name,\n                \"balance\":msg.payload.data[i].balance/100,\n                \"goal\":msg.payload.data[i].savings_goal/100\n        };\n    }\n}\nreturn;","outputs":1,"valid":true,"x":1885.5,"y":383,"z":"a98cba52.567348","wires":[[]]},{"id":"a4d06045.5b2fa","type":"http request","name":"GetPropaneTanks","method":"use","ret":"obj","url":"","x":1535.666618347168,"y":430.1666784286499,"z":"a98cba52.567348","wires":[["eceeb5c8.131148"]]},{"id":"eceeb5c8.131148","type":"function","name":"SetGlobalPropaneTanks","func":"context.global.WinkPropaneTanks =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].propane_tank_id.length >0)\n        {\n            context.global.WinkPropaneTanks[msg.payload.data[i].name]= {\n                \"id\":msg.payload.data[i].propane_tank_id,\n                \"name\":msg.payload.data[i].name,\n                \"remaining\":msg.payload.data[i].last_reading.remaining,\n                \"connection\":msg.payload.data[i].last_reading.connection\n        };\n    }\n}\nreturn;","outputs":1,"valid":true,"x":1894.6666259765625,"y":428.16668701171875,"z":"a98cba52.567348","wires":[[]]},{"id":"f9b4556.f064ba8","type":"http request","name":"GetCloudClocks","method":"use","ret":"obj","url":"","x":1536.666618347168,"y":477.1666784286499,"z":"a98cba52.567348","wires":[["57c936d1.a836c8"]]},{"id":"57c936d1.a836c8","type":"function","name":"SetGlobalCloudClock","func":"context.global.WinkNimbus =new Object();\ncontext.global.WinkNimbus.Dials = new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].cloud_clock_id.length >0)\n        {\n            context.global.WinkNimbus[msg.payload.data[i].cloud_clock_id]= {\n                \"id\":msg.payload.data[i].cloud_clock_id,\n                \"name\":msg.payload.data[i].name,\n                \"mac_address\":msg.payload.data[i].mac_address,\n                \n        };\n        for (j=0; j<msg.payload.data[i].dials.length; j++)\n        {\n            context.global.WinkNimbus.Dials[msg.payload.data[i].dials[j].dial_id]={\n                \"id\":msg.payload.data[i].dials[j].dial_id,\n                \"name\":msg.payload.data[i].dials[j].name,\n                \"label\":msg.payload.data[i].dials[j].label,\n                \"dial_index\":msg.payload.data[i].dials[j].dial_index\n            };\n        }\n    }\n}\nreturn;","outputs":1,"valid":true,"x":1880.6666259765625,"y":473.16668701171875,"z":"a98cba52.567348","wires":[[]]}]