[{"id":"84436061.7bbca","type":"subflow","name":"Update t-stat status","in":[{"x":70,"y":70,"wires":[{"id":"a44f5700.5bb0a8"}]}],"out":[]},{"id":"a44f5700.5bb0a8","type":"function","name":"Update T-Stat","func":"context.global.WinkThermostats[msg.payload.name].mode=msg.payload.last_reading.mode;\ncontext.global.WinkThermostats[msg.payload.name].away=msg.payload.last_reading.users_away;\ncontext.global.WinkThermostats[msg.payload.name].temperature=msg.payload.last_reading.temperature;\ncontext.global.WinkThermostats[msg.payload.name].fan_active=msg.payload.last_reading.fan_timer_active;\nnode.warn(msg.payload.name+\" temp:\"+context.global.WinkThermostats[msg.payload.name].temperature);\nreturn msg;","outputs":1,"valid":true,"x":248,"y":168,"z":"84436061.7bbca","wires":[[]]},{"id":"43091984.bcf6e8","type":"subflow","name":"Update Lock Status","in":[{"x":70,"y":70,"wires":[{"id":"4b103684.b4efc8"}]}],"out":[]},{"id":"4b103684.b4efc8","type":"function","name":"Update Lock State","func":"context.global.WinkLocks[msg.payload.name].locked=msg.payload.last_reading.locked;\n node.warn(msg.payload.name+\" locked: \"+context.global.WinkLocks[msg.payload.name].locked);\nreturn msg;","outputs":1,"valid":true,"x":231,"y":155,"z":"43091984.bcf6e8","wires":[[]]},{"id":"35be52c7.ca41ae","type":"subflow","name":"Update Sensor Status","in":[{"x":97,"y":71,"wires":[{"id":"fc518dd.f03ae7"}]}],"out":[]},{"id":"fc518dd.f03ae7","type":"function","name":"Cache sensor status","func":"if (msg.payload.model_name==\"Motion Sensor\")\n{\n    context.global.WinkMSensors[msg.payload.sensor_pod_id].motion=msg.payload.last_reading.motion;\n    node.warn(context.global.WinkMSensors[msg.payload.sensor_pod_id].name+\":motion \"+ msg.payload.last_reading.motion);\n}\nif (msg.payload.model_name==\"Tripper\")\n{\n    context.global.WinkTrippers[msg.payload.sensor_pod_id].opened=msg.payload.last_reading.opened;\n    node.warn(context.global.WinkTrippers[msg.payload.sensor_pod_id].name+\":opened \"+msg.payload.last_reading.opened );\n}\nmsg._id=msg.payload.sensor_pod_id;\nreturn msg;","outputs":1,"valid":true,"x":248,"y":93,"z":"35be52c7.ca41ae","wires":[[]]},{"id":"35b61f5c.ca49e","type":"subflow","name":"Update Light Status","in":[{"x":70,"y":70,"wires":[{"id":"e916b65f.16e948"}]}],"out":[]},{"id":"e916b65f.16e948","type":"function","name":"UpdateLightStatus","func":"if (msg.payload.light_bulb_id && msg.payload.desired_state.powered==msg.payload.last_reading.powered && msg.payload.desired_state.brightness==msg.payload.last_reading.brightness)\n{\n    context.global.WinkLightBulbs[msg.payload.name].brightness= (msg.payload.last_reading.powered ? msg.payload.last_reading.brightness : 0);\n    msg._id=msg.payload.light_bulb_id;\n    node.warn(msg.payload.name+\" brightness \"+ context.global.WinkLightBulbs[msg.payload.name].brightness);\n}\nif (msg.payload.binary_switch_id && msg.payload.desired_state.powered==msg.payload.last_reading.powered)\n{\n    context.global.WinkSwitches[msg.payload.name].powered=msg.payload.last_reading.powered;\n    msg._id=msg.payload.light_bulb_id;\n    node.warn(msg.payload.name+\" powered \" +context.global.WinkSwitches[msg.payload.name].powered );\n}\nreturn msg;\n","outputs":1,"valid":true,"x":223,"y":151,"z":"35b61f5c.ca49e","wires":[[]]},{"id":"8ffa6a9a.700598","type":"http request","name":"","method":"use","ret":"obj","url":"","x":516,"y":101,"z":"254ec046.dab14","wires":[["3323390d.ccdcc6"]]},{"id":"43afc5a0.bc503c","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"86400","crontab":"","once":true,"x":109,"y":100,"z":"254ec046.dab14","wires":[["16ce4ac2.e931b5","140c80ef.ebf37f"]]},{"id":"16ce4ac2.e931b5","type":"function","name":"Get OAuth Tocken","func":"var uid=context.global.WinkUser.uid;\nvar pwd=context.global.WinkUser.pwd;\nvar newMsg ={\n    \"url\":\"https://winkapi.quirky.com/oauth2/token\",\n    \"method\": \"POST\",\n    headers: {\n        \"Content-Type\":\"application/json\"\n    },\n    payload: {\n        \"client_id\": \"7243d8212e040d75dada47ce68a04c24\",\n        \"client_secret\": \"7d597e496afd6196db8d8738829f5a09\",\n        \"username\": uid,\n        \"password\": pwd,\n        \"grant_type\": \"password\"\n    }\n}\nreturn newMsg;","outputs":1,"valid":true,"x":303,"y":100,"z":"254ec046.dab14","wires":[["8ffa6a9a.700598"]]},{"id":"3323390d.ccdcc6","type":"function","name":"DefineGlobalTocken","func":"// sample function that stores wink token in a global variable so other api calls\n//can use that\ncontext.global.WinkToken=msg.payload.data.access_token;\nnode.log(context.global.WinkToken);\nvar msg ={ \"payload\":\"Done\"}\nreturn msg;","outputs":1,"valid":true,"x":753,"y":101,"z":"254ec046.dab14","wires":[["9150e081.6eaf2"]]},{"id":"9150e081.6eaf2","type":"function","name":"Prepare HTTPS requests by device type","func":"var newMsg1 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/light_bulbs\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\nvar newMsg2 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/binary_switches\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg3 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/locks\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg4 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/groups\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\nvar newMsg5 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/sensor_pods\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\nvar newMsg6 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/scenes\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg7 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/thermostats\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg8 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/eggtrays\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg9 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/piggy_banks\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg10 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/propane_tanks\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg11 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/cloud_clocks\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nreturn [newMsg1,newMsg2,newMsg3,newMsg4,newMsg5,newMsg6,newMsg7,newMsg8,newMsg9,newMsg10,newMsg11];\n","outputs":"11","valid":true,"x":1056,"y":99,"z":"254ec046.dab14","wires":[["5e71c517.a18e3c"],["5cb1c818.a34e38"],["42f9d343.bd062c"],["1b0ac7a.fe4f538"],["61c6a3eb.9e395c"],["6b78e626.948718"],["e445c929.1bba38"],["9a57a7d6.65a858"],["43acff5.fbc53"],["c6b2316.f394dd"],["c4bca3cb.3b436"]]},{"id":"5e71c517.a18e3c","type":"http request","name":"GetLightBulbs","method":"use","ret":"obj","url":"","x":1535,"y":40,"z":"254ec046.dab14","wires":[["a2884513.5d77b8"]]},{"id":"a2884513.5d77b8","type":"function","name":"SetGlobalLightBulbList","func":"//sample function to cache list of Wink Light bulbs and initialize their state\ncontext.global.WinkLightBulbs =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        context.global.WinkLightBulbs[msg.payload.data[i].name]={\n            \"id\": msg.payload.data[i].light_bulb_id,\n            \"brightness\": (msg.payload.data[i].last_reading.powered ? msg.payload.data[i].last_reading.brightness : 0),\n            \"powered\":msg.payload.data[i].last_reading.powered\n        };\n        \n    }\n\nreturn;","outputs":1,"valid":true,"x":1866,"y":43,"z":"254ec046.dab14","wires":[[]]},{"id":"206b73f9.df948c","type":"function","name":"SetGlobalBinarySwitches","func":"//sample function to cache list of Wink Binary Switches and initialize their state\ncontext.global.WinkSwitches =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        context.global.WinkSwitches[msg.payload.data[i].name]= {\n            \"id\":msg.payload.data[i].binary_switch_id,\n            \"powered\":msg.payload.data[i].last_reading.powered\n        };\n    }\n\nreturn;","outputs":1,"valid":true,"x":1874,"y":86,"z":"254ec046.dab14","wires":[[]]},{"id":"5cb1c818.a34e38","type":"http request","name":"GetBinarySwitches","method":"use","ret":"obj","url":"","x":1550,"y":82,"z":"254ec046.dab14","wires":[["206b73f9.df948c"]]},{"id":"42f9d343.bd062c","type":"http request","name":"GetLocks","method":"use","ret":"obj","url":"","x":1524,"y":125,"z":"254ec046.dab14","wires":[["f67ec75a.098138"]]},{"id":"f67ec75a.098138","type":"function","name":"SetGlobalLocks","func":"//sample function to cache list of Wink Locks and initialize their state\n//I am fetching only Locked state for this example\ncontext.global.WinkLocks =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        context.global.WinkLocks[msg.payload.data[i].name]= {\n            \"name\":msg.payload.data[i].name,\n            \"id\":msg.payload.data[i].lock_id,\n            \"locked\":msg.payload.data[i].last_reading.locked\n        }\n    }\n\nreturn;","outputs":1,"valid":true,"x":1843,"y":129,"z":"254ec046.dab14","wires":[[]]},{"id":"7090db16.8f6f24","type":"function","name":"SetGlobalGroups","func":"//sample function to cache list of Wink Groups\ncontext.global.WinkGroups =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].members.length >0)\n        {\n            context.global.WinkGroups[msg.payload.data[i].name]= msg.payload.data[i].group_id;\n        }\n    }\n\nreturn;","outputs":1,"valid":true,"x":1849,"y":174,"z":"254ec046.dab14","wires":[[]]},{"id":"1b0ac7a.fe4f538","type":"http request","name":"GetGroups","method":"use","ret":"obj","url":"","x":1533,"y":168,"z":"254ec046.dab14","wires":[["7090db16.8f6f24"]]},{"id":"f898d9a0.076728","type":"function","name":"SetGlobalSensors","func":"//sample function to cache list of Wink Motion Sensors and Trippers and initialize their state\ncontext.global.WinkMSensors =new Object();\ncontext.global.WinkTrippers =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].model_name==\"Motion Sensor\")\n        {\n            context.global.WinkMSensors[msg.payload.data[i].sensor_pod_id] = {\n                \"id\":msg.payload.data[i].sensor_pod_id,\n                \"name\":msg.payload.data[i].name,\n                \"motion\":msg.payload.data[i].last_reading.motion,\n                \"type\": msg.payload.data[i].model_name\n\n            };\n        }\n         if (msg.payload.data[i].model_name==\"Tripper\")\n         {\n            context.global.WinkTrippers[msg.payload.data[i].sensor_pod_id] = {\n                \"id\":msg.payload.data[i].sensor_pod_id,\n                \"name\":msg.payload.data[i].name,\n                \"opened\":msg.payload.data[i].last_reading.opened,\n                \"type\": msg.payload.data[i].model_name,\n\n            };\n        }\n    }\nreturn;","outputs":1,"valid":true,"x":1845,"y":216,"z":"254ec046.dab14","wires":[[]]},{"id":"61c6a3eb.9e395c","type":"http request","name":"GetSensors","method":"use","ret":"obj","url":"","x":1538,"y":212,"z":"254ec046.dab14","wires":[["f898d9a0.076728"]]},{"id":"6b78e626.948718","type":"http request","name":"GetShortcuts","method":"use","ret":"obj","url":"","x":1532,"y":257,"z":"254ec046.dab14","wires":[["1876220d.e789de"]]},{"id":"1876220d.e789de","type":"function","name":"SetGlobalShortcuts","func":"//sample function to cache list of Wink Shortcuts\ncontext.global.WinkScenes =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].members.length >0)\n        {\n            context.global.WinkScenes[msg.payload.data[i].name]= msg.payload.data[i].scene_id;\n        }\n    }\n\nreturn;","outputs":1,"valid":true,"x":1866,"y":256,"z":"254ec046.dab14","wires":[[]]},{"id":"e445c929.1bba38","type":"http request","name":"GetThermostats","method":"use","ret":"obj","url":"","x":1535,"y":306,"z":"254ec046.dab14","wires":[["fa60a506.059f58"]]},{"id":"fa60a506.059f58","type":"function","name":"SetGlobalThermostats","func":"//sample function to cache list of Wink Thermostats and initialize their state\n//Since I only have NEST termostat i tried to fetch only common items. Various thermostats\n//can have additional data available.\ncontext.global.WinkThermostats =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n            context.global.WinkThermostats[msg.payload.data[i].name]= {\n            \"id\": msg.payload.data[i].thermostat_id,\n            \"name\": msg.payload.data[i].name,\n            \"mode\": msg.payload.data[i].last_reading.mode,\n            \"away\": msg.payload.data[i].last_reading.user_away,\n            \"temperature\":msg.payload.data[i].last_reading.temperature,\n            \"units\":msg.payload.data[i].last_reading.units\n            }\n            \n    }\n\nreturn;","outputs":1,"valid":true,"x":1869,"y":305,"z":"254ec046.dab14","wires":[[]]},{"id":"140c80ef.ebf37f","type":"function","name":"DefineGlobalObjects","func":"//use this function to initialize global variables that can be used in any flow or function\n//and will keep their values while application is running\n\nif (typeof context.global.ignoreMotion === 'undefined')\n{\n    context.global.ignoreMotion=false;\n}\nif (typeof context.global.mediaPlaying==='undefined')\n{\n    context.global.mediaPlaying=false;\n}\nif (typeof context.global.Weather === 'undefined')\n{\n    context.global.Weather=new Object();\n}\nreturn;","outputs":1,"valid":true,"x":304,"y":149,"z":"254ec046.dab14","wires":[[]]},{"id":"9a57a7d6.65a858","type":"http request","name":"GetEggTray","method":"use","ret":"obj","url":"","x":1518,"y":348,"z":"254ec046.dab14","wires":[["2f2ebe08.d0d142"]]},{"id":"2f2ebe08.d0d142","type":"function","name":"SetGlobalEggTrays","func":"context.global.WinkEggTrays =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].eggtray_id.length >0)\n        {\n            context.global.WinkEggTrays[msg.payload.data[i].eggtray_id]= {\n                \"id\":msg.payload.data[i].eggtray_id,\n                \"inventory\":msg.payload.data[i].last_reading.inventory\n        };\n    }\n}\nreturn;","outputs":1,"valid":true,"x":1871.25,"y":352.5,"z":"254ec046.dab14","wires":[[]]},{"id":"43acff5.fbc53","type":"http request","name":"GetPiggyBank","method":"use","ret":"obj","url":"","x":1530.5,"y":395.4999990463257,"z":"254ec046.dab14","wires":[["b9e786af.461878"]]},{"id":"b9e786af.461878","type":"function","name":"SetGlobalPiggyBanks","func":"context.global.WinkPiggyBanks =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].piggy_bank_id.length >0)\n        {\n            context.global.WinkPiggyBanks[msg.payload.data[i].name]= {\n                \"id\":msg.payload.data[i].piggy_bank_id,\n                \"name\":msg.payload.data[i].name,\n                \"balance\":msg.payload.data[i].balance/100,\n                \"goal\":msg.payload.data[i].savings_goal/100\n        };\n    }\n}\nreturn;","outputs":1,"valid":true,"x":1880.5,"y":394.5,"z":"254ec046.dab14","wires":[[]]},{"id":"c6b2316.f394dd","type":"http request","name":"GetPropaneTanks","method":"use","ret":"obj","url":"","x":1530.666618347168,"y":441.6666784286499,"z":"254ec046.dab14","wires":[["cb1f1000.34e0f"]]},{"id":"cb1f1000.34e0f","type":"function","name":"SetGlobalPropaneTanks","func":"context.global.WinkPropaneTanks =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].propane_tank_id.length >0)\n        {\n            context.global.WinkPropaneTanks[msg.payload.data[i].name]= {\n                \"id\":msg.payload.data[i].propane_tank_id,\n                \"name\":msg.payload.data[i].name,\n                \"remaining\":msg.payload.data[i].last_reading.remaining,\n                \"connection\":msg.payload.data[i].last_reading.connection\n        };\n    }\n}\nreturn;","outputs":1,"valid":true,"x":1889.6666259765625,"y":439.66668701171875,"z":"254ec046.dab14","wires":[[]]},{"id":"c4bca3cb.3b436","type":"http request","name":"GetCloudClocks","method":"use","ret":"obj","url":"","x":1531.666618347168,"y":488.6666784286499,"z":"254ec046.dab14","wires":[["28a96749.d75698"]]},{"id":"28a96749.d75698","type":"function","name":"SetGlobalCloudClock","func":"context.global.WinkNimbus =new Object();\ncontext.global.WinkNimbus.Dials = new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].cloud_clock_id.length >0)\n        {\n            context.global.WinkNimbus[msg.payload.data[i].cloud_clock_id]= {\n                \"id\":msg.payload.data[i].cloud_clock_id,\n                \"name\":msg.payload.data[i].name,\n                \"mac_address\":msg.payload.data[i].mac_address,\n                \n        };\n        for (j=0; j<msg.payload.data[i].dials.length; j++)\n        {\n            context.global.WinkNimbus.Dials[msg.payload.data[i].dials[j].dial_id]={\n                \"id\":msg.payload.data[i].dials[j].dial_id,\n                \"name\":msg.payload.data[i].dials[j].name,\n                \"label\":msg.payload.data[i].dials[j].label,\n                \"dial_index\":msg.payload.data[i].dials[j].dial_index\n            };\n        }\n    }\n}\nreturn;","outputs":1,"valid":true,"x":1875.6666259765625,"y":484.66668701171875,"z":"254ec046.dab14","wires":[[]]},{"id":"e4bec956.1b4138","type":"http in","name":"","url":"/red/getGlobalDataJSon","method":"get","x":209,"y":204,"z":"254ec046.dab14","wires":[["48d32e89.b72cd"]]},{"id":"48d32e89.b72cd","type":"function","name":"Throw Wink Data","func":"//Sample function that generate a JSON response for a web call with all Wink global\n//variables and cached states. Can be used as an input data source for node freeboard\n//or any other purpose\nmsg.payload.Lights=context.global.WinkLightBulbs;\nmsg.payload.BinarySwitches=context.global.WinkSwitches;\nmsg.payload.Locks=context.global.WinkLocks;\nmsg.payload.MotionSensors=context.global.WinkMSensors;\nmsg.payload.Trippers=context.global.WinkTrippers;\nmsg.payload.Groups=context.global.WinkGroups;\nmsg.payload.Scenes=context.global.WinkScenes;\nmsg.payload.Thermostats=context.global.WinkThermostats;\nmsg.payload.Eggtrays=context.global.WinkEggTrays;\nmsg.payload.Piggybanks=context.global.WinkPiggyBanks;\nmsg.payload.PropaneTanks=context.global.WinkPropaneTanks;\nmsg.payload.Weather=context.global.Weather;\nreturn msg;","outputs":1,"valid":true,"x":532,"y":162,"z":"254ec046.dab14","wires":[["3b9897c4.c46768"]]},{"id":"3b9897c4.c46768","type":"http response","name":"","x":465,"y":223,"z":"254ec046.dab14","wires":[]},{"id":"3f5999a4.c0a666","type":"http in","name":"","url":"/red/getGlobalData","method":"get","x":649,"y":220,"z":"254ec046.dab14","wires":[["9ea399e0.615c68"]]},{"id":"9ea399e0.615c68","type":"function","name":"Throw Wink Data","func":"WinkLightBulbsStatInd =new Array();\nWinkBinSwitchesInd = new Array();\nvar i=0;\n for (var Name in context.global.WinkLightBulbs)\n    {\n        \n        LightId=context.global.WinkLightBulbs[Name].id\n        WinkLightBulbsStatInd[i]={\n            \"name\":Name,\n            \"id\": context.global.WinkLightBulbs[Name].id,\n            \"brightness\": context.global.WinkLightBulbs[Name].brightness*100,\n            \"powered\":(context.global.WinkLightBulbs[Name].powered ? \"On\":\"Off\")\n        }\n    i++;\n    }\ni=0;\nfor (var Name in context.global.WinkSwitches)\n{\n    LightId=context.global.WinkSwitches[Name].id;\n    WinkBinSwitchesInd[i]={\n        \"name\":Name,\n        \"id\":context.global.WinkSwitches[Name].id,\n        \"powered\":(context.global.WinkSwitches[Name].powered ? \"checked\":\"\")\n    }\n    i++;\n}\n\nmsg.payload.lights=WinkLightBulbsStatInd;\nmsg.payload.switches=WinkBinSwitchesInd;\nreturn msg;","outputs":1,"valid":true,"x":864,"y":221,"z":"254ec046.dab14","wires":[["fec6ead0.013918"]]},{"id":"cd77738b.32889","type":"http response","name":"","x":1164,"y":215,"z":"254ec046.dab14","wires":[]},{"id":"fec6ead0.013918","type":"template","name":"","field":"payload","format":"handlebars","template":"<html>\n<b>Dimmable Lights</b>\n<table border=1>\n<tr>\n    <th>Name</th>\n    <th>Status</th>\n    <th>Brightness</th>\n    <th>Id</th>\n</tr>\n{{#payload.lights}}\n<tr>\n    <td>{{name}}</td>\n    <td>{{powered}}</td>\n    <td>{{brightness}}</td>\n    <td>{{id}}</td>\n</tr>\n{{/payload.lights}}\n</table>\n<br>\n<b>Switches</b>\n<table border=1>\n<tr>\n    <th>Name</th>\n    <th>Status</th>\n    <th>Id</th>\n</tr>\n{{#payload.switches}}\n<tr>\n    <td>{{name}}</td>\n    <td>{{powered}}</td>\n    <td>{{id}}</td>\n</tr>\n{{/payload.switches}}\n</table>\n</html>","x":1010,"y":217,"z":"254ec046.dab14","wires":[["cd77738b.32889"]]},{"id":"2b92a58b.d46d5a","type":"http in","name":"","url":"/red/subscribe/Lights","method":"get","x":151,"y":321,"z":"254ec046.dab14","wires":[["c96845da.3697b8"]]},{"id":"c96845da.3697b8","type":"function","name":"Wink Subscription resonse","func":"if (msg.payload[\"hub.mode\"]==\"subscribe\")\n{\n    msg.res.send(200,msg.payload[\"hub.challenge\"]);\n}\nelse\n{\n    msg.res.send(400,\"Bad Request darling\");\n}\nreturn msg;","outputs":1,"valid":true,"x":450,"y":351,"z":"254ec046.dab14","wires":[[]]},{"id":"6aca3cc.f9535c4","type":"http in","name":"","url":"/red/subscribe/Lights","method":"post","x":153,"y":391,"z":"254ec046.dab14","wires":[["1d511613.e2aeea","dfe3527d.201cb"]]},{"id":"1d511613.e2aeea","type":"debug","name":"","active":false,"console":"false","complete":"payload","x":454,"y":417,"z":"254ec046.dab14","wires":[]},{"id":"c0a41a31.3f5be8","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"82800","crontab":"","once":true,"x":138,"y":638,"z":"254ec046.dab14","wires":[["a6885a8d.5977a8"]]},{"id":"a6885a8d.5977a8","type":"delay","name":"","pauseType":"delay","timeout":"30","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":297,"y":558,"z":"254ec046.dab14","wires":[["f36f829b.0c908"]]},{"id":"f36f829b.0c908","type":"function","name":"Prepare Wink LightBulbs subscription request","func":"var baseUrl = \"https://winkapi.quirky.com/light_bulbs\";\n//var sensorsList=[\"Bar sensor\",\"Basement Sensor\"];\nvar callbackUrl=context.global.BlueMixUrlBase+\"/red/subscribe/Lights\";\nvar podId=\"N/A\";\n\n   for (var Name in context.global.WinkLightBulbs)\n    {\n        \n            LightId=context.global.WinkLightBulbs[Name].id;\n            node.warn(Name+\" \"+context.global.WinkLightBulbs[Name].id);\n    var newMsg ={\n        \"url\":baseUrl+\"/\"+LightId+\"/subscriptions\",\n        \"method\": \"POST\",\n        headers: {\n            \"Authorization\":\"Bearer \"+context.global.WinkToken,\n            \"Content-Type\":\"application/json\"\n        },\n        payload: {\n            \"callback\": callbackUrl\n        }\n};\nnode.send(newMsg);\n}\nreturn;","outputs":1,"valid":true,"x":459,"y":639,"z":"254ec046.dab14","wires":[["c02c5b21.3fd3a8","2182f4a7.de7d0c"]]},{"id":"2182f4a7.de7d0c","type":"http request","name":"","method":"use","ret":"obj","url":"","x":828,"y":499,"z":"254ec046.dab14","wires":[["34d5922b.cb2a6e","fabeada5.05415"]]},{"id":"34d5922b.cb2a6e","type":"function","name":"CheckResposeCode","func":"if (typeof context.global.WinkSubscriptions === 'undefined')\n{\n    context.global.WinkSubscriptions = new Object();\n}\nif (msg.statusCode==202)\n{\n    node.warn(\"Subscription ID: \"+msg.payload.data.subscription_id);\n    context.global.WinkSubscriptions[msg.payload.data.subscription_id]={\n        \"subscription_id\": msg.payload.data.subscription_id,\n        \"url_base\":msg.payload.data.topic\n    }\n}\nelse\n{\n    node.warn(\"Subscription issue. Status: \"+msg.statusCode);\n}\nreturn;","outputs":1,"valid":true,"x":1176,"y":581,"z":"254ec046.dab14","wires":[[]]},{"id":"fabeada5.05415","type":"debug","name":"","active":false,"console":"false","complete":"false","x":1148,"y":639,"z":"254ec046.dab14","wires":[]},{"id":"c02c5b21.3fd3a8","type":"debug","name":"","active":false,"console":"true","complete":"true","x":816,"y":548,"z":"254ec046.dab14","wires":[]},{"id":"dfe3527d.201cb","type":"subflow:35b61f5c.ca49e","x":476,"y":482,"z":"254ec046.dab14","wires":[]},{"id":"7a6858ad.8597a8","type":"http in","name":"","url":"/red/subscribe/Switches","method":"get","x":788,"y":345,"z":"254ec046.dab14","wires":[["4648dd7d.b9b724"]]},{"id":"4648dd7d.b9b724","type":"function","name":"Wink Subscription resonse","func":"if (msg.payload[\"hub.mode\"]==\"subscribe\")\n{\n    msg.res.send(200,msg.payload[\"hub.challenge\"]);\n}\nelse\n{\n    msg.res.send(400,\"Bad Request darling\");\n}\nreturn msg;","outputs":1,"valid":true,"x":1087,"y":375,"z":"254ec046.dab14","wires":[[]]},{"id":"49d5a4a.fb62a5c","type":"http in","name":"","url":"/red/subscribe/Switches","method":"post","x":790,"y":415,"z":"254ec046.dab14","wires":[["fccc254b.0333d8","68ecaeb2.97135"]]},{"id":"fccc254b.0333d8","type":"debug","name":"","active":false,"console":"false","complete":"payload","x":1091,"y":441,"z":"254ec046.dab14","wires":[]},{"id":"68ecaeb2.97135","type":"subflow:35b61f5c.ca49e","x":1113,"y":506,"z":"254ec046.dab14","wires":[]},{"id":"e2f4dc0b.1d0b2","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"82800","crontab":"","once":true,"x":141,"y":695,"z":"254ec046.dab14","wires":[["59b5d30e.a64a2c"]]},{"id":"59b5d30e.a64a2c","type":"delay","name":"","pauseType":"delay","timeout":"30","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":252,"y":783,"z":"254ec046.dab14","wires":[["4836ecde.b7c914"]]},{"id":"4836ecde.b7c914","type":"function","name":"Prepare Wink Bin Switches subscription request","func":"var baseUrl = \"https://winkapi.quirky.com/binary_switches\";\n//var sensorsList=[\"Bar sensor\",\"Basement Sensor\"];\nvar callbackUrl=context.global.BlueMixUrlBase+\"/red/subscribe/Switches\";\nvar podId=\"N/A\";\n\n   for (var Name in context.global.WinkSwitches)\n    {\n        \n            LightId=context.global.WinkSwitches[Name].id;\n            node.warn(Name+\" \"+context.global.WinkSwitches[Name].id);\n    var newMsg ={\n        \"url\":baseUrl+\"/\"+LightId+\"/subscriptions\",\n        \"method\": \"POST\",\n        headers: {\n            \"Authorization\":\"Bearer \"+context.global.WinkToken,\n            \"Content-Type\":\"application/json\"\n        },\n        payload: {\n            \"callback\": callbackUrl\n        }\n};\nnode.send(newMsg);\n}\nreturn;","outputs":1,"valid":true,"x":466,"y":684,"z":"254ec046.dab14","wires":[["1709fbfc.e8f604","e3e27e1c.1c1d8"]]},{"id":"e3e27e1c.1c1d8","type":"http request","name":"","method":"use","ret":"obj","url":"","x":830,"y":657,"z":"254ec046.dab14","wires":[["caf9ff1a.3506","8baf88cd.745078"]]},{"id":"caf9ff1a.3506","type":"function","name":"CheckResposeCode","func":"if (typeof context.global.WinkSubscriptions === 'undefined')\n{\n    context.global.WinkSubscriptions = new Object();\n}\nif (msg.statusCode==202)\n{\n    node.warn(\"Subscription ID: \"+msg.payload.data.subscription_id);\n    context.global.WinkSubscriptions[msg.payload.data.subscription_id]={\n        \"subscription_id\": msg.payload.data.subscription_id,\n        \"url_base\":msg.payload.data.topic\n    }\n}\nelse\n{\n    node.warn(\"Subscription issue. Status: \"+msg.statusCode);\n}\nreturn;","outputs":1,"valid":true,"x":1107,"y":695,"z":"254ec046.dab14","wires":[[]]},{"id":"8baf88cd.745078","type":"debug","name":"","active":false,"console":"false","complete":"false","x":1086,"y":733,"z":"254ec046.dab14","wires":[]},{"id":"1709fbfc.e8f604","type":"debug","name":"","active":false,"console":"true","complete":"true","x":815,"y":706,"z":"254ec046.dab14","wires":[]},{"id":"798c2662.8673d8","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"82800","crontab":"","once":true,"x":93,"y":1175,"z":"254ec046.dab14","wires":[["a9f455bc.560ba8"]]},{"id":"b24146d5.4dbeb8","type":"function","name":"Prepare Wink sensor subscription request","func":"var baseUrl = \"https://winkapi.quirky.com/sensor_pods\";\nvar callbackUrl=context.global.BlueMixUrlBase+\"/red/subscribe/sensors\";\n   for (var Id in context.global.WinkMSensors)\n    {\n    \n    node.warn(context.global.WinkMSensors[Id].name+\" \"+Id);\n    var newMsg ={\n        \"url\":baseUrl+\"/\"+Id+\"/subscriptions\",\n        \"method\": \"POST\",\n        headers: {\n            \"Authorization\":\"Bearer \"+context.global.WinkToken,\n            \"Content-Type\":\"application/json\"\n        },\n        payload: {\n            \"callback\": callbackUrl\n        }\n    };\n    node.send(newMsg);\n}\n   for (var Id in context.global.WinkTrippers)\n    {\n \n    node.warn(context.global.WinkTrippers[Id].name+\" \"+Id);\n    var newMsg ={\n        \"url\":baseUrl+\"/\"+Id+\"/subscriptions\",\n        \"method\": \"POST\",\n        headers: {\n            \"Authorization\":\"Bearer \"+context.global.WinkToken,\n            \"Content-Type\":\"application/json\"\n        },\n        payload: {\n            \"callback\": callbackUrl\n        }\n    };\n    node.send(newMsg);\n}\nreturn;","outputs":1,"valid":true,"x":504,"y":1112,"z":"254ec046.dab14","wires":[["b84e7b6e.47b188","7f5ef304.80a10c"]]},{"id":"7f5ef304.80a10c","type":"debug","name":"","active":false,"console":"false","complete":"payload","x":919,"y":1058,"z":"254ec046.dab14","wires":[]},{"id":"9f6e1498.6091e8","type":"debug","name":"","active":false,"console":"false","complete":"false","x":1040,"y":1198,"z":"254ec046.dab14","wires":[]},{"id":"b84e7b6e.47b188","type":"http request","name":"","method":"use","ret":"obj","url":"","x":826,"y":1174,"z":"254ec046.dab14","wires":[["b1608bbc.4e9f78","9f6e1498.6091e8"]]},{"id":"b1608bbc.4e9f78","type":"function","name":"CheckResposeCode","func":"if (typeof context.global.WinkSubscriptions === 'undefined')\n{\n    context.global.WinkSubscriptions = new Object();\n}\nif (msg.statusCode==202)\n{\n    node.warn(\"Subscription ID: \"+msg.payload.data.subscription_id);\n    context.global.WinkSubscriptions[msg.payload.data.subscription_id]={\n        \"subscription_id\": msg.payload.data.subscription_id,\n        \"url_base\":msg.payload.data.topic\n    }\n}\nelse\n{\n    node.warn(\"Subscription issue. Status: \"+msg.statusCode);\n}\nreturn;","outputs":1,"valid":true,"x":1051,"y":1147,"z":"254ec046.dab14","wires":[[]]},{"id":"a9f455bc.560ba8","type":"delay","name":"","pauseType":"delay","timeout":"30","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":228,"y":1110,"z":"254ec046.dab14","wires":[["b24146d5.4dbeb8"]]},{"id":"efa438ef.105bc8","type":"http in","name":"","url":"/red/subscribe/sensors","method":"get","x":302,"y":925,"z":"254ec046.dab14","wires":[["ff39fa64.00c608"]]},{"id":"ff39fa64.00c608","type":"function","name":"Wink Subscription resonse","func":"if (msg.payload[\"hub.mode\"]==\"subscribe\")\n{\n    msg.res.send(200,msg.payload[\"hub.challenge\"]);\n}\nelse\n{\n    msg.res.send(400,\"Bad Request darling\");\n}\nreturn msg;","outputs":1,"valid":true,"x":653,"y":924,"z":"254ec046.dab14","wires":[[]]},{"id":"826b1321.7d94f","type":"http in","name":"","url":"/red/subscribe/sensors","method":"post","x":307,"y":990,"z":"254ec046.dab14","wires":[["5aef59d2.a510a8","94ea81c7.6b158"]]},{"id":"5aef59d2.a510a8","type":"subflow:35be52c7.ca41ae","x":589,"y":1050,"z":"254ec046.dab14","wires":[]},{"id":"94ea81c7.6b158","type":"debug","name":"","active":false,"console":"false","complete":"false","x":590,"y":994,"z":"254ec046.dab14","wires":[]},{"id":"11905d4a.ee6fa3","type":"comment","name":"Section for lights status  subscription---------------------------------------------------------------------------------------------------------------------------------","info":"","x":509,"y":277,"z":"254ec046.dab14","wires":[]},{"id":"14d82c8f.eb27d3","type":"comment","name":"Initialize section-----------------------------------------------------------------------------------------------------------","info":"","x":362,"y":35,"z":"254ec046.dab14","wires":[]},{"id":"9a5eb47.f65a148","type":"comment","name":"Sensors subscription--------------------------------------------------------------------------------------------------------------------------------","info":"","x":437,"y":849,"z":"254ec046.dab14","wires":[]},{"id":"48a28941.b75d78","type":"comment","name":"locks subscription--------------------------------------------------------------------------------------------------------------------------------","info":"","x":416,"y":1260,"z":"254ec046.dab14","wires":[]},{"id":"ce14cd38.31eb3","type":"http in","name":"","url":"/red/subscribe/Thermostats","method":"get","x":133.5,"y":1334,"z":"254ec046.dab14","wires":[["193ecab8.e6c135"]]},{"id":"193ecab8.e6c135","type":"function","name":"Wink Subscription resonse","func":"if (msg.payload[\"hub.mode\"]==\"subscribe\")\n{\n    msg.res.send(200,msg.payload[\"hub.challenge\"]);\n}\nelse\n{\n    msg.res.send(400,\"Bad Request darling\");\n}\nreturn msg;","outputs":1,"valid":true,"x":498.5,"y":1333,"z":"254ec046.dab14","wires":[[]]},{"id":"556193b.faa9e6c","type":"http in","name":"","url":"/red/subscribe/Thermostats","method":"post","x":135.5,"y":1404,"z":"254ec046.dab14","wires":[["d1dbcdc7.2e243","176df563.e8920b"]]},{"id":"d5e6fb8e.2a1908","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"82800","crontab":"","once":true,"x":84.5,"y":1638,"z":"254ec046.dab14","wires":[["6c20b7db.93df48"]]},{"id":"ce4b1b79.31b4e8","type":"function","name":"Prepare Wink thermostat subscription request","func":"\nvar baseUrl = \"https://winkapi.quirky.com/thermostats\";\nvar ThermostatId=\"13084\";\nvar callbackUrl=context.global.BlueMixUrlBase+\"/red/subscribe/Thermostats\";\nfor (var Name in context.global.WinkThermostats)\n    {\n    \n    node.warn(context.global.WinkThermostats[Name].name+\" \"+context.global.WinkThermostats[Name].id);\n    var newMsg ={\n        \"url\":baseUrl+\"/\"+context.global.WinkThermostats[Name].id+\"/subscriptions\",\n        \"method\": \"POST\",\n        headers: {\n            \"Authorization\":\"Bearer \"+context.global.WinkToken,\n            \"Content-Type\":\"application/json\"\n        },\n        payload: {\n            \"callback\": callbackUrl\n        }\n};\nnode.send(newMsg);\n}\nreturn;","outputs":1,"valid":true,"x":411.5,"y":1641,"z":"254ec046.dab14","wires":[["6112e288.9eed1c","71a89892.8e5768"]]},{"id":"6112e288.9eed1c","type":"http request","name":"","method":"use","ret":"obj","url":"","x":700.5,"y":1570,"z":"254ec046.dab14","wires":[["da7d7947.258288","2a6a2de8.d595d2"]]},{"id":"da7d7947.258288","type":"function","name":"CheckResposeCode","func":"if (typeof context.global.WinkSubscriptions === 'undefined')\n{\n    context.global.WinkSubscriptions = new Object();\n}\nif (msg.statusCode==202)\n{\n    node.warn(\"Subscription ID: \"+msg.payload.data.subscription_id);\n    context.global.WinkSubscriptions[msg.payload.data.subscription_id]={\n        \"subscription_id\": msg.payload.data.subscription_id,\n        \"url_base\":msg.payload.data.topic\n    }\n}\nelse\n{\n    node.warn(\"Subscription issue. Status: \"+msg.statusCode);\n}\nreturn;","outputs":1,"valid":true,"x":929.5,"y":1645,"z":"254ec046.dab14","wires":[[]]},{"id":"2a6a2de8.d595d2","type":"debug","name":"","active":false,"console":"false","complete":"false","x":745.5,"y":1766,"z":"254ec046.dab14","wires":[]},{"id":"71a89892.8e5768","type":"debug","name":"","active":false,"console":"false","complete":"payload","x":355.5,"y":1764,"z":"254ec046.dab14","wires":[]},{"id":"d1dbcdc7.2e243","type":"debug","name":"","active":false,"console":"false","complete":"payload.last_reading","x":493.5,"y":1379,"z":"254ec046.dab14","wires":[]},{"id":"6c20b7db.93df48","type":"delay","name":"","pauseType":"delay","timeout":"30","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":243.5,"y":1558,"z":"254ec046.dab14","wires":[["ce4b1b79.31b4e8"]]},{"id":"423bfa3c.bdc404","type":"http in","name":"","url":"/red/subscribe/Locks","method":"get","x":847.5,"y":1405,"z":"254ec046.dab14","wires":[["b519ca52.4ae638"]]},{"id":"b519ca52.4ae638","type":"function","name":"Wink Subscription resonse","func":"if (msg.payload[\"hub.mode\"]==\"subscribe\")\n{\n    msg.res.send(200,msg.payload[\"hub.challenge\"]);\n}\nelse\n{\n    msg.res.send(400,\"Bad Request darling\");\n}\nreturn msg;","outputs":1,"valid":true,"x":1133.5,"y":1408,"z":"254ec046.dab14","wires":[[]]},{"id":"b8f6a8ca.470958","type":"http in","name":"","url":"/red/subscribe/Locks","method":"post","x":849.5,"y":1475,"z":"254ec046.dab14","wires":[["ef864cfb.1079b","502eb73a.afd148"]]},{"id":"ef864cfb.1079b","type":"debug","name":"","active":false,"console":"false","complete":"false","x":1147.5,"y":1481,"z":"254ec046.dab14","wires":[]},{"id":"1499cea7.eb6631","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"82800","crontab":"","once":true,"x":204.5,"y":1927,"z":"254ec046.dab14","wires":[["38ed529c.c712ae"]]},{"id":"e53ec5c4.1ac138","type":"function","name":"Prepare Wink locks subscription request","func":"\nvar baseUrl = \"https://winkapi.quirky.com/locks\";\nvar callbackUrl=context.global.BlueMixUrlBase+\"/red/subscribe/Locks\";\n  for (var Name in context.global.WinkLocks)\n    {\n        node.warn(Name +\" \"+context.global.WinkLocks[Name].id);\n    var newMsg ={\n        \"url\":baseUrl+\"/\"+context.global.WinkLocks[Name].id+\"/subscriptions\",\n        \"method\": \"POST\",\n        headers: {\n            \"Authorization\":\"Bearer \"+context.global.WinkToken,\n            \"Content-Type\":\"application/json\"\n        },\n        payload: {\n            \"callback\": callbackUrl\n        }\n};\nnode.send(newMsg);\n}\nreturn;","outputs":1,"valid":true,"x":531.5,"y":1930,"z":"254ec046.dab14","wires":[["7a4ed1f6.85b13","2cde25a8.d321da"]]},{"id":"7a4ed1f6.85b13","type":"http request","name":"","method":"use","ret":"obj","url":"","x":820.5,"y":1859,"z":"254ec046.dab14","wires":[["2095ed75.df6a12","dfacab6d.205358"]]},{"id":"2095ed75.df6a12","type":"function","name":"CheckResposeCode","func":"if (typeof context.global.WinkSubscriptions === 'undefined')\n{\n    context.global.WinkSubscriptions = new Object();\n}\nif (msg.statusCode==202)\n{\n    node.warn(\"Subscription ID: \"+msg.payload.data.subscription_id);\n    context.global.WinkSubscriptions[msg.payload.data.subscription_id]={\n        \"subscription_id\": msg.payload.data.subscription_id,\n        \"url_base\":msg.payload.data.topic\n    }\n}\nelse\n{\n    node.warn(\"Subscription issue. Status: \"+msg.statusCode);\n}\nreturn;","outputs":1,"valid":true,"x":1049.5,"y":1934,"z":"254ec046.dab14","wires":[[]]},{"id":"dfacab6d.205358","type":"debug","name":"","active":false,"console":"false","complete":"false","x":865.5,"y":2055,"z":"254ec046.dab14","wires":[]},{"id":"2cde25a8.d321da","type":"debug","name":"","active":false,"console":"false","complete":"payload","x":475.5,"y":2053,"z":"254ec046.dab14","wires":[]},{"id":"38ed529c.c712ae","type":"delay","name":"","pauseType":"delay","timeout":"30","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":363.5,"y":1847,"z":"254ec046.dab14","wires":[["e53ec5c4.1ac138"]]},{"id":"502eb73a.afd148","type":"subflow:43091984.bcf6e8","x":1155.5,"y":1548,"z":"254ec046.dab14","wires":[]},{"id":"176df563.e8920b","type":"subflow:84436061.7bbca","name":"","x":462.5,"y":1436,"z":"254ec046.dab14","wires":[]},{"id":"f6519776.09ae68","type":"comment","name":"Weather-------------------------------------------------------------------------------------------------------------------------------","info":"","x":427,"y":2184,"z":"254ec046.dab14","wires":[]},{"id":"643a706.f9bc59","type":"debug","name":"","active":false,"console":"false","complete":"false","x":973,"y":2276,"z":"254ec046.dab14","wires":[]},{"id":"468e36e6.b971c8","type":"http request","name":"Get Weather","method":"use","ret":"obj","url":"","x":462,"y":2281,"z":"254ec046.dab14","wires":[["669f4b36.9960b4"]]},{"id":"26bd428e.d942be","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"420","crontab":"","once":true,"x":172,"y":2298,"z":"254ec046.dab14","wires":[["9cfa5eb1.6305a"]]},{"id":"669f4b36.9960b4","type":"function","name":"Get current weather","func":"var currDate= new Date();\nvar currHours=currDate.getHours();\nvar currMins=currDate.getMinutes();\nif(msg.payload.currently)\n{\ncontext.global.Weather.Offset=msg.payload.offset;\ncontext.global.Weather.CloudCover=Math.round(msg.payload.currently.cloudCover*100);\ncontext.global.Weather.WeatherSummary=msg.payload.currently.summary;\nvar date = new Date(msg.payload.daily.data[0].sunsetTime*1000);\nvar hours = date.getHours();\nvar minutes =date.getMinutes();\ncontext.global.Weather.SunsetHour=hours+context.global.Weather.Offset;\nif (context.global.Weather.SunsetHour<0)\n {\n     context.global.Weather.SunsetHour=24+context.global.Weather.SunsetHour;\n }\ncontext.global.Weather.SunsetMin=minutes;\nvar date = new Date(msg.payload.daily.data[0].sunriseTime*1000);\nvar hours = date.getHours();\nvar minutes =date.getMinutes();\ncontext.global.Weather.SunriseHour=hours+context.global.Weather.Offset;\ncontext.global.Weather.SunriseMin=minutes;\ncontext.global.Weather.outsideTemp=msg.payload.currently.temperature;\ncontext.global.Weather.PrecipationPbb=msg.payload.currently.precipProbability;\ncontext.global.Weather.HumidityOutside=msg.payload.currently.humidity;\ncurrHours=currHours+context.global.Weather.Offset;\nif (currHours<0)\n {\n     currHours=24+currHours;\n }\nif ((currHours > context.global.SunriseHour && currHours < context.global.SunsetHour) || (currHours==context.global.SunsetHour && currMins <context.global.SunsetMin))\n{\n    var timeFrame=\"DAY\";\n}\nelse {\n    var timeFrame=\"NIGHT\";\n}\ncontext.global.Weather.timeframe=timeFrame;\n}\nnewMsg = {\n    payload: {\n        \"offset\":context.global.Weather.Offset,\n        \"time\": currHours+\":\"+currMins,\n        \"CloudCover\": context.global.Weather.CloudCover,\n        \"WeatherSummary\": context.global.Weather.WeatherSummary,\n        \"sunsetTime\": context.global.Weather.SunsetHour+\":\"+context.global.Weather.SunsetMin,\n        \"sunriseTime\": context.global.Weather.SunriseHour+\":\"+context.global.Weather.SunriseMin,\n        \"outsideTemp\": context.global.Weather.outsideTemp,\n        \"precipation\": context.global.Weather.PrecipationPbb+\" %\",\n        \"timeframe\": context.global.Weather.timeframe\n    }\n};\nreturn newMsg;","outputs":1,"valid":true,"x":697,"y":2290,"z":"254ec046.dab14","wires":[["643a706.f9bc59"]]},{"id":"9cfa5eb1.6305a","type":"function","name":"","func":"var newMsg ={\n        \"url\":\"https://api.forecast.io/forecast/\"+context.global.forecastIoApiKey+\"/\"+context.global.HomeLocation.lon+\",\"+context.global.HomeLocation.lat,\n        \"method\": \"GET\"\n}\nreturn newMsg;","outputs":1,"valid":true,"x":322,"y":2365,"z":"254ec046.dab14","wires":[["468e36e6.b971c8","eba79106.14587"]]},{"id":"eba79106.14587","type":"debug","name":"","active":false,"console":"false","complete":"true","x":509,"y":2414,"z":"254ec046.dab14","wires":[]}]