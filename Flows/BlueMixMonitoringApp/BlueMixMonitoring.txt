[{"id":"2310c271.dcef3e","type":"subflow","name":"Update t-stat status","in":[{"x":70,"y":70,"wires":[{"id":"5bc331fc.a43cd"}]}],"out":[]},{"id":"5bc331fc.a43cd","type":"function","name":"Update T-Stat","func":"context.global.WinkThermostats[msg.payload.name].mode=msg.payload.last_reading.mode;\ncontext.global.WinkThermostats[msg.payload.name].away=msg.payload.last_reading.users_away;\ncontext.global.WinkThermostats[msg.payload.name].temperature=msg.payload.last_reading.temperature;\ncontext.global.WinkThermostats[msg.payload.name].fan_active=msg.payload.last_reading.fan_timer_active;\nnode.warn(msg.payload.name+\" temp:\"+context.global.WinkThermostats[msg.payload.name].temperature);\nreturn msg;","outputs":1,"valid":true,"x":248,"y":168,"z":"2310c271.dcef3e","wires":[[]]},{"id":"36e3ed82.c91c12","type":"subflow","name":"Update Lock Status","in":[{"x":70,"y":70,"wires":[{"id":"c38dcac5.3c7238"}]}],"out":[]},{"id":"c38dcac5.3c7238","type":"function","name":"Update Lock State","func":"context.global.WinkLocks[msg.payload.name].locked=msg.payload.last_reading.locked;\n node.warn(msg.payload.name+\" locked: \"+context.global.WinkLocks[msg.payload.name].locked);\nreturn msg;","outputs":1,"valid":true,"x":231,"y":155,"z":"36e3ed82.c91c12","wires":[[]]},{"id":"82e7b4fe.7d1848","type":"subflow","name":"Update Sensor Status","in":[{"x":97,"y":71,"wires":[{"id":"add416ff.522be8"}]}],"out":[]},{"id":"add416ff.522be8","type":"function","name":"Cache sensor status","func":"if (msg.payload.model_name==\"Motion Sensor\")\n{\n    context.global.WinkMSensors[msg.payload.sensor_pod_id].motion=msg.payload.last_reading.motion;\n    node.warn(context.global.WinkMSensors[msg.payload.sensor_pod_id].name+\":motion \"+ msg.payload.last_reading.motion);\n}\nif (msg.payload.model_name==\"Tripper\")\n{\n    context.global.WinkTrippers[msg.payload.sensor_pod_id].opened=msg.payload.last_reading.opened;\n    node.warn(context.global.WinkTrippers[msg.payload.sensor_pod_id].name+\":opened \"+msg.payload.last_reading.opened );\n}\nmsg._id=msg.payload.sensor_pod_id;\nreturn msg;","outputs":1,"valid":true,"x":248,"y":93,"z":"82e7b4fe.7d1848","wires":[[]]},{"id":"a51d6f67.5ae29","type":"subflow","name":"Update Light Status","in":[{"x":70,"y":70,"wires":[{"id":"dee450f9.211bb"}]}],"out":[]},{"id":"dee450f9.211bb","type":"function","name":"UpdateLightStatus","func":"if (msg.payload.light_bulb_id && msg.payload.desired_state.powered==msg.payload.last_reading.powered && msg.payload.desired_state.brightness==msg.payload.last_reading.brightness)\n{\n    context.global.WinkLightBulbs[msg.payload.name].brightness= (msg.payload.last_reading.powered ? msg.payload.last_reading.brightness : 0);\n    context.global.WinkLightBulbs[msg.payload.name].powered=msg.payload.last_reading.powered;\n    msg._id=msg.payload.light_bulb_id;\n    node.warn(msg.payload.name+\" brightness \"+ context.global.WinkLightBulbs[msg.payload.name].brightness);\n}\nif (msg.payload.binary_switch_id && msg.payload.desired_state.powered==msg.payload.last_reading.powered)\n{\n    context.global.WinkSwitches[msg.payload.name].powered=msg.payload.last_reading.powered;\n    msg._id=msg.payload.light_bulb_id;\n    node.warn(msg.payload.name+\" powered \" +context.global.WinkSwitches[msg.payload.name].powered );\n}\nreturn msg;\n","outputs":1,"valid":true,"x":223,"y":151,"z":"a51d6f67.5ae29","wires":[[]]},{"id":"4dca531a.b235ac","type":"http request","name":"","method":"use","ret":"obj","url":"","x":517,"y":89.5,"z":"254ec046.dab14","wires":[["a71b4fe5.58e4b"]]},{"id":"e61ee357.19e12","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"86400","crontab":"","once":true,"x":110,"y":88.5,"z":"254ec046.dab14","wires":[["2a4a5d8f.d5b5a2","13651326.ec9aed"]]},{"id":"2a4a5d8f.d5b5a2","type":"function","name":"Get OAuth Tocken","func":"var uid=context.global.WinkUser.uid;\nvar pwd=context.global.WinkUser.pwd;\nvar newMsg ={\n    \"url\":\"https://winkapi.quirky.com/oauth2/token\",\n    \"method\": \"POST\",\n    headers: {\n        \"Content-Type\":\"application/json\"\n    },\n    payload: {\n        \"client_id\": \"7243d8212e040d75dada47ce68a04c24\",\n        \"client_secret\": \"7d597e496afd6196db8d8738829f5a09\",\n        \"username\": uid,\n        \"password\": pwd,\n        \"grant_type\": \"password\"\n    }\n}\nreturn newMsg;","outputs":1,"valid":true,"x":304,"y":88.5,"z":"254ec046.dab14","wires":[["4dca531a.b235ac"]]},{"id":"a71b4fe5.58e4b","type":"function","name":"DefineGlobalTocken","func":"// sample function that stores wink token in a global variable so other api calls\n//can use that\ncontext.global.WinkToken=msg.payload.data.access_token;\nnode.log(context.global.WinkToken);\nvar msg ={ \"payload\":\"Done\"}\nreturn msg;","outputs":1,"valid":true,"x":754,"y":89.5,"z":"254ec046.dab14","wires":[["3b3cc9b4.c4c336"]]},{"id":"3b3cc9b4.c4c336","type":"function","name":"Prepare HTTPS requests by device type","func":"var newMsg1 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/light_bulbs\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\nvar newMsg2 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/binary_switches\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg3 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/locks\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg4 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/groups\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\nvar newMsg5 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/sensor_pods\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\nvar newMsg6 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/scenes\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg7 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/thermostats\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg8 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/eggtrays\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg9 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/piggy_banks\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg10 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/propane_tanks\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nvar newMsg11 ={\n    \"url\":\"https://winkapi.quirky.com/users/me/cloud_clocks\",\n    \"method\": \"GET\",\n    headers: {\n        \"Authorization\":\"Bearer \"+context.global.WinkToken\n    }\n}\n\nreturn [newMsg1,newMsg2,newMsg3,newMsg4,newMsg5,newMsg6,newMsg7,newMsg8,newMsg9,newMsg10,newMsg11];\n","outputs":"11","valid":true,"x":1057,"y":87.5,"z":"254ec046.dab14","wires":[["9c127e5.f63ed8"],["a496b574.5b6948"],["11f3c47.fee0c3c"],["4c5e9b4f.b3a164"],["a21867ea.5de798"],["6db18981.924e78"],["218124f0.de7edc"],["303c5fb6.cfc3a"],["1029a128.efd65f"],["30209caf.cfdf64"],["d2451513.2dbae8"]]},{"id":"9c127e5.f63ed8","type":"http request","name":"GetLightBulbs","method":"use","ret":"obj","url":"","x":1536,"y":28.5,"z":"254ec046.dab14","wires":[["73a9eb5.f8c5614"]]},{"id":"73a9eb5.f8c5614","type":"function","name":"SetGlobalLightBulbList","func":"//sample function to cache list of Wink Light bulbs and initialize their state\ncontext.global.WinkLightBulbs =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        context.global.WinkLightBulbs[msg.payload.data[i].name]={\n            \"id\": msg.payload.data[i].light_bulb_id,\n            \"brightness\": (msg.payload.data[i].last_reading.powered ? msg.payload.data[i].last_reading.brightness : 0),\n            \"powered\":msg.payload.data[i].last_reading.powered\n        };\n        \n    }\n\nreturn;","outputs":1,"valid":true,"x":1867,"y":31.5,"z":"254ec046.dab14","wires":[[]]},{"id":"f99bfebe.0664","type":"function","name":"SetGlobalBinarySwitches","func":"//sample function to cache list of Wink Binary Switches and initialize their state\ncontext.global.WinkSwitches =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        context.global.WinkSwitches[msg.payload.data[i].name]= {\n            \"id\":msg.payload.data[i].binary_switch_id,\n            \"powered\":msg.payload.data[i].last_reading.powered\n        };\n    }\n\nreturn;","outputs":1,"valid":true,"x":1875,"y":74.5,"z":"254ec046.dab14","wires":[[]]},{"id":"a496b574.5b6948","type":"http request","name":"GetBinarySwitches","method":"use","ret":"obj","url":"","x":1551,"y":70.5,"z":"254ec046.dab14","wires":[["f99bfebe.0664"]]},{"id":"11f3c47.fee0c3c","type":"http request","name":"GetLocks","method":"use","ret":"obj","url":"","x":1525,"y":113.5,"z":"254ec046.dab14","wires":[["229a0f7b.dd65f"]]},{"id":"229a0f7b.dd65f","type":"function","name":"SetGlobalLocks","func":"//sample function to cache list of Wink Locks and initialize their state\n//I am fetching only Locked state for this example\ncontext.global.WinkLocks =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        context.global.WinkLocks[msg.payload.data[i].name]= {\n            \"name\":msg.payload.data[i].name,\n            \"id\":msg.payload.data[i].lock_id,\n            \"locked\":msg.payload.data[i].last_reading.locked\n        }\n    }\n\nreturn;","outputs":1,"valid":true,"x":1844,"y":117.5,"z":"254ec046.dab14","wires":[[]]},{"id":"fa7bab74.058458","type":"function","name":"SetGlobalGroups","func":"//sample function to cache list of Wink Groups\ncontext.global.WinkGroups =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].members.length >0)\n        {\n            context.global.WinkGroups[msg.payload.data[i].name]= msg.payload.data[i].group_id;\n        }\n    }\n\nreturn;","outputs":1,"valid":true,"x":1850,"y":162.5,"z":"254ec046.dab14","wires":[[]]},{"id":"4c5e9b4f.b3a164","type":"http request","name":"GetGroups","method":"use","ret":"obj","url":"","x":1534,"y":156.5,"z":"254ec046.dab14","wires":[["fa7bab74.058458"]]},{"id":"c94d841e.36b278","type":"function","name":"SetGlobalSensors","func":"//sample function to cache list of Wink Motion Sensors and Trippers and initialize their state\ncontext.global.WinkMSensors =new Object();\ncontext.global.WinkTrippers =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].model_name==\"Motion Sensor\")\n        {\n            context.global.WinkMSensors[msg.payload.data[i].sensor_pod_id] = {\n                \"id\":msg.payload.data[i].sensor_pod_id,\n                \"name\":msg.payload.data[i].name,\n                \"motion\":msg.payload.data[i].last_reading.motion,\n                \"type\": msg.payload.data[i].model_name\n\n            };\n        }\n         if (msg.payload.data[i].model_name==\"Tripper\")\n         {\n            context.global.WinkTrippers[msg.payload.data[i].sensor_pod_id] = {\n                \"id\":msg.payload.data[i].sensor_pod_id,\n                \"name\":msg.payload.data[i].name,\n                \"opened\":msg.payload.data[i].last_reading.opened,\n                \"type\": msg.payload.data[i].model_name,\n\n            };\n        }\n    }\nreturn;","outputs":1,"valid":true,"x":1846,"y":204.5,"z":"254ec046.dab14","wires":[[]]},{"id":"a21867ea.5de798","type":"http request","name":"GetSensors","method":"use","ret":"obj","url":"","x":1539,"y":200.5,"z":"254ec046.dab14","wires":[["c94d841e.36b278"]]},{"id":"6db18981.924e78","type":"http request","name":"GetShortcuts","method":"use","ret":"obj","url":"","x":1533,"y":245.5,"z":"254ec046.dab14","wires":[["b4a63087.4b59d"]]},{"id":"b4a63087.4b59d","type":"function","name":"SetGlobalShortcuts","func":"//sample function to cache list of Wink Shortcuts\ncontext.global.WinkScenes =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].members.length >0)\n        {\n            context.global.WinkScenes[msg.payload.data[i].name]= msg.payload.data[i].scene_id;\n        }\n    }\n\nreturn;","outputs":1,"valid":true,"x":1867,"y":244.5,"z":"254ec046.dab14","wires":[[]]},{"id":"218124f0.de7edc","type":"http request","name":"GetThermostats","method":"use","ret":"obj","url":"","x":1536,"y":294.5,"z":"254ec046.dab14","wires":[["dd2141d0.22dec"]]},{"id":"dd2141d0.22dec","type":"function","name":"SetGlobalThermostats","func":"//sample function to cache list of Wink Thermostats and initialize their state\n//Since I only have NEST termostat i tried to fetch only common items. Various thermostats\n//can have additional data available.\ncontext.global.WinkThermostats =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n            context.global.WinkThermostats[msg.payload.data[i].name]= {\n            \"id\": msg.payload.data[i].thermostat_id,\n            \"name\": msg.payload.data[i].name,\n            \"mode\": msg.payload.data[i].last_reading.mode,\n            \"away\": msg.payload.data[i].last_reading.user_away,\n            \"temperature\":msg.payload.data[i].last_reading.temperature,\n            \"units\":msg.payload.data[i].last_reading.units\n            }\n            \n    }\n\nreturn;","outputs":1,"valid":true,"x":1870,"y":293.5,"z":"254ec046.dab14","wires":[[]]},{"id":"13651326.ec9aed","type":"function","name":"DefineGlobalObjects","func":"//use this function to initialize global variables that can be used in any flow or function\n//and will keep their values while application is running\n\nif (typeof context.global.ignoreMotion === 'undefined')\n{\n    context.global.ignoreMotion=false;\n}\nif (typeof context.global.mediaPlaying==='undefined')\n{\n    context.global.mediaPlaying=false;\n}\nif (typeof context.global.Weather === 'undefined')\n{\n    context.global.Weather=new Object();\n}\nreturn;","outputs":1,"valid":true,"x":305,"y":137.5,"z":"254ec046.dab14","wires":[[]]},{"id":"303c5fb6.cfc3a","type":"http request","name":"GetEggTray","method":"use","ret":"obj","url":"","x":1519,"y":336.5,"z":"254ec046.dab14","wires":[["271eac73.d8e154"]]},{"id":"271eac73.d8e154","type":"function","name":"SetGlobalEggTrays","func":"context.global.WinkEggTrays =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].eggtray_id.length >0)\n        {\n            context.global.WinkEggTrays[msg.payload.data[i].eggtray_id]= {\n                \"id\":msg.payload.data[i].eggtray_id,\n                \"inventory\":msg.payload.data[i].last_reading.inventory\n        };\n    }\n}\nreturn;","outputs":1,"valid":true,"x":1872.25,"y":341,"z":"254ec046.dab14","wires":[[]]},{"id":"1029a128.efd65f","type":"http request","name":"GetPiggyBank","method":"use","ret":"obj","url":"","x":1531.5,"y":383.9999990463257,"z":"254ec046.dab14","wires":[["3261faaf.cd9e06"]]},{"id":"3261faaf.cd9e06","type":"function","name":"SetGlobalPiggyBanks","func":"context.global.WinkPiggyBanks =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].piggy_bank_id.length >0)\n        {\n            context.global.WinkPiggyBanks[msg.payload.data[i].name]= {\n                \"id\":msg.payload.data[i].piggy_bank_id,\n                \"name\":msg.payload.data[i].name,\n                \"balance\":msg.payload.data[i].balance/100,\n                \"goal\":msg.payload.data[i].savings_goal/100\n        };\n    }\n}\nreturn;","outputs":1,"valid":true,"x":1881.5,"y":383,"z":"254ec046.dab14","wires":[[]]},{"id":"30209caf.cfdf64","type":"http request","name":"GetPropaneTanks","method":"use","ret":"obj","url":"","x":1531.666618347168,"y":430.1666784286499,"z":"254ec046.dab14","wires":[["7b9c4130.8463c"]]},{"id":"7b9c4130.8463c","type":"function","name":"SetGlobalPropaneTanks","func":"context.global.WinkPropaneTanks =new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].propane_tank_id.length >0)\n        {\n            context.global.WinkPropaneTanks[msg.payload.data[i].name]= {\n                \"id\":msg.payload.data[i].propane_tank_id,\n                \"name\":msg.payload.data[i].name,\n                \"remaining\":msg.payload.data[i].last_reading.remaining,\n                \"connection\":msg.payload.data[i].last_reading.connection\n        };\n    }\n}\nreturn;","outputs":1,"valid":true,"x":1890.6666259765625,"y":428.16668701171875,"z":"254ec046.dab14","wires":[[]]},{"id":"d2451513.2dbae8","type":"http request","name":"GetCloudClocks","method":"use","ret":"obj","url":"","x":1532.666618347168,"y":477.1666784286499,"z":"254ec046.dab14","wires":[["59a77991.a65888"]]},{"id":"59a77991.a65888","type":"function","name":"SetGlobalCloudClock","func":"context.global.WinkNimbus =new Object();\ncontext.global.WinkNimbus.Dials = new Object();\nfor(i = 0; i<msg.payload.data.length; i++) \n    {                   \n        if (msg.payload.data[i].cloud_clock_id.length >0)\n        {\n            context.global.WinkNimbus[msg.payload.data[i].cloud_clock_id]= {\n                \"id\":msg.payload.data[i].cloud_clock_id,\n                \"name\":msg.payload.data[i].name,\n                \"mac_address\":msg.payload.data[i].mac_address,\n                \n        };\n        for (j=0; j<msg.payload.data[i].dials.length; j++)\n        {\n            context.global.WinkNimbus.Dials[msg.payload.data[i].dials[j].dial_id]={\n                \"id\":msg.payload.data[i].dials[j].dial_id,\n                \"name\":msg.payload.data[i].dials[j].name,\n                \"label\":msg.payload.data[i].dials[j].label,\n                \"dial_index\":msg.payload.data[i].dials[j].dial_index\n            };\n        }\n    }\n}\nreturn;","outputs":1,"valid":true,"x":1876.6666259765625,"y":473.16668701171875,"z":"254ec046.dab14","wires":[[]]},{"id":"699b785c.966488","type":"http in","name":"","url":"/red/getGlobalDataJSon","method":"get","x":210,"y":192.5,"z":"254ec046.dab14","wires":[["db44624f.24bba"]]},{"id":"db44624f.24bba","type":"function","name":"Throw Wink Data","func":"//Sample function that generate a JSON response for a web call with all Wink global\n//variables and cached states. Can be used as an input data source for node freeboard\n//or any other purpose\nmsg.payload.Lights=context.global.WinkLightBulbs;\nmsg.payload.BinarySwitches=context.global.WinkSwitches;\nmsg.payload.Locks=context.global.WinkLocks;\nmsg.payload.MotionSensors=context.global.WinkMSensors;\nmsg.payload.Trippers=context.global.WinkTrippers;\nmsg.payload.Groups=context.global.WinkGroups;\nmsg.payload.Scenes=context.global.WinkScenes;\nmsg.payload.Thermostats=context.global.WinkThermostats;\nmsg.payload.Eggtrays=context.global.WinkEggTrays;\nmsg.payload.Piggybanks=context.global.WinkPiggyBanks;\nmsg.payload.PropaneTanks=context.global.WinkPropaneTanks;\nmsg.payload.Weather=context.global.Weather;\nreturn msg;","outputs":1,"valid":true,"x":533,"y":150.5,"z":"254ec046.dab14","wires":[["ec45064c.13baf8"]]},{"id":"ec45064c.13baf8","type":"http response","name":"","x":466,"y":211.5,"z":"254ec046.dab14","wires":[]},{"id":"9ff88ca1.60077","type":"http in","name":"","url":"/red/getGlobalData","method":"get","x":650,"y":208.5,"z":"254ec046.dab14","wires":[["cd904196.326fc"]]},{"id":"cd904196.326fc","type":"function","name":"Throw Wink Data","func":"WinkLightBulbsStatInd =new Array();\nWinkBinSwitchesInd = new Array();\nvar i=0;\n for (var Name in context.global.WinkLightBulbs)\n    {\n        \n        LightId=context.global.WinkLightBulbs[Name].id\n        WinkLightBulbsStatInd[i]={\n            \"name\":Name,\n            \"id\": context.global.WinkLightBulbs[Name].id,\n            \"brightness\": context.global.WinkLightBulbs[Name].brightness*100,\n            \"powered\":(context.global.WinkLightBulbs[Name].powered ? \"On\":\"Off\")\n        }\n    i++;\n    }\ni=0;\nfor (var Name in context.global.WinkSwitches)\n{\n    LightId=context.global.WinkSwitches[Name].id;\n    WinkBinSwitchesInd[i]={\n        \"name\":Name,\n        \"id\":context.global.WinkSwitches[Name].id,\n        \"powered\":(context.global.WinkSwitches[Name].powered ? \"checked\":\"\")\n    }\n    i++;\n}\n\nmsg.payload.lights=WinkLightBulbsStatInd;\nmsg.payload.switches=WinkBinSwitchesInd;\nreturn msg;","outputs":1,"valid":true,"x":865,"y":209.5,"z":"254ec046.dab14","wires":[["37a93b69.c856c4"]]},{"id":"dfe295da.201d68","type":"http response","name":"","x":1165,"y":203.5,"z":"254ec046.dab14","wires":[]},{"id":"37a93b69.c856c4","type":"template","name":"","field":"payload","format":"handlebars","template":"<html>\n<b>Dimmable Lights</b>\n<table border=1>\n<tr>\n    <th>Name</th>\n    <th>Status</th>\n    <th>Brightness</th>\n    <th>Id</th>\n</tr>\n{{#payload.lights}}\n<tr>\n    <td>{{name}}</td>\n    <td>{{powered}}</td>\n    <td>{{brightness}}</td>\n    <td>{{id}}</td>\n</tr>\n{{/payload.lights}}\n</table>\n<br>\n<b>Switches</b>\n<table border=1>\n<tr>\n    <th>Name</th>\n    <th>Status</th>\n    <th>Id</th>\n</tr>\n{{#payload.switches}}\n<tr>\n    <td>{{name}}</td>\n    <td>{{powered}}</td>\n    <td>{{id}}</td>\n</tr>\n{{/payload.switches}}\n</table>\n</html>","x":1011,"y":205.5,"z":"254ec046.dab14","wires":[["dfe295da.201d68"]]},{"id":"5e36c299.a1c93c","type":"http in","name":"","url":"/red/subscribe/Lights","method":"get","x":152,"y":309.5,"z":"254ec046.dab14","wires":[["4e840244.b17bfc"]]},{"id":"4e840244.b17bfc","type":"function","name":"Wink Subscription resonse","func":"if (msg.payload[\"hub.mode\"]==\"subscribe\")\n{\n    msg.res.send(200,msg.payload[\"hub.challenge\"]);\n}\nelse\n{\n    msg.res.send(400,\"Bad Request darling\");\n}\nreturn msg;","outputs":1,"valid":true,"x":451,"y":339.5,"z":"254ec046.dab14","wires":[[]]},{"id":"eea39baa.115c68","type":"http in","name":"","url":"/red/subscribe/Lights","method":"post","x":154,"y":379.5,"z":"254ec046.dab14","wires":[["31a37a01.ce5c86","a2bc1638.5d43e8"]]},{"id":"31a37a01.ce5c86","type":"debug","name":"","active":false,"console":"false","complete":"payload","x":455,"y":405.5,"z":"254ec046.dab14","wires":[]},{"id":"27b1f238.d84e0e","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"82800","crontab":"","once":true,"x":139,"y":626.5,"z":"254ec046.dab14","wires":[["81b61dca.7e49e"]]},{"id":"81b61dca.7e49e","type":"delay","name":"","pauseType":"delay","timeout":"30","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":298,"y":546.5,"z":"254ec046.dab14","wires":[["8b1f607d.74e0a"]]},{"id":"8b1f607d.74e0a","type":"function","name":"Prepare Wink LightBulbs subscription request","func":"var baseUrl = \"https://winkapi.quirky.com/light_bulbs\";\n//var sensorsList=[\"Bar sensor\",\"Basement Sensor\"];\nvar callbackUrl=context.global.BlueMixUrlBase+\"/red/subscribe/Lights\";\nvar podId=\"N/A\";\n\n   for (var Name in context.global.WinkLightBulbs)\n    {\n        \n            LightId=context.global.WinkLightBulbs[Name].id;\n            node.warn(Name+\" \"+context.global.WinkLightBulbs[Name].id);\n    var newMsg ={\n        \"url\":baseUrl+\"/\"+LightId+\"/subscriptions\",\n        \"method\": \"POST\",\n        headers: {\n            \"Authorization\":\"Bearer \"+context.global.WinkToken,\n            \"Content-Type\":\"application/json\"\n        },\n        payload: {\n            \"callback\": callbackUrl\n        }\n};\nnode.send(newMsg);\n}\nreturn;","outputs":1,"valid":true,"x":460,"y":627.5,"z":"254ec046.dab14","wires":[["442577bf.bbda88","6501f413.9afe0c"]]},{"id":"6501f413.9afe0c","type":"http request","name":"","method":"use","ret":"obj","url":"","x":829,"y":487.5,"z":"254ec046.dab14","wires":[["d2b40238.2d4c","dd21f2a7.22de1"]]},{"id":"d2b40238.2d4c","type":"function","name":"CheckResposeCode","func":"if (typeof context.global.WinkSubscriptions === 'undefined')\n{\n    context.global.WinkSubscriptions = new Object();\n}\nif (msg.statusCode==202)\n{\n    node.warn(\"Subscription ID: \"+msg.payload.data.subscription_id);\n    context.global.WinkSubscriptions[msg.payload.data.subscription_id]={\n        \"subscription_id\": msg.payload.data.subscription_id,\n        \"url_base\":msg.payload.data.topic\n    }\n}\nelse\n{\n    node.warn(\"Subscription issue. Status: \"+msg.statusCode);\n}\nreturn;","outputs":1,"valid":true,"x":1177,"y":569.5,"z":"254ec046.dab14","wires":[[]]},{"id":"dd21f2a7.22de1","type":"debug","name":"","active":false,"console":"false","complete":"false","x":1149,"y":627.5,"z":"254ec046.dab14","wires":[]},{"id":"442577bf.bbda88","type":"debug","name":"","active":false,"console":"true","complete":"true","x":817,"y":536.5,"z":"254ec046.dab14","wires":[]},{"id":"a2bc1638.5d43e8","type":"subflow:a51d6f67.5ae29","x":477,"y":470.5,"z":"254ec046.dab14","wires":[]},{"id":"6787e085.98782","type":"http in","name":"","url":"/red/subscribe/Switches","method":"get","x":789,"y":333.5,"z":"254ec046.dab14","wires":[["92c7f315.6d381"]]},{"id":"92c7f315.6d381","type":"function","name":"Wink Subscription resonse","func":"if (msg.payload[\"hub.mode\"]==\"subscribe\")\n{\n    msg.res.send(200,msg.payload[\"hub.challenge\"]);\n}\nelse\n{\n    msg.res.send(400,\"Bad Request darling\");\n}\nreturn msg;","outputs":1,"valid":true,"x":1088,"y":363.5,"z":"254ec046.dab14","wires":[[]]},{"id":"97fd0243.6803","type":"http in","name":"","url":"/red/subscribe/Switches","method":"post","x":791,"y":403.5,"z":"254ec046.dab14","wires":[["a517269b.5ae8d8","63b206da.9c4df8"]]},{"id":"a517269b.5ae8d8","type":"debug","name":"","active":false,"console":"false","complete":"payload","x":1092,"y":429.5,"z":"254ec046.dab14","wires":[]},{"id":"63b206da.9c4df8","type":"subflow:a51d6f67.5ae29","x":1114,"y":494.5,"z":"254ec046.dab14","wires":[]},{"id":"afe78531.501878","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"82800","crontab":"","once":true,"x":142,"y":683.5,"z":"254ec046.dab14","wires":[["daaf34f6.2550c8"]]},{"id":"daaf34f6.2550c8","type":"delay","name":"","pauseType":"delay","timeout":"30","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":253,"y":771.5,"z":"254ec046.dab14","wires":[["1966408.fe699c"]]},{"id":"1966408.fe699c","type":"function","name":"Prepare Wink Bin Switches subscription request","func":"var baseUrl = \"https://winkapi.quirky.com/binary_switches\";\n//var sensorsList=[\"Bar sensor\",\"Basement Sensor\"];\nvar callbackUrl=context.global.BlueMixUrlBase+\"/red/subscribe/Switches\";\nvar podId=\"N/A\";\n\n   for (var Name in context.global.WinkSwitches)\n    {\n        \n            LightId=context.global.WinkSwitches[Name].id;\n            node.warn(Name+\" \"+context.global.WinkSwitches[Name].id);\n    var newMsg ={\n        \"url\":baseUrl+\"/\"+LightId+\"/subscriptions\",\n        \"method\": \"POST\",\n        headers: {\n            \"Authorization\":\"Bearer \"+context.global.WinkToken,\n            \"Content-Type\":\"application/json\"\n        },\n        payload: {\n            \"callback\": callbackUrl\n        }\n};\nnode.send(newMsg);\n}\nreturn;","outputs":1,"valid":true,"x":467,"y":672.5,"z":"254ec046.dab14","wires":[["c1c152d7.3e3eb","ee9ea528.116158"]]},{"id":"ee9ea528.116158","type":"http request","name":"","method":"use","ret":"obj","url":"","x":831,"y":645.5,"z":"254ec046.dab14","wires":[["bc5375d5.43ac88","df4f8187.20b08"]]},{"id":"bc5375d5.43ac88","type":"function","name":"CheckResposeCode","func":"if (typeof context.global.WinkSubscriptions === 'undefined')\n{\n    context.global.WinkSubscriptions = new Object();\n}\nif (msg.statusCode==202)\n{\n    node.warn(\"Subscription ID: \"+msg.payload.data.subscription_id);\n    context.global.WinkSubscriptions[msg.payload.data.subscription_id]={\n        \"subscription_id\": msg.payload.data.subscription_id,\n        \"url_base\":msg.payload.data.topic\n    }\n}\nelse\n{\n    node.warn(\"Subscription issue. Status: \"+msg.statusCode);\n}\nreturn;","outputs":1,"valid":true,"x":1108,"y":683.5,"z":"254ec046.dab14","wires":[[]]},{"id":"df4f8187.20b08","type":"debug","name":"","active":false,"console":"false","complete":"false","x":1087,"y":721.5,"z":"254ec046.dab14","wires":[]},{"id":"c1c152d7.3e3eb","type":"debug","name":"","active":false,"console":"true","complete":"true","x":816,"y":694.5,"z":"254ec046.dab14","wires":[]},{"id":"445d3340.bba2cc","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"82800","crontab":"","once":true,"x":94,"y":1163.5,"z":"254ec046.dab14","wires":[["c11c692d.3ee398"]]},{"id":"34433fb.fcbbcc","type":"function","name":"Prepare Wink sensor subscription request","func":"var baseUrl = \"https://winkapi.quirky.com/sensor_pods\";\nvar callbackUrl=context.global.BlueMixUrlBase+\"/red/subscribe/sensors\";\n   for (var Id in context.global.WinkMSensors)\n    {\n    \n    node.warn(context.global.WinkMSensors[Id].name+\" \"+Id);\n    var newMsg ={\n        \"url\":baseUrl+\"/\"+Id+\"/subscriptions\",\n        \"method\": \"POST\",\n        headers: {\n            \"Authorization\":\"Bearer \"+context.global.WinkToken,\n            \"Content-Type\":\"application/json\"\n        },\n        payload: {\n            \"callback\": callbackUrl\n        }\n    };\n    node.send(newMsg);\n}\n   for (var Id in context.global.WinkTrippers)\n    {\n \n    node.warn(context.global.WinkTrippers[Id].name+\" \"+Id);\n    var newMsg ={\n        \"url\":baseUrl+\"/\"+Id+\"/subscriptions\",\n        \"method\": \"POST\",\n        headers: {\n            \"Authorization\":\"Bearer \"+context.global.WinkToken,\n            \"Content-Type\":\"application/json\"\n        },\n        payload: {\n            \"callback\": callbackUrl\n        }\n    };\n    node.send(newMsg);\n}\nreturn;","outputs":1,"valid":true,"x":505,"y":1100.5,"z":"254ec046.dab14","wires":[["76a580db.895a8","12079edc.edf861"]]},{"id":"12079edc.edf861","type":"debug","name":"","active":false,"console":"false","complete":"payload","x":920,"y":1046.5,"z":"254ec046.dab14","wires":[]},{"id":"a9e8058e.5617f8","type":"debug","name":"","active":false,"console":"false","complete":"false","x":1041,"y":1186.5,"z":"254ec046.dab14","wires":[]},{"id":"76a580db.895a8","type":"http request","name":"","method":"use","ret":"obj","url":"","x":827,"y":1162.5,"z":"254ec046.dab14","wires":[["47a40cf5.b85bf4","a9e8058e.5617f8"]]},{"id":"47a40cf5.b85bf4","type":"function","name":"CheckResposeCode","func":"if (typeof context.global.WinkSubscriptions === 'undefined')\n{\n    context.global.WinkSubscriptions = new Object();\n}\nif (msg.statusCode==202)\n{\n    node.warn(\"Subscription ID: \"+msg.payload.data.subscription_id);\n    context.global.WinkSubscriptions[msg.payload.data.subscription_id]={\n        \"subscription_id\": msg.payload.data.subscription_id,\n        \"url_base\":msg.payload.data.topic\n    }\n}\nelse\n{\n    node.warn(\"Subscription issue. Status: \"+msg.statusCode);\n}\nreturn;","outputs":1,"valid":true,"x":1052,"y":1135.5,"z":"254ec046.dab14","wires":[[]]},{"id":"c11c692d.3ee398","type":"delay","name":"","pauseType":"delay","timeout":"30","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":229,"y":1098.5,"z":"254ec046.dab14","wires":[["34433fb.fcbbcc"]]},{"id":"b5bd7ac4.4a4288","type":"http in","name":"","url":"/red/subscribe/sensors","method":"get","x":303,"y":913.5,"z":"254ec046.dab14","wires":[["fa56d5b8.05a928"]]},{"id":"fa56d5b8.05a928","type":"function","name":"Wink Subscription resonse","func":"if (msg.payload[\"hub.mode\"]==\"subscribe\")\n{\n    msg.res.send(200,msg.payload[\"hub.challenge\"]);\n}\nelse\n{\n    msg.res.send(400,\"Bad Request darling\");\n}\nreturn msg;","outputs":1,"valid":true,"x":654,"y":912.5,"z":"254ec046.dab14","wires":[[]]},{"id":"46f36db8.b90c94","type":"http in","name":"","url":"/red/subscribe/sensors","method":"post","x":308,"y":978.5,"z":"254ec046.dab14","wires":[["3349f907.ccb606","12e351c3.ed1cae"]]},{"id":"3349f907.ccb606","type":"subflow:82e7b4fe.7d1848","x":590,"y":1038.5,"z":"254ec046.dab14","wires":[]},{"id":"12e351c3.ed1cae","type":"debug","name":"","active":false,"console":"false","complete":"false","x":591,"y":982.5,"z":"254ec046.dab14","wires":[]},{"id":"3da6c575.c2593a","type":"comment","name":"Section for lights status  subscription---------------------------------------------------------------------------------------------------------------------------------","info":"","x":510,"y":265.5,"z":"254ec046.dab14","wires":[]},{"id":"e686fb1c.197908","type":"comment","name":"Initialize section-----------------------------------------------------------------------------------------------------------","info":"","x":363,"y":23.5,"z":"254ec046.dab14","wires":[]},{"id":"c2892dde.3d76d","type":"comment","name":"Sensors subscription--------------------------------------------------------------------------------------------------------------------------------","info":"","x":438,"y":837.5,"z":"254ec046.dab14","wires":[]},{"id":"4c493db5.b3b6c4","type":"comment","name":"locks subscription--------------------------------------------------------------------------------------------------------------------------------","info":"","x":417,"y":1248.5,"z":"254ec046.dab14","wires":[]},{"id":"f2e3391d.0d1cc8","type":"http in","name":"","url":"/red/subscribe/Thermostats","method":"get","x":134.5,"y":1322.5,"z":"254ec046.dab14","wires":[["8486dfb4.7b792"]]},{"id":"8486dfb4.7b792","type":"function","name":"Wink Subscription resonse","func":"if (msg.payload[\"hub.mode\"]==\"subscribe\")\n{\n    msg.res.send(200,msg.payload[\"hub.challenge\"]);\n}\nelse\n{\n    msg.res.send(400,\"Bad Request darling\");\n}\nreturn msg;","outputs":1,"valid":true,"x":499.5,"y":1321.5,"z":"254ec046.dab14","wires":[[]]},{"id":"d866210b.2799e","type":"http in","name":"","url":"/red/subscribe/Thermostats","method":"post","x":136.5,"y":1392.5,"z":"254ec046.dab14","wires":[["2bbf5c1.fd440a4","d9a04095.265fc"]]},{"id":"4493bb4.fbb6c44","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"82800","crontab":"","once":true,"x":85.5,"y":1626.5,"z":"254ec046.dab14","wires":[["5b0f725b.a4f08c"]]},{"id":"8e7cf78.f718308","type":"function","name":"Prepare Wink thermostat subscription request","func":"\nvar baseUrl = \"https://winkapi.quirky.com/thermostats\";\nvar ThermostatId=\"13084\";\nvar callbackUrl=context.global.BlueMixUrlBase+\"/red/subscribe/Thermostats\";\nfor (var Name in context.global.WinkThermostats)\n    {\n    \n    node.warn(context.global.WinkThermostats[Name].name+\" \"+context.global.WinkThermostats[Name].id);\n    var newMsg ={\n        \"url\":baseUrl+\"/\"+context.global.WinkThermostats[Name].id+\"/subscriptions\",\n        \"method\": \"POST\",\n        headers: {\n            \"Authorization\":\"Bearer \"+context.global.WinkToken,\n            \"Content-Type\":\"application/json\"\n        },\n        payload: {\n            \"callback\": callbackUrl\n        }\n};\nnode.send(newMsg);\n}\nreturn;","outputs":1,"valid":true,"x":412.5,"y":1629.5,"z":"254ec046.dab14","wires":[["fe70b9e5.018f48","2e30275a.d1cfd8"]]},{"id":"fe70b9e5.018f48","type":"http request","name":"","method":"use","ret":"obj","url":"","x":701.5,"y":1558.5,"z":"254ec046.dab14","wires":[["f69283f5.096d8","24bb585a.db44a8"]]},{"id":"f69283f5.096d8","type":"function","name":"CheckResposeCode","func":"if (typeof context.global.WinkSubscriptions === 'undefined')\n{\n    context.global.WinkSubscriptions = new Object();\n}\nif (msg.statusCode==202)\n{\n    node.warn(\"Subscription ID: \"+msg.payload.data.subscription_id);\n    context.global.WinkSubscriptions[msg.payload.data.subscription_id]={\n        \"subscription_id\": msg.payload.data.subscription_id,\n        \"url_base\":msg.payload.data.topic\n    }\n}\nelse\n{\n    node.warn(\"Subscription issue. Status: \"+msg.statusCode);\n}\nreturn;","outputs":1,"valid":true,"x":930.5,"y":1633.5,"z":"254ec046.dab14","wires":[[]]},{"id":"24bb585a.db44a8","type":"debug","name":"","active":false,"console":"false","complete":"false","x":746.5,"y":1754.5,"z":"254ec046.dab14","wires":[]},{"id":"2e30275a.d1cfd8","type":"debug","name":"","active":false,"console":"false","complete":"payload","x":356.5,"y":1752.5,"z":"254ec046.dab14","wires":[]},{"id":"2bbf5c1.fd440a4","type":"debug","name":"","active":false,"console":"false","complete":"payload.last_reading","x":494.5,"y":1367.5,"z":"254ec046.dab14","wires":[]},{"id":"5b0f725b.a4f08c","type":"delay","name":"","pauseType":"delay","timeout":"30","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":244.5,"y":1546.5,"z":"254ec046.dab14","wires":[["8e7cf78.f718308"]]},{"id":"3b32a1f4.c4cd5e","type":"http in","name":"","url":"/red/subscribe/Locks","method":"get","x":848.5,"y":1393.5,"z":"254ec046.dab14","wires":[["3489ed96.cb7612"]]},{"id":"3489ed96.cb7612","type":"function","name":"Wink Subscription resonse","func":"if (msg.payload[\"hub.mode\"]==\"subscribe\")\n{\n    msg.res.send(200,msg.payload[\"hub.challenge\"]);\n}\nelse\n{\n    msg.res.send(400,\"Bad Request darling\");\n}\nreturn msg;","outputs":1,"valid":true,"x":1134.5,"y":1396.5,"z":"254ec046.dab14","wires":[[]]},{"id":"19272de1.e6d8d2","type":"http in","name":"","url":"/red/subscribe/Locks","method":"post","x":850.5,"y":1463.5,"z":"254ec046.dab14","wires":[["8736e74f.78c918","85f674fb.7a0988"]]},{"id":"8736e74f.78c918","type":"debug","name":"","active":false,"console":"false","complete":"false","x":1148.5,"y":1469.5,"z":"254ec046.dab14","wires":[]},{"id":"e41f6948.1be098","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"82800","crontab":"","once":true,"x":205.5,"y":1915.5,"z":"254ec046.dab14","wires":[["1588265a.ea77da"]]},{"id":"a4843103.5b7bd","type":"function","name":"Prepare Wink locks subscription request","func":"\nvar baseUrl = \"https://winkapi.quirky.com/locks\";\nvar callbackUrl=context.global.BlueMixUrlBase+\"/red/subscribe/Locks\";\n  for (var Name in context.global.WinkLocks)\n    {\n        node.warn(Name +\" \"+context.global.WinkLocks[Name].id);\n    var newMsg ={\n        \"url\":baseUrl+\"/\"+context.global.WinkLocks[Name].id+\"/subscriptions\",\n        \"method\": \"POST\",\n        headers: {\n            \"Authorization\":\"Bearer \"+context.global.WinkToken,\n            \"Content-Type\":\"application/json\"\n        },\n        payload: {\n            \"callback\": callbackUrl\n        }\n};\nnode.send(newMsg);\n}\nreturn;","outputs":1,"valid":true,"x":532.5,"y":1918.5,"z":"254ec046.dab14","wires":[["77a059f.f885fa8","4e3c2e35.b1c3d"]]},{"id":"77a059f.f885fa8","type":"http request","name":"","method":"use","ret":"obj","url":"","x":821.5,"y":1847.5,"z":"254ec046.dab14","wires":[["bfafd9dd.405028","3940aed0.c6bf52"]]},{"id":"bfafd9dd.405028","type":"function","name":"CheckResposeCode","func":"if (typeof context.global.WinkSubscriptions === 'undefined')\n{\n    context.global.WinkSubscriptions = new Object();\n}\nif (msg.statusCode==202)\n{\n    node.warn(\"Subscription ID: \"+msg.payload.data.subscription_id);\n    context.global.WinkSubscriptions[msg.payload.data.subscription_id]={\n        \"subscription_id\": msg.payload.data.subscription_id,\n        \"url_base\":msg.payload.data.topic\n    }\n}\nelse\n{\n    node.warn(\"Subscription issue. Status: \"+msg.statusCode);\n}\nreturn;","outputs":1,"valid":true,"x":1050.5,"y":1922.5,"z":"254ec046.dab14","wires":[[]]},{"id":"3940aed0.c6bf52","type":"debug","name":"","active":false,"console":"false","complete":"false","x":866.5,"y":2043.5,"z":"254ec046.dab14","wires":[]},{"id":"4e3c2e35.b1c3d","type":"debug","name":"","active":false,"console":"false","complete":"payload","x":476.5,"y":2041.5,"z":"254ec046.dab14","wires":[]},{"id":"1588265a.ea77da","type":"delay","name":"","pauseType":"delay","timeout":"30","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":364.5,"y":1835.5,"z":"254ec046.dab14","wires":[["a4843103.5b7bd"]]},{"id":"85f674fb.7a0988","type":"subflow:36e3ed82.c91c12","x":1156.5,"y":1536.5,"z":"254ec046.dab14","wires":[]},{"id":"d9a04095.265fc","type":"subflow:2310c271.dcef3e","name":"","x":463.5,"y":1424.5,"z":"254ec046.dab14","wires":[]},{"id":"679a8f1a.98657","type":"comment","name":"Weather-------------------------------------------------------------------------------------------------------------------------------","info":"","x":428,"y":2172.5,"z":"254ec046.dab14","wires":[]},{"id":"dc0b7618.23f488","type":"debug","name":"","active":false,"console":"false","complete":"false","x":974,"y":2264.5,"z":"254ec046.dab14","wires":[]},{"id":"ab3a4091.54c5c","type":"http request","name":"Get Weather","method":"use","ret":"obj","url":"","x":463,"y":2269.5,"z":"254ec046.dab14","wires":[["d9611bdb.269ee8"]]},{"id":"ab754e17.548ab","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"420","crontab":"","once":true,"x":173,"y":2286.5,"z":"254ec046.dab14","wires":[["1cd9c8e0.e32637"]]},{"id":"d9611bdb.269ee8","type":"function","name":"Get current weather","func":"var currDate= new Date();\nvar currHours=currDate.getHours();\nvar currMins=currDate.getMinutes();\nif(msg.payload.currently)\n{\ncontext.global.Weather.Offset=msg.payload.offset;\ncontext.global.Weather.CloudCover=Math.round(msg.payload.currently.cloudCover*100);\ncontext.global.Weather.WeatherSummary=msg.payload.currently.summary;\nvar date = new Date(msg.payload.daily.data[0].sunsetTime*1000);\nvar hours = date.getHours();\nvar minutes =date.getMinutes();\ncontext.global.Weather.SunsetHour=hours+context.global.Weather.Offset;\nif (context.global.Weather.SunsetHour<0)\n {\n     context.global.Weather.SunsetHour=24+context.global.Weather.SunsetHour;\n }\ncontext.global.Weather.SunsetMin=minutes;\nvar date = new Date(msg.payload.daily.data[0].sunriseTime*1000);\nvar hours = date.getHours();\nvar minutes =date.getMinutes();\ncontext.global.Weather.SunriseHour=hours+context.global.Weather.Offset;\ncontext.global.Weather.SunriseMin=minutes;\ncontext.global.Weather.outsideTemp=msg.payload.currently.temperature;\ncontext.global.Weather.PrecipationPbb=msg.payload.currently.precipProbability;\ncontext.global.Weather.HumidityOutside=msg.payload.currently.humidity;\ncurrHours=currHours+context.global.Weather.Offset;\nif (currHours<0)\n {\n     currHours=24+currHours;\n }\nif ((currHours > context.global.SunriseHour && currHours < context.global.SunsetHour) || (currHours==context.global.SunsetHour && currMins <context.global.SunsetMin))\n{\n    var timeFrame=\"DAY\";\n}\nelse {\n    var timeFrame=\"NIGHT\";\n}\ncontext.global.Weather.timeframe=timeFrame;\n}\nnewMsg = {\n    payload: {\n        \"offset\":context.global.Weather.Offset,\n        \"time\": currHours+\":\"+currMins,\n        \"CloudCover\": context.global.Weather.CloudCover,\n        \"WeatherSummary\": context.global.Weather.WeatherSummary,\n        \"sunsetTime\": context.global.Weather.SunsetHour+\":\"+context.global.Weather.SunsetMin,\n        \"sunriseTime\": context.global.Weather.SunriseHour+\":\"+context.global.Weather.SunriseMin,\n        \"outsideTemp\": context.global.Weather.outsideTemp,\n        \"precipation\": context.global.Weather.PrecipationPbb+\" %\",\n        \"timeframe\": context.global.Weather.timeframe\n    }\n};\nreturn newMsg;","outputs":1,"valid":true,"x":698,"y":2278.5,"z":"254ec046.dab14","wires":[["dc0b7618.23f488"]]},{"id":"1cd9c8e0.e32637","type":"function","name":"","func":"var newMsg ={\n        \"url\":\"https://api.forecast.io/forecast/\"+context.global.forecastIoApiKey+\"/\"+context.global.HomeLocation.lon+\",\"+context.global.HomeLocation.lat,\n        \"method\": \"GET\"\n}\nreturn newMsg;","outputs":1,"valid":true,"x":323,"y":2353.5,"z":"254ec046.dab14","wires":[["ab3a4091.54c5c","f70c7396.08f39"]]},{"id":"f70c7396.08f39","type":"debug","name":"","active":false,"console":"false","complete":"true","x":510,"y":2402.5,"z":"254ec046.dab14","wires":[]}]