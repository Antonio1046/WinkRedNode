[{"id":"8c145009.73ebb","type":"subflow","name":"Update Sensor Status","in":[{"x":97,"y":71,"wires":[{"id":"d4cfffe5.2b3"}]}],"out":[]},{"id":"d4cfffe5.2b3","type":"function","name":"Cache sensor status","func":"if (msg.payload.model_name==\"Motion Sensor\")\n{\n    context.global.WinkMSensors[msg.payload.sensor_pod_id].motion=msg.payload.last_reading.motion;\n    node.warn(context.global.WinkMSensors[msg.payload.sensor_pod_id].name+\":motion \"+ msg.payload.last_reading.motion);\n}\nif (msg.payload.model_name==\"Tripper\")\n{\n    context.global.WinkTrippers[msg.payload.sensor_pod_id].opened=msg.payload.last_reading.opened;\n    node.warn(context.global.WinkTrippers[msg.payload.sensor_pod_id].name+\":opened \"+msg.payload.last_reading.opened );\n}\nmsg._id=msg.payload.sensor_pod_id;\nreturn msg;","outputs":1,"valid":true,"x":248,"y":93,"z":"8c145009.73ebb","wires":[[]]},{"id":"fcaae060.03552","type":"http in","name":"Tell wink it can send us data","url":"/api/subscribe/secondFloor","method":"get","x":141,"y":48,"z":"5084ab3c.af7b54","wires":[["1fb952a3.e046ad"]]},{"id":"1fb952a3.e046ad","type":"function","name":"Wink Subscription resonse","func":"if (msg.payload[\"hub.mode\"]==\"subscribe\")\n{\n    msg.res.send(200,msg.payload[\"hub.challenge\"]);\n}\nelse\n{\n    msg.res.send(400,\"Bad Request darling\");\n}\nreturn msg;","outputs":1,"valid":true,"x":440,"y":78,"z":"5084ab3c.af7b54","wires":[[]]},{"id":"7d01136d.82feec","type":"http in","name":"","url":"/api/subscribe/secondFloor","method":"post","x":135,"y":140,"z":"5084ab3c.af7b54","wires":[["49944300.b66bbc","5287653.fad789c"]]},{"id":"5287653.fad789c","type":"subflow:8c145009.73ebb","x":207,"y":249,"z":"5084ab3c.af7b54","wires":[]},{"id":"49944300.b66bbc","type":"switch","name":"Bedroom/Bedroom2/Office","property":"payload.name","rules":[{"t":"eq","v":"Bedroom Sensor"},{"t":"eq","v":"Bedroom2 Sensor"},{"t":"eq","v":"Office Sensor"}],"checkall":"false","outputs":3,"x":503,"y":213,"z":"5084ab3c.af7b54","wires":[["792dd3af.86d22c","81d79190.7e287"],["699602e5.9669fc"],["6b8d8b50.947274"]]},{"id":"1703bdbf.e8fc42","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"82800","crontab":"","once":true,"x":118,"y":527,"z":"5084ab3c.af7b54","wires":[["8996efdb.76691"]]},{"id":"8996efdb.76691","type":"delay","name":"","pauseType":"delay","timeout":"30","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":208,"y":401,"z":"5084ab3c.af7b54","wires":[["c9886922.367798"]]},{"id":"c9886922.367798","type":"function","name":"Prepare Wink sensor subscription request","func":"//sample function to subscribe for an wink callback event \nvar baseUrl = \"https://winkapi.quirky.com/sensor_pods\"; //wink api base url for sensors\nvar callbackUrl=\"http://timothyr.no-ip.org:1880/api/subscribe/secondFloor\";  //node-red api entry point for processing data\nvar sensorsList=[\"Bedroom Sensor\",\"Office Sensor\",\"Bedroom2 Sensor\"]; //list of Wink sensors you what that api entry point to serve\nvar podId=\"N/A\";\nfor (i=0;i<sensorsList.length;i++)\n{\n   for (var Id in context.global.WinkMSensors)\n    {\n        if (context.global.WinkMSensors[Id].name==sensorsList[i])\n        {\n            podId=Id;\n            break;\n        }\n    }\n    node.warn(context.global.WinkMSensors[podId].name+\" \"+podId);\n    var newMsg ={\n        \"url\":baseUrl+\"/\"+podId+\"/subscriptions\",\n        \"method\": \"POST\",\n        headers: {\n            \"Authorization\":\"Bearer \"+context.global.WinkToken,\n            \"Content-Type\":\"application/json\"\n        },\n        payload: {\n            \"callback\": callbackUrl\n        }\n};\nnode.send(newMsg);\n}\nreturn;","outputs":1,"valid":true,"x":460,"y":403,"z":"5084ab3c.af7b54","wires":[["cec4a9fb.313b58","63207a4f.9cdf84"]]},{"id":"cec4a9fb.313b58","type":"http request","name":"","method":"use","ret":"obj","url":"","x":699,"y":550,"z":"5084ab3c.af7b54","wires":[["a7a92341.5856e","7980658c.867f9c"]]},{"id":"a7a92341.5856e","type":"function","name":"CheckResposeCode","func":"if (typeof context.global.WinkSubscriptions === 'undefined')\n{\n    context.global.WinkSubscriptions = new Object();\n}\nif (msg.statusCode==202)\n{\n    node.warn(\"Subscription ID: \"+msg.payload.data.subscription_id);\n    context.global.WinkSubscriptions[msg.payload.data.subscription_id]={\n        \"subscription_id\": msg.payload.data.subscription_id,\n        \"url_base\":msg.payload.data.topic\n    }\n}\nelse\n{\n    node.warn(\"Subscription issue. Status: \"+msg.statusCode);\n}\nreturn;","outputs":1,"valid":true,"x":949,"y":557,"z":"5084ab3c.af7b54","wires":[[]]},{"id":"7980658c.867f9c","type":"debug","name":"","active":false,"console":"false","complete":"false","x":713,"y":653,"z":"5084ab3c.af7b54","wires":[]},{"id":"63207a4f.9cdf84","type":"debug","name":"","active":false,"console":"false","complete":"payload","x":323,"y":651,"z":"5084ab3c.af7b54","wires":[]}]